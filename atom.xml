<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.jboss.org/blogs.html</id>
    <title>JBoss Blogs</title>
    <updated>2021-06-21T14:10:00.002Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.jboss.org/blogs.html"/>
    <subtitle>aggregation of various JBoss blogs</subtitle>
    <icon>https://www.jboss.org/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Kamelet for streaming to Kafka!]]></title>
        <id>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/mmaYAtRaYw0/kamelet-for-streaming-to-kafka.html</id>
        <link href="http://feedproxy.google.com/~r/blogspot/hFXzh/~3/mmaYAtRaYw0/kamelet-for-streaming-to-kafka.html"/>
        <updated>2021-06-21T14:10:00.002Z</updated>
        <content type="html"><![CDATA[You want Kafka to stream and process the data. But what comes after you set up the platform, planned the partitioning strategy, storage options, and configured the data durability? Yes! How to stream data in and out of the platform. And this is exactly what I want to discuss today.   THE BACKGROUND  Before we go any further, let’s see what Kafka did to make itself blazing fast? Kafka is optimized for writing the stream data in binary format, that basically logs everything directly to the file system (Sequential I/O) and makes minimum effort to process what's in the data (Optimize for Zero Copy).  Kafka is super-charged at making sure data is stored as quickly as possible, and quickly replicating for a large number of consumers. But terrible at communication, the client that pushes content needs to SPEAK Kafka.   Here we are, having a super fast logging and distributing platform, but dumb at connecting to other data sources. So who is going to validate the data sent in/out of the kafka topic? What if I need to transform the data content? Can I filter the content partially? You guessed it. The clients.  We now need smart clients that do most of the content processing and speak Kafka at the same time.   WHAT ARE THE MOST USED CONNECT TOOLS TODAY FOR KAFKA USERS?   Kafka Connect is what the majority of the Kafka users are using today. It has been broken down into many parts such as connector, tasks, worker, converter, transformer and error handler. You can view the task and worker as how the data flow is executed. For a developer they will be mostly configuring the rest 4 pieces.    * Connector - Describes the kind of source or the sink of the data flow,    translating between the client/Kafka protocol, and knowing the libraries    needed.    * Converter - Converts the binary to the data format accepted by the client or    vice versa   (Currently there is limited support from Confluent, they  only    do data format) And does data format validation.    * Transformer - Reads into the data format, can help make simple changes to    individual data chunks. Normally you would do filtering, masking or any minor    changes. ( This does not support simple calculations)   * Error Handler - Define a place to store problematic data (Confluent : Dead    letter queues are only applicable for sink connectors.)  After configuring, it then uses Task and Worker to determine how to scale and execute that pipe data in/out of Kaka. For instance, running a cluster of works to scale and allow tasks to perform parallel processing of streams.           Camel is another great option!     Apache Camel is a GREAT alternative for connecting Kafka too. Here’s what Camel has to offer.    * Connector - Camel has more than 300+ connectors, you can use it to configure    as source or the sink of the data flow, translating between the    100+client/Kafka protocol.   * Converter -  Validate and transform data formats with simple configuration.   * Transformer - Not only does simple message modification, it can apply    integration patterns that are good for streaming processing, such as split,    filter, even customization of processes.     * Error Handler - Dead letter queue, catching exceptions.   There are also many ways to run Camel. You can have it running as a standalone single process that directly streams data in/out of Kafka . But Kamel works EXCEPTIONALLY well on Kubernetes. It run as a cluster of instances, that execute in parallel to maximize the performance. It can be deployed as native image through Quarkus to increase density and efficiency. The platform OpenShift (Kubernetes) allows users to control the scaling of the instance. Since it’s on K8s, another advantage is that operation can operate these as a unify platform, along with all other microservices.         WHY KAMELET?  (THIS IS THE WAY!)  One of the biggest hurdles for non Camel developers is, they need to learn another framework, maybe another language (Non-Java) to be able to get Camel running. What if we can smooth the learning curve and make it simple for newcomers? We see a great number of use cases where the masking and filtering are implemented company wide. Being able to build a repository and reuse these logics will make developers work more efficiently.   PLUG & PLAY   You can look at Kamelets as templates, where you can define where to consume data from and send data to, does filtering, masking, simple calculation logic. Once the template is defined, it can be made available to the teams, that simply plugs it into the platform, configure for their needs (with either Kamelet Binding or another Camel route), and boom. The underlying Camel K will do the hard work for you, compile, build, package and deploy. You have a smart running data pipeline streams into Kafka.     ASSEMBLE & REUSE  In a data pipeline, sometimes, you just need that bit of extra work on the data. Instead of defining a single template for each case, you can also break it down into smaller tasks. And assemble these small tasks to perform in the pipeline for each use case. .       STREAMS & SERVERLESS  Kamelets allows you to stream data to/from either Kafka store or Knative event channel/broker. To be able to support Knative, Kamelet can help translate messages to CloudEvents, which is the CNCF standard event format for serverless. And also apply any pre/post-processing of the content in the pipeline.   SCALABLE & FLEXIBLE  Kamelet lives on Kubernetes(can also run standalone), which gives you a comprehensive set of scaling tools, readiness, liveness check and scaling configuration. They are all part of the package. It scales by adding more instances. The UI on the OpenShift Developer Console can assist you to fill in what’s needed. And also auto discover the available source/sink for you to choose where the data pipelines start or end.   UNIFY FOR DEV & OPS   In many cases, DevOps engineers are often required to develop another set of automation tools for the deployment of connectors. Kamelet can run like other applications on kubernetes, the same tools can be used to build, deploy and monitor these pipelines. The streamline DEVOPS experience can help speed up the automation setup time.    MARKETPLACE  List of catalogues that are already available  (Not enough?). If you just want to stream data directly, simple pick the ones you need and start streaming. And we welcome your contributions too.       What to know more about Kamelet? Take a look at this video, where it talks about why using Kamelet for streaming data to Kafka with a demo.    Introduction   What is Kamelet?    Why do you need connectors to Kafka, and what is required in each connector?    Why Kamelet?    Marketplace of Kamelet!    Using Kamelet as a Kafka user    Building a Kamelet    Running Kamelet on Kubernetes    Demo    Red Hat OpenShift Streams in action    Kamelets in action   ]]></content>
        <author>
            <name>CHRISTINA の J老闆</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloud adoption - Common architectural elements]]></title>
        <id>http://feedproxy.google.com/~r/schabell/jboss/~3/MLExTSq6JLQ/cloud-adoption-common-architectural-elemetns.html</id>
        <link href="http://feedproxy.google.com/~r/schabell/jboss/~3/MLExTSq6JLQ/cloud-adoption-common-architectural-elemetns.html"/>
        <updated>2021-06-21T05:00:00.062Z</updated>
        <content type="html"><![CDATA[Part 2 - Common architectural elements  In our  from this series we introduced a use case around cloud adoption for retail stores.    The process was laid out how we've approached the use case and how portfolio solutions are the base for researching a generic architecture.    The only thing left to cover was the order in which you'll be led through the architectural details.  This article starts the real journey at the very top, with a generic architecture from which we'll discuss the common architectural elements one by one.   This will start our journey into the logical elements that make up the cloud adoption architecture.     ARCHITECTURE REVIEW  As mentioned before, the architectural details covered here are base on real solutions using open source technologies. The example scenario presented here is a generic common architecture that was uncovered researching those solutions. It's our intent to provide guidance and not deep technical details.  This section covers the visual representations as presented, but it's expected that they'll be evolving based on future research. There are many ways to represent each element in this architecture, but we've chosen a format that we hope makes it easy to absorb. Feel free to post comments at the bottom of this post, or  with your feedback.     FROM SPECIFIC TO GENERIC  Before diving in to the common elements, it might be nice to understand that this is not a catch all for every possible solution. It's a collection of identified elements that we've uncovered in multiple customer implementations. These elements presented here are then the generic common architectural elements that we've identified and collected in to the generic architecture.    It's our intent to provide an example for guidance and not deep technical details. You're smart enough to figure out wiring integration points in your own architectures. You're capable of slotting in the technologies and components you've committed to in the past where applicable.  It's our job here to describe the architecture generic components and outline a few specific cases with visual diagrams so that you're able to make the right decisions from the start of your own projects.   Another challenge has been how to visually represent the architecture. There are many ways to represent each element, but we've chosen some icons, text and colours that we hope are going to make it all easy to absorb.    Now let's take a quick tour of the generic architecture and outline the common elements uncovered in my research.      CORE DATA CENTER   The logical view splits this solution space into several identifiable collections where the cloud adoption solution is laid out. These logical collections ensure that your organisation can provide effective automation for deploying and managing workloads across multiple cloud infrastructures according to performance, security, compliance, and cost requirements.   The first collection on the left is tagged as the core data center and holds all the logical elements needed to put together the images for your infrastructure and workloads to run on. You find a source code management (SCM) system, an image store, and the server image build pipeline. All elements used by an organisation to create, manage, store, and testing images for distribution.      INFRASTRUCTURE MANAGEMENT    The infrastructure management collection is where intelligence is gathered, monitoring is performed, and based on the findings, triggers automated reactions and orchestrates updates to your infrastructure anywhere in your organisation.   A smart management element is used for tracking, managing, auditing, and collecting data on your entire infrastructure to ensure that baselines are met. Based on your choices and the results of data collected, your insights trigger corrections, updates, or even rolling out of new infrastructure across any of the cloud infrastructure your organisation might be using.   The automation orchestration element is tasked with orchestration of infrastructure tasks in a fully automated and pre-tested fashion. This element is directed to execute certain tasks in a certain order based on the findings of the smart management element.     CLOUD INFRASTRUCTURE   This collection of elements are all aspects of an organisations cloud infrastructure. The idea is that organisations are at the very least moving to put the cloud-native experience together for their development teams to execute on their business goals while supporting an agile customer experience.    To provide a cloud experience, existing physical data center resources might be the starting point to be offered to the organisation with a cloud-like experience. Once this is completed, the organisation then has a private cloud to build, test, and run its workloads on.    Finally, as needed, organisations can expand services and applications out into one or more of the public cloud providers. All of these are shown here as a Red Hat Enterprise Linux (RHEL) host element with an image registry to facilitate the deployment of infrastructure, services, and applications across the entire hybrid cloud infrastructure.      CLOUD SERVICES    Last but not least, there is a need for cloud services that can facilitate all it takes to span the monitoring, analysing, and deployment of an organisations workloads across their hybrid cloud infrastructure.   The first element is that of enterprise operating automation which facilitates consistent, repeatable, and tested infrastructure automation tasks as needed by the other elements managing the hybrid cloud infrastructure.    Next, there is the insights platform. This is key to monitoring and data collection around the entire hybrid cloud infrastructure. Based on this data and working together with insights services, automated actions can take place around updates, security patches, infrastructure rollouts, workload management, and workload migrations. This is the key to an organisations ability to successfully adopt a truly hybrid cloud infrastructure.     WHAT'S NEXT  This was just a short overview of the common generic elements that make up our architecture for the cloud adoption use case.    An overview of this series on the cloud adoption portfolio architecture:   1.   2.   3. Example adoption architecture  Catch up on any past articles you missed by following any published links above.  Next in this series, taking a look at an example adoption architecture.   (Article co-authored by , Chief Architect Retail, Red Hat) ]]></content>
        <author>
            <name>Eric D. Schabell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Book on Keycloak]]></title>
        <id>https://www.keycloak.org//2021/06/book.adoc.html</id>
        <link href="https://www.keycloak.org//2021/06/book.adoc.html"/>
        <updated>2021-06-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[The first ever book dedicated to Keycloak was recently launched, and is now.    The book introduces you to Keycloak, giving a good fundamental of everything you need to know to get started with Keycloak. From installing, securing applications, and deploying to production.  If you are new to Keycloak, or even if you have been using Keycloak for a while, you should consider getting yourself a copy.]]></content>
        <author>
            <name>Stian Thorgersen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keycloak 14.0.0 released]]></title>
        <id>https://www.keycloak.org//2021/06/keycloak-1400-released.html</id>
        <link href="https://www.keycloak.org//2021/06/keycloak-1400-released.html"/>
        <updated>2021-06-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[To download the release go to .   HIGHLIGHTS   CLIENT POLICIES AND FINANCIAL-GRADE API (FAPI) SUPPORT  The Keycloak server has now official support for client policies and Financial-grade API (FAPI). This capability was previewed in earlier versions, but now it is more polished and properly documented. Thanks to , who did most of the work on this. Also thanks to and , who did a great deal of the work on this feature as well. Finally thanks to all the members of the for their help and feedback.   IMPROVEMENTS TO USER PROFILE SPI AND SUPPORT FOR DECLARATIVE CONFIGURATION  In this version, there were several improvements to the User Profile SPI in order to prepare the ground on how users profiles are managed in Keycloak.  One of these improvements is the support for configuring user profiles through the administration console. For more details proceed to  Thanks to the community and all the individuals involved in this effort.   IMPROVEMENTS TO OFFLINE SESSIONS  Offline session preloading has been improved and should be faster thanks to .  As a preview feature, offline session preloading can be skipped in favor of lazy loading thanks to 's efforts. This feature has to be explicitly activated in the server configuration, see Server administration guide for details.   OTHER IMPROVEMENTS   * The support for configuring maximum number of active authentication sessions.    The default value is set to 300 authentication sessions (browser tabs) per a    browser’s session   ALL RESOLVED ISSUES  The full list of resolved issues are available in   UPGRADING  Before you upgrade remember to backup your database and check the for anything that may have changed.]]></content>
        <author>
            <name/>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 18 June 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-06-18.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-06-18.html"/>
        <updated>2021-06-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, keycloak, kogito, infinispan, vert.x, java, narayana">
      <h1>This Week in JBoss - 18 June 2021</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_release_roundup">Release roundup</h2>
<div class="sectionbody">
<p>Congrats to all the teams on their hard work!</p>
<div class="ulist square">
<ul class="square">
<li>
<p><a href="https://www.keycloak.org//2021/06/keycloak-1400-released.html/">Keycloak 14.0.0</a> is released! This release adds Financial-grade API (FAPI) support and lots of improvements.</p>
</li>
<li>
<p><a href="http://bytemanblog.blogspot.com/2021/06/byteman-4016-has-been-released.html">Byteman 4.0.16</a> has shipped and is now the latest version if you’re running Java version 9 to 17.</p>
</li>
<li>
<p><a href="https://www.wildfly.org//news/2021/06/17/WildFly24-Final-Released/">WildFly 24</a> is here and brings lots of awesome work. There’s too much to sum up here so click the link and check out the release notes.</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-2-0-0-cr3-released/">Quarkus 2.0.0.CR3</a> is here. Towards 2.0 final!!</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-13-7-final-released/">Quarkus 1.13.7.Final</a> is available as a maintenance release.</p>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-4-1-0/">Eclipse Vert.x 4.1.0</a> is available with lots of exciting features. Go download and start using it!</p>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-3-9-8/">Eclipse Vert.x 3.9.8</a> is also here with numerous bug fixes.</p>
</li>
<li>
<p><a href="https://jbossts.blogspot.com/2021/06/narayana-5120final-released.html">Narayana 5.12.0.Final</a> has been shipped. This version gives several enhancements and fixes some bugs. Go grab it!</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_from_the_community">From the community</h2>
<div class="sectionbody">
<p>Katia and Ryan on the Infinispan team released a nice two-part series of posts that explained how they built an online game across data centers and multiple cloud providers for this year’s Summit keynote demonstration.
In the first part, <a href="https://developers.redhat.com/articles/2021/05/28/building-real-time-leaderboard-red-hat-data-grid-and-quarkus-hybrid-kubernetes">Building a real-time leaderboard with Infinispan and Quarkus on a hybrid Kubernetes deployment</a>, Katia and Ryan describe how they designed and implemented various services using Infinispan and Quarkus.
With part two, they explain how using the Infinispan Operator greatly reduced the complexity of standing up their clusters, <a href="https://developers.redhat.com/articles/2021/06/08/create-and-manage-red-hat-data-grid-services-hybrid-cloud">Creating and managing Infinispan services in the hybrid cloud</a>.</p>
<p>Tommaso Teofili’s recent post, <a href="https://blog.kie.org/2021/06/autotuning-lime-explanations-with-few-predictions.html">Autotuning LIME explanations with few predictions</a>, outlines how to automatically tune LIME hyperparameters to achieve more stable explanations and comes with a PR that lets you dig into all the technical aspects covered in the post.</p>
<p><a href="https://blog.kie.org/2021/06/rhpam-connectivity-to-external-amq-configurations-in-openshift.html">RHPAM connectivity to external AMQ configurations in OpenShift</a> by Michael Perez takes an in-depth look at connecting to an external AMQ with the aim of lowering the memory footprint for RHPAM pods as well as other deployment optimizations.
It’s an interesting read with good technical considerations to sink your teeth into so go give it a look.</p>
<p>Over on the WildFly blog, Jeff Mesnil walks us through the process of changing logging levels for cloud-based WildFly applications on the fly.
Take a look at Jeff’s script and straightforward commands to help you easily modify logs for debugging in his post, <a href="https://www.wildfly.org/news/2021/06/15/change-log-level-wildfly-cloud/">How to Change Logging Level for WildFly on the Cloud</a>.</p>
<p>Bilgin Ibryam is back with a post on the Red Hat Developer blog titled <a href="https://developers.redhat.com/articles/2021/06/14/application-modernization-patterns-apache-kafka-debezium-and-kubernetes">Application modernization patterns with Apache Kafka, Debezium, and Kubernetes</a>.
I really enjoyed this one as Bilgin expertly puts application modernization in context and examines different patterns, tools, and open-source ecosystems that can help you migrate brown-field systems to more modern, event-driven services as well as design green-field services that are future proof by providing the ability to evolve over time.
Be sure to catch up on this one if you haven’t already read it.</p>
<p>Just in time for your summer reading list the first book dedicated to Keycloak has been published, <a href="https://www.keycloak.org/2021/06/book.adoc">Keycloak - Identity and Access Management for Modern Applications</a>.
Congrats to authors Stian Thorgersen and Pedro Igor Silva.
It’s an impressive achievement and no doubt the book is full of invaluable expertise.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s corner</h2>
<div class="sectionbody">
<p>In our last editorial we mentioned Eric Schabell’s series on a retail data framework.
Since then Eric has obviously been hard at work as his next two posts in the series, <a href="https://www.schabell.org/2021/05/retail-data-framework-common-architectural-elements.html">Retail data framework - Common architectural elements</a> and <a href="https://www.schabell.org/2021/06/retail-data-framework-example-data-architecture.html">Retail data framework - Example data architecture</a>.
If you haven’t caught up on that series yet, then I highly recommend taking a look to learn about data flows and management in a retail context.</p>
<p>Eric has also posted the first in his next series, <a href="https://www.schabell.org/2021/05/cloud-adoption-an-architectural-introduction.html">Cloud adoption - An architectural introduction</a>.
This series is focused on proven integrations, structures, and interactions with the goal of enabling readers to implement and adopt cloud-based solutions using open-source technologies.
I’m really excited about this series and can’t wait to see what Eric brings in his next posts.</p>
</div>
</div>
<div class="sect1">
<h2 id="_developers_on_film">Developers on film</h2>
<div class="sectionbody">
<p>Get your popcorn ready and sit back to watch some videos from our community.
Here are my top picks for this week’s editorial:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://youtu.be/ETTMBWEBfLY">Quarkus Insights #51: Answering questions from the community</a></p>
</li>
<li>
<p><a href="https://youtu.be/pYhaZYX0kq4">Quarkus Insights #53: Java Memory - why should you care</a></p>
</li>
<li>
<p><a href="https://youtu.be/ngXii5sA_nA">Building Kubernetes Native Java with the Quarkus CLI</a></p>
</li>
</ul>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
        <category label="kogito" term="kogito"/>
        <category label="infinispan" term="infinispan"/>
        <category label="vert.x" term="vert.x"/>
        <category label="java" term="java"/>
        <category label="narayana" term="narayana"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Red Hat Summit 2021 (Ask the Experts) - An open approach to solution architectures (video)]]></title>
        <id>http://feedproxy.google.com/~r/schabell/jboss/~3/IThWqUU8sTQ/red-hat-summit-2021-ask-the-experts-open-approach-solution-architectures-video.html</id>
        <link href="http://feedproxy.google.com/~r/schabell/jboss/~3/IThWqUU8sTQ/red-hat-summit-2021-ask-the-experts-open-approach-solution-architectures-video.html"/>
        <updated>2021-06-17T05:00:00.042Z</updated>
        <content type="html"><![CDATA[This year the  event is a bit different as we bridge the gap from pandemic reality to hopefully a form of normalcy.   As the Red Hat Summit site explains to us, this "...event is expanding to become an all-new, flexible conference series, consisting of a 2‑part immersive virtual experience as well as a global tour of small-scale, in-person events. This series will create collective opportunities to share experiences, innovations, and insights."   and the on-demand recording is available if you missed it.   The event is free, so if you have not yet done so, register and you have full access to all the recordings. Now let's take a look at how to jump straight to our session  This year I'm involved with some friends and colleagues in a few Ask The Experts sessions where you get a live session on a topic with several experts available to ask anything you like about the topic.     I've done  in April, and I'm going to be involved in the following session next week:         Solution architectures are the detailed and structured descriptions of the features, process, and behavior of a solution. It acts as the base of the solution to define, deliver, manage and operate the development process of the solution. It identifies the alternatives of the solutions and its components.   In this session, we'll highlight the process that Red Hat uses to compile and publish solution architectures for various business and technology scenarios that are based on actual use cases pertinent to our global customers and partners. It includes the key capabilities of continuous global collaboration with the engineering teams.    Date: Tuesday, Jun 15 Time: 16:30 - 17:00 CEST Speakers:   * Eric D. Schabell, Portfolio Architect Technical Director, Red Hat  * Will Nix, Senior Manager, Red Hat  * E.G Nadhan, Chief Architect and Strategist, Red Hat    I hope you enjoyed our discussions, the questions we had time to answer, and the information we shared around how we are developing our open architectures to share with you. ]]></content>
        <author>
            <name>Eric D. Schabell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WildFly 24 is released!]]></title>
        <id>https://wildfly.org//news/2021/06/17/WildFly24-Final-Released/</id>
        <link href="https://wildfly.org//news/2021/06/17/WildFly24-Final-Released/"/>
        <updated>2021-06-17T00:00:00.000Z</updated>
        <content type="html"><![CDATA[I’m pleased to announce that the WildFly 24 Final zip is now available .  Work during the WildFly 24 development cycle has been primarily oriented toward bug fixing, plus the . We’ve also been doing work on getting WildFly Preview to run well on SE 16 and 17, with a goal of being able to support SE 17 in standard WildFly later this year.  There are a number of new features in 24 though:   NEW FEATURES   * The MicroProfile Reactive Streams Operators subsystem has been updated to    support .   * It is now possible to strings to verify client-supplied passwords against    passwords stored in a Properties Realm, Filesystem Realm, JDBC Realm and LDAP    realm in the Elytron subsystem.   * Older JDK versions use the protocol SSLv2Hello in the initial handshake    message where the SSL version that will be used for the rest of the handshake    is negotiated. Although the use of this protocol is discouraged and disabled    by default in newer JDK versions, in order to ensure feature parity with    legacy security configurations it is now possible to in the Elytron    subsystem.   * Elytron previously supported configuring one certificate revocation list.    However, if several Certificate Authorities were used, there was no way to    configure more than one certificate revocation file. It is now possible to in    Elytron.   * A todo-backend showcases how WildFly can be deployed on OpenShift to provide    a backend that exposes an HTTP API (using Jakarta RESTful Web Services) and    stores data to a DB (using Jakarta Persistence).   CODEHAUS JACKSON REMOVAL  Please note that in WildFly 24 we’ve from the server distribution, along with support for the Jakarta RESTful Web Services provider that used Codehaus Jackson. For many years now a provider based on the successor FasterXML Jackson project has been available and is the preferred option for those wanting to use Jackson.   WILDFLY PREVIEW  As I when we released WildFly 22 Alpha1, along with our traditional Jakarta EE 8 distribution we want to give our users a preview of what will be coming in WildFly as we move on to EE 9 and later. We call this distribution "WildFly Preview". The WildFly 24.0.0.Final release includes an update to WildFly Preview. Even though this is coming from a .Final tag of the WildFly codebase, WildFly Preview should always be regarded as a tech-preview/beta distribution.  EE 9 is primarily about implementing the necessary change in the Jakarta EE APIs from the javax.* package namespace to the jakarta.* namespace. This is a big change that is going to take a while to percolate through the EE ecosystem, e.g. for the many projects that compile against the EE APIs to provide versions that use jakarta.*. While this happens we want to continue to deliver new features and fixes to our community, so the primary WildFly distribution will continue to provide the EE 8 APIs. This will continue at least through WildFly 25.   STANDARDS SUPPORT  The standard WildFly 24.0.0 distribution is a Jakarta EE 8 compatible implementation, compatible with both the Full Platform and the Web Profile. Evidence supporting our certification is available and .  Beginning with WildFly 23 we are exclusively focusing on the Jakarta EE test suite for EE certification / compliance.  The standard WildFly 24 distribution is also a compliant implementation of the MicroProfile 4.0 platform specification.  The WildFly Preview distribution released today is a compatible implementation of both the Jakarta EE 9.1 Web Profile and the Full Platform. Evidence supporting our certification is available and .   JDK SUPPORT  Our recommendation is that you run WildFly on the most recent long-term support JDK release, i.e. on JDK 11 for WildFly 24. While we do do some testing of WildFly on JDK 13, we do considerably more testing of WildFly itself on the LTS JDKs, and we make no attempt to ensure the projects producing the various libraries we integrate are testing their libraries on anything other than JDK 8 or 11.  WildFly 24 also is heavily tested and runs well on Java 8. We plan to continue to support Java 8 at least through WildFly 25, and probably beyond.  While we recommend using an LTS JDK release, I do believe WildFly runs well on JDK 13. By run well, I mean the main WildFly testsuite runs with no more than a few failures in areas not expected to be commonly used. We want developers who are trying to evaluate what a newer JVM means for their applications to be able to look to WildFly as a useful development platform.  A major focus during the WildFly 24 development cycle was on identifying and addressing issues related to running WildFly on JDK 16 and the early access releases of JDK 17. JDK 17 is due out in September and will be the next LTS JDK release, so we want to be ready to support it as soon as we can. I’m pleased to be able to say that the 24.0.0.Final release of WildFly Preview runs well on SE 16 and the SE 17 early access release for most use cases. The main use case where we still have some issues to resolve relate to Hibernate’s proxy generation, but these don’t prevent JPA from working well in general. For developers wanting to get a sense of what SE 17 will mean for their applications, I encourage you to give WildFly Preview 24 a look.  Standard WildFly does not run well on SE 14 or later because the security implementation used in our standard configurations will not work on SE 14 or later. However if you want to experiment with standard WildFly 24 on the latest SE, you can try starting with the configuration files provided in WildFly Preview, which do not use the legacy security subsystem. This has not been heavily tested, so YMMV.  Please note that WildFly runs on Java 11 and later in classpath mode.   UPCOMING CHANGES  Beginning with WildFly 25 there will be some significant changes coming in WildFly, primarily related to moving completely to Elytron-based security and away from the legacy security implementation. Significant changes you can expect to see include:   * Removal of the legacy security subsystem from the standard configurations.   * Removal of support for the security vault, with Elytron credential stores as    the replacement.   * Removal of the core management security realms from the standard    configurations, with Elytron subsystem resources used instead.   * Removal of the Picketlink extension and the subsystems it provides.   * Potentially the Picketbox libraries will no longer be available, making the    legacy security subsystem and core management security realms unavailable    altogether on a server.   * Unrelated to security, "legacy feature packs" (which use a provisioning    technology that predates Galleon) will no longer be distributed.  We’re also evaluating changes in domain mode to limit the set of older version Host Controllers a current Domain Controller must be able to support, reducing the set to some of the more recent WildFly versions.   DOCUMENTATION  The WildFly 24 documentation is available at the . The WildFly 24 management API documentation is in the .   JIRA RELEASE NOTES  The full list of issues resolved is available . Issues resolved in the WildFly Core 16 release included with WildFly 24 are available .   ENJOY!  Thank you for your continued support of WildFly. We’d love to hear your feedback at the .]]></content>
        <author>
            <name>Brian Stansberry</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Byteman 4.0.16 has been released]]></title>
        <id>http://bytemanblog.blogspot.com/2021/06/byteman-4016-has-been-released.html</id>
        <link href="http://bytemanblog.blogspot.com/2021/06/byteman-4016-has-been-released.html"/>
        <updated>2021-06-16T13:38:00.000Z</updated>
        <content type="html"><![CDATA[ Byteman 4.0.16 is now available from the and from the . It is the latest update release for use on all JDK9+ runtimes up to and including JDK17.    Byteman 4.0.16 removes the JBoss Modules plugin from the release, in the process removing a dependency on the jboss-modules jar. The plugin has never been fully functional on JDK9+ releases. Anyone wishing to use the plugin as is should continue to use earlier releases. Alternatively, you can revert to using the Byteman 3.0.19 which runs on JDK8- releases and includes a fully working version of the plugin.     More details are provided in the . ]]></content>
        <author>
            <name>Andrew Dinn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Autotuning LIME explanations with few predictions]]></title>
        <id>http://feeds.athico.com/~r/droolsatom/~3/NMUpnuRJE3Y/autotuning-lime-explanations-with-few-predictions.html</id>
        <link href="http://feeds.athico.com/~r/droolsatom/~3/NMUpnuRJE3Y/autotuning-lime-explanations-with-few-predictions.html"/>
        <updated>2021-06-15T15:42:25.000Z</updated>
        <content type="html"><![CDATA[Tuning algorithms, especially when machine learning is involved is often a tricky business. In this post we present an optimization based technique to automatically tune LIME in order to obtain more stable explanations.  LIME (aka ) is one of the most commonly used algorithms for generating explanations for AI based models. Within TrustyAI we developed an optimized implementation of LIME that is well suited for the decision-service scenario (see our ), while retaining the goods of the original LIME approach.  In a from last year we already introduced how to use LIME in order to obtain Saliency explanations. Such explanations are useful to detect which features are important, to the model/service being invoked, to perform a particular prediction (e.g. like a credit card approval task, as the one in the image below)  However researchers have observed that there are situations where LIME explanations are not very stable (see and papers), this means that you might obtain different weights for a given feature in different runs on the same prediction, scary! LIME trains a linear model in the local neighborhood of the prediction to be explained, however sometimes this linear model might not be very accurate because of either the samples that have been generated or because of the strictness of the function that scores the proximity of a given sample. Very interesting insights about these problems can be found on the (see , ). All in all, most of the instability can derive from a suboptimal choice of LIME hyperparameters (the no. of samples generated, the proximity function behavior, the encoding / binning parameters, etc.).  In order to address this we have designed a way to let LIME be automatically tuned via an optimization algorithm that maximizes a stability scoring function over the set of LIME hyperparameters. We define four categories of hyperparameters to be optimized: the sampling parameters, the proximity parameters, the encoding parameters and the weighting parameters.  The sampling parameters control the no. of samples generated, the amount of perturbations performed for each sample, the proximity parameters control the strictness of the proximity scoring function, the encoding parameters control how selective the binning in sparse encoding should be, finally the weighting parameters control whether any of the optimizations we developed for stabilizing the weights (see our preprint) should be used.  Now we define the stability score function as the mean between positive and negative explanation stability for each decision taken by the model / decision-service. Such positive and negative explanation stability scores are defined as the number of times the top k important (positive/negative) features identified by a LIME explanation, in a number of runs n (e.g. 5), are actually the same.  We now just need to add some optimization sugar by leveraging OptaPlanner! We sample a small number (e.g. 5) of existing predictions to iterate over and optimize the above defined stability score function.  We take an existing model, a starting configuration (e.g. the default LIME configuration) and a few predictions (e.g. from past executions of a model) and we’re all set up to optimize our LIME stability score function.   PredictionProvider model = getModel(); List<Prediction> predictions = ...;  LimeConfig initialConfig = new LimeConfig();  LimeConfigOptimizer limeConfigOptimizer = new LimeConfigOptimizer(); LimeConfig optimizedConfig = limeConfigOptimizer.optimize(initialConfig, predictions, model);  LimeExplainer limeExplainer = new LimeExplainer(optimizedConfig);           The optimization process will run for a while and then we’ll obtain our desired optimized configuration, holding the best LIME hyperparameters the optimization could come up with.  We see the stability score varies a lot and finally goes up to a desired value of 1.  Another interesting aspect we can debug is the most recurring stability scores across LIME configurations.  Finally we can also inspect the impact of different hyperparameters on the stability score.  We outlined an effective solution for autotuning LIME hyperparameters to obtain more stable explanations, more insights about the technical aspects involved can be obtained by having a look at the .  The post appeared first on .  ]]></content>
        <author>
            <name>Tommaso Teofili</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Autotuning LIME explanations with few predictions]]></title>
        <id>https://blog.kie.org/2021/06/autotuning-lime-explanations-with-few-predictions.html</id>
        <link href="https://blog.kie.org/2021/06/autotuning-lime-explanations-with-few-predictions.html"/>
        <updated>2021-06-15T15:42:25.000Z</updated>
        <content type="html"><![CDATA[Tuning algorithms, especially when machine learning is involved is often a tricky business. In this post we present an optimization based technique to automatically tune LIME in order to obtain more stable explanations.  LIME (aka ) is one of the most commonly used algorithms for generating explanations for AI based models. Within TrustyAI we developed an optimized implementation of LIME that is well suited for the decision-service scenario (see our ), while retaining the goods of the original LIME approach.  In a from last year we already introduced how to use LIME in order to obtain Saliency explanations. Such explanations are useful to detect which features are important, to the model/service being invoked, to perform a particular prediction (e.g. like a credit card approval task, as the one in the image below)  However researchers have observed that there are situations where LIME explanations are not very stable (see and papers), this means that you might obtain different weights for a given feature in different runs on the same prediction, scary! LIME trains a linear model in the local neighborhood of the prediction to be explained, however sometimes this linear model might not be very accurate because of either the samples that have been generated or because of the strictness of the function that scores the proximity of a given sample. Very interesting insights about these problems can be found on the (see , ). All in all, most of the instability can derive from a suboptimal choice of LIME hyperparameters (the no. of samples generated, the proximity function behavior, the encoding / binning parameters, etc.).  In order to address this we have designed a way to let LIME be automatically tuned via an optimization algorithm that maximizes a stability scoring function over the set of LIME hyperparameters. We define four categories of hyperparameters to be optimized: the sampling parameters, the proximity parameters, the encoding parameters and the weighting parameters.  The sampling parameters control the no. of samples generated, the amount of perturbations performed for each sample, the proximity parameters control the strictness of the proximity scoring function, the encoding parameters control how selective the binning in sparse encoding should be, finally the weighting parameters control whether any of the optimizations we developed for stabilizing the weights (see our preprint) should be used.  Now we define the stability score function as the mean between positive and negative explanation stability for each decision taken by the model / decision-service. Such positive and negative explanation stability scores are defined as the number of times the top k important (positive/negative) features identified by a LIME explanation, in a number of runs n (e.g. 5), are actually the same.  We now just need to add some optimization sugar by leveraging OptaPlanner! We sample a small number (e.g. 5) of existing predictions to iterate over and optimize the above defined stability score function.  We take an existing model, a starting configuration (e.g. the default LIME configuration) and a few predictions (e.g. from past executions of a model) and we’re all set up to optimize our LIME stability score function.   PredictionProvider model = getModel(); List<Prediction> predictions = ...;  LimeConfig initialConfig = new LimeConfig();  LimeConfigOptimizer limeConfigOptimizer = new LimeConfigOptimizer(); LimeConfig optimizedConfig = limeConfigOptimizer.optimize(initialConfig, predictions, model);  LimeExplainer limeExplainer = new LimeExplainer(optimizedConfig);           The optimization process will run for a while and then we’ll obtain our desired optimized configuration, holding the best LIME hyperparameters the optimization could come up with.  We see the stability score varies a lot and finally goes up to a desired value of 1.  Another interesting aspect we can debug is the most recurring stability scores across LIME configurations.  Finally we can also inspect the impact of different hyperparameters on the stability score.  We outlined an effective solution for autotuning LIME hyperparameters to obtain more stable explanations, more insights about the technical aspects involved can be obtained by having a look at the .  The post appeared first on .]]></content>
        <author>
            <name>Tommaso Teofili</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DMN editor &#8211; Contributors Guide &#8211; Part 1]]></title>
        <id>https://blog.kie.org/2021/06/dmn-editor-contributors-guide-part-1.html</id>
        <link href="https://blog.kie.org/2021/06/dmn-editor-contributors-guide-part-1.html"/>
        <updated>2021-06-15T14:27:40.000Z</updated>
        <content type="html"><![CDATA[If you’re reading this, probably you’ve already thought about contributing to an open-source project. However, projects generally have some learning curve, which may intimidate valuable contributors.  We do not want that feeling for the DMN editor!  So, this is the first of a series of posts that will quickly empower you to contribute to the DMN editor and other Kogito components. You will be able to solve any annoying (but simple-to-solve) bug that you want! Or even propose a more significant change on some web component.  Are you excited too? So, this guide is for you! 😃  The idea is not to overwhelm this experience, so let’s take baby steps and understand one thing at a time.  Today, we will take a look at the editor’s overall anatomy and where each component lives and, with that simple introduction, you will be able to make your first contribution! But, first, let’s take a look at the 3 kinds of modules that compose the DMN editor.   I. THE TYPESCRIPT MODULES  As you’re probably wondering, TypeScript (TS) components are based on React. Check the elements highlighted in the image below, they are all TS/React:    Almost every TS module in the DMN editor lives here: . As they have pretty expressive names, it’s easy to find, for example, where the Guided Tour code lives 😉  > Notice: those modules may be moved, so this link may be updated in the future.   II. THE JAVA MODULES  Java modules currently rely on Google Web Toolkit (GWT) to translate Java components into JavaScript code. If you wondering about contributing into this modules, keep in mind when have two main parts here:     * The DMN components, highlighted as red – which are specific to the DMN editor  * The Stunner components, highlighted as green – which comprehends components    handled by Stunner, which is multi-purpose modeling tool that powers the and    the  There’s other interesting sub-modules into these two sections, but the idea is to not dig too deep right now, and you will realize better on future posts how these components deeply work.  However, if you’re brave enough for an early contribution, you may check DMN component and Stunner components .   III. THE MODELS IN TRANSITION  Some modules are being moved from the Java/GWT world to the new stack based on TS/React. Currently, only boxed expression editor is being moved:    The new component, right now, leaves on , feel free to take a look or submit a PR   ALL THAT’S ALL FOR NOW!  But, maybe you’re wondering… How does this post help me?  Well… now that you know where each component lives, you’re already empowered to fix issues like this one: : [Guided Tour] Dialog must show scrollbars on small screens. You just needed to know the right place for the CSS height property.  As I mentioned. This post is the first one of a series. Here we covered languages, and the overall editor anatomy, but only minimum stuff, so you can easily understand where you can open your first PR.  In the following posts, we will go beyond and check each kind of module with more details.  Stay tunned!  The post appeared first on .]]></content>
        <author>
            <name>Guilherme Carreiro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DMN editor – Contributors Guide – Part 1]]></title>
        <id>http://feeds.athico.com/~r/droolsatom/~3/NXt-Nq_EFGI/dmn-editor-contributors-guide-part-1.html</id>
        <link href="http://feeds.athico.com/~r/droolsatom/~3/NXt-Nq_EFGI/dmn-editor-contributors-guide-part-1.html"/>
        <updated>2021-06-15T14:27:40.000Z</updated>
        <content type="html"><![CDATA[If you’re reading this, probably you’ve already thought about contributing to an open-source project. However, projects generally have some learning curve, which may intimidate valuable contributors.  We do not want that feeling for the DMN editor!  So, this is the first of a series of posts that will quickly empower you to contribute to the DMN editor and other Kogito components. You will be able to solve any annoying (but simple-to-solve) bug that you want! Or even propose a more significant change on some web component.  Are you excited too? So, this guide is for you! 😃  The idea is not to overwhelm this experience, so let’s take baby steps and understand one thing at a time.  Today, we will take a look at the editor’s overall anatomy and where each component lives and, with that simple introduction, you will be able to make your first contribution! But, first, let’s take a look at the 3 kinds of modules that compose the DMN editor.   I. THE TYPESCRIPT MODULES  As you’re probably wondering, TypeScript (TS) components are based on React. Check the elements highlighted in the image below, they are all TS/React:    Almost every TS module in the DMN editor lives here: . As they have pretty expressive names, it’s easy to find, for example, where the Guided Tour code lives 😉  > Notice: those modules may be moved, so this link may be updated in the future.   II. THE JAVA MODULES  Java modules currently rely on Google Web Toolkit (GWT) to translate Java components into JavaScript code. If you wondering about contributing into this modules, keep in mind when have two main parts here:     * The DMN components, highlighted as red – which are specific to the DMN editor  * The Stunner components, highlighted as green – which comprehends components    handled by Stunner, which is multi-purpose modeling tool that powers the and    the  There’s other interesting sub-modules into these two sections, but the idea is to not dig too deep right now, and you will realize better on future posts how these components deeply work.  However, if you’re brave enough for an early contribution, you may check DMN component and Stunner components .   III. THE MODELS IN TRANSITION  Some modules are being moved from the Java/GWT world to the new stack based on TS/React. Currently, only boxed expression editor is being moved:    The new component, right now, leaves on , feel free to take a look or submit a PR   ALL THAT’S ALL FOR NOW!  But, maybe you’re wondering… How does this post help me?  Well… now that you know where each component lives, you’re already empowered to fix issues like this one: : [Guided Tour] Dialog must show scrollbars on small screens. You just needed to know the right place for the CSS height property.  As I mentioned. This post is the first one of a series. Here we covered languages, and the overall editor anatomy, but only minimum stuff, so you can easily understand where you can open your first PR.  In the following posts, we will go beyond and check each kind of module with more details.  Stay tunned!  The post appeared first on .  ]]></content>
        <author>
            <name>Guilherme Carreiro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RHPAM connectivity to external AMQ configurations in OpenShift]]></title>
        <id>http://feeds.athico.com/~r/droolsatom/~3/nM8UUbMtQm8/rhpam-connectivity-to-external-amq-configurations-in-openshift.html</id>
        <link href="http://feeds.athico.com/~r/droolsatom/~3/nM8UUbMtQm8/rhpam-connectivity-to-external-amq-configurations-in-openshift.html"/>
        <updated>2021-06-15T05:37:47.000Z</updated>
        <content type="html"><![CDATA[This post describes how to connect Red Hat Process Automation Manager to an external Red Hat AMQ application on a shared Openshift Container Platform 3 cluster. RHPAM uses an internal AMQ by default. However, if the OCP cluster housing the RHPAM applications also hosts a AMQ you may consider connecting them directly. This will avoid having a dedicated internal AMQ for each RHPAM application.  In our platform implementation, RHPAM is supplemented by a FUSE integration layer and external AMQ broker layer. The FUSE and AMQ broker layers handled messages across the platform composed of several RHPAM applications. To achieve a successful exchange, we leveraged the configuration parameters outlined within the . This documentation covers the requirements for configuring communication with an AMQ server for an immutable Process Server using S2I. However, a few additions needed to be performed to ensure the following structure was functioning correctly   OCP DEPLOYMENT CONFIGURATION  Focusing on the section required for our implementation, using the Openshift template file is the approach we chose for achieving our goal.   ENVIRONMENT VARIABLES  We start by leveraging RHPAM documentation covering . Setting the following parameters as required for your environment:   * AMQ Username (AMQ_USERNAME) and AMQ Password (AMQ_PASSWORD): The user name    and password of a standard broker user, if user authentication in the broker    is required in your environment.  * AMQ Role (AMQ_ROLE): The user role for the standard broker user. The default    role is admin.  * AMQ Queues (AMQ_QUEUES): AMQ queue names, separated by commas. These queues    should be already created and are accessible as JNDI resources by the time    the RHPAM app starts. If you use custom queue names, you must also set the    same queue names in the KIE_SERVER_JMS_QUEUE_RESPONSE,    KIE_SERVER_JMS_QUEUE_REQUEST, KIE_SERVER_JMS_QUEUE_SIGNAL,    KIE_SERVER_JMS_QUEUE_AUDIT, and KIE_SERVER_JMS_QUEUE_EXECUTOR parameters.  * AMQ Protocols (AMQ_PROTOCOL): Broker protocols that the Process Server should    use to communicate with the AMQ server, separated by commas. Allowed values    are openwire, amqp, and mqtt. Only openwire, the default value, is supported    by JBoss EAP.  * AMQ Remote (EJB_RESOURCE_ADAPTER_NAME): This creates the    following pooled-connection-factory in the messaging-activemq subsystem.  The deployment configuration should resemble the following:  - name: MQ_SERVICE_PREFIX_MAPPING   value: ${APPLICATION_NAME_U}_amq7=AMQ - name: AMQ_USERNAME   value: ${AMQ_USERNAME} - name: AMQ_PASSWORD   value: ${AMQ_PASSWORD} - name: AMQ_PROTOCOL   value: ${AMQ_PROTOCOL} - name: ${APPLICATION_NAME_UC}_AMQ_TCP_SERVICE_HOST   value: broker-amq.nts-${ENV_CHOICE}-hz0v-amq.svc.cluster.local - name: ${APPLICATION_NAME_UC}_AMQ_TCP_SERVICE_PORT   value: '${PORT}' - name: KIE_SERVER_JMS_QUEUE_EXECUTOR   value: ${APPLICATION_NAME_C}_EXECUTOR - name: KIE_SERVER_JMS_QUEUE_RESPONSE   value: ${APPLICATION_NAME_C}_RESPONSE - name: KIE_SERVER_JMS_QUEUE_REQUEST   value: ${APPLICATION_NAME_C}_REQUEST - name: KIE_SERVER_JMS_QUEUE_SIGNAL   value: ${APPLICATION_NAME_C}_SIGNAL - name: KIE_SERVER_JMS_QUEUE_AUDIT   value: ${APPLICATION_NAME_C}_AUDIT - name: AMQ_QUEUES   value: ${APPLICATION_NAME_C}_EXECUTOR, ${APPLICATION_NAME_C}_RESPONSE, ${APPLICATION_NAME_C}_REQUEST, ${APPLICATION_NAME_C}_SIGNAL, ${APPLICATION_NAME_C}_AUDIT - name: EJB_RESOURCE_ADAPTER_NAME   value: activemq-ra-remote  It is worth highlight an example because the naming conventions are very particular underneath the hood. For example, if your application name is red-hat-pam then the variable ${APPLICATION_NAME_U} would be red_hat_pam and the variable ${APPLICATION_NAME_UC} would be RED_HAT_PAM. The last environment variable in the above list is necessary in order to append the standalone-openshift.xml file used by the RHPAM app. It adds the following code block, which allows the remote connection with AMQ.  <pooled-connection-factory name="activemq-ra-remote" entries="java:/JmsXA java:/RemoteJmsXA java:jboss/RemoteJmsXA java:/ewih_e2e_uber_amq7/ConnectionFactory" connectors="netty-remote-throughput" transaction="xa" user="admin" password="admin"/>  Lastly, the following two configs were appended to the list of JAVA_OPTS_APPEND. These relate to the deployment mounts regarding the AMQ brokers access covered in the following section.  -Dorg.apache.activemq.ssl.trustStore="/etc/broker-secret-volume/client.ts"  -Dorg.apache.activemq.ssl.trustStorePassword="mykeystorepass"   VOLUME MOUNTS  Two volumes mounts are required for each RHPAM deployment. First, a modification to the postconfigure.sh script that allows us to enable ssl for AMQ brokers. This is achieved with jboss-cli.yaml introducing the enablessl.cli script shown below:  apiVersion: v1 data:   enablessl.cli: >     embed-server --std-out=echo  --server-config=standalone-openshift.xml     batch     /subsystem=messaging-activemq/server=default/remote-connector=netty-remote-throughput:remove     /subsystem=messaging-activemq/server=default/remote-connector=netty-remote-throughput:add(params={ssl-enabled     => "true"}, socket-binding="messaging-remote-throughput")     run-batch     quit   postconfigure.sh: |     echo "******  RUNNING ADDITIONAL CONFIGURATIONS WITH JBOSS-CLI  **********"     echo "START - enable-ssl for AMQ brokers"     /opt/eap/bin/jboss-cli.sh --file=/opt/eap/extensions/enablessl.cli     echo "END - enable-ssl for AMQ brokers" kind: ConfigMap metadata:   name: jboss-cli  The second mount required is the client truststore, which allows access to the AMQ brokers.  apiVersion: v1 data:   client.ts: >-     ${SECRET} kind: Secret metadata:   labels:     app: broker-sec   name: client-truststore type: Opaque   PERFORMANCE IMPROVEMENTS  Our implementation required the ability to handle a lot of traffic. This meant that we needed to increase the and number of connections to selected queues. For our case the bottleneck was occurring on the Executor queue. To achieve this we appended the following code to the ejb-jar.xml file on the RHPAM deployment:  <activation-config-property>    <activation-config-property-name>maxSession</activation-config-property-name>    <activation-config-property-value>100</activation-config-property-value> </activation-config-property>   Please note that while the property name is maxSession this property will update the number of connections in that queue instead of sessions.   CONCLUSION  While this use case is narrow, connection to an external AMQ is an option to be considered while tackling similar challenges when using RHPAM. Some of the benefits from connecting to the external AMQ include lowering the memory footprint of RHPAM application pods, reliably resolved thread lock issues with certain volume sizes, and centralizing all AMQ processing to a dedicated broker deployment. Some of the drawbacks new failure points for RHPAM on the AMQ queues as they have to be created previous to deployment, heavier reliance on CPU cores, HPA configuration must be configured based on CPU utilization.  The post appeared first on .  ]]></content>
        <author>
            <name>Michael Perez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RHPAM connectivity to external AMQ configurations in OpenShift]]></title>
        <id>https://blog.kie.org/2021/06/rhpam-connectivity-to-external-amq-configurations-in-openshift.html</id>
        <link href="https://blog.kie.org/2021/06/rhpam-connectivity-to-external-amq-configurations-in-openshift.html"/>
        <updated>2021-06-15T05:37:47.000Z</updated>
        <content type="html"><![CDATA[This post describes how to connect Red Hat Process Automation Manager to an external Red Hat AMQ application on a shared Openshift Container Platform 3 cluster. RHPAM uses an internal AMQ by default. However, if the OCP cluster housing the RHPAM applications also hosts a AMQ you may consider connecting them directly. This will avoid having a dedicated internal AMQ for each RHPAM application.  In our platform implementation, RHPAM is supplemented by a FUSE integration layer and external AMQ broker layer. The FUSE and AMQ broker layers handled messages across the platform composed of several RHPAM applications. To achieve a successful exchange, we leveraged the configuration parameters outlined within the . This documentation covers the requirements for configuring communication with an AMQ server for an immutable Process Server using S2I. However, a few additions needed to be performed to ensure the following structure was functioning correctly   OCP DEPLOYMENT CONFIGURATION  Focusing on the section required for our implementation, using the Openshift template file is the approach we chose for achieving our goal.   ENVIRONMENT VARIABLES  We start by leveraging RHPAM documentation covering . Setting the following parameters as required for your environment:   * AMQ Username (AMQ_USERNAME) and AMQ Password (AMQ_PASSWORD): The user name    and password of a standard broker user, if user authentication in the broker    is required in your environment.  * AMQ Role (AMQ_ROLE): The user role for the standard broker user. The default    role is admin.  * AMQ Queues (AMQ_QUEUES): AMQ queue names, separated by commas. These queues    should be already created and are accessible as JNDI resources by the time    the RHPAM app starts. If you use custom queue names, you must also set the    same queue names in the KIE_SERVER_JMS_QUEUE_RESPONSE,    KIE_SERVER_JMS_QUEUE_REQUEST, KIE_SERVER_JMS_QUEUE_SIGNAL,    KIE_SERVER_JMS_QUEUE_AUDIT, and KIE_SERVER_JMS_QUEUE_EXECUTOR parameters.  * AMQ Protocols (AMQ_PROTOCOL): Broker protocols that the Process Server should    use to communicate with the AMQ server, separated by commas. Allowed values    are openwire, amqp, and mqtt. Only openwire, the default value, is supported    by JBoss EAP.  * AMQ Remote (EJB_RESOURCE_ADAPTER_NAME): This creates the    following pooled-connection-factory in the messaging-activemq subsystem.  The deployment configuration should resemble the following:  - name: MQ_SERVICE_PREFIX_MAPPING   value: ${APPLICATION_NAME_U}_amq7=AMQ - name: AMQ_USERNAME   value: ${AMQ_USERNAME} - name: AMQ_PASSWORD   value: ${AMQ_PASSWORD} - name: AMQ_PROTOCOL   value: ${AMQ_PROTOCOL} - name: ${APPLICATION_NAME_UC}_AMQ_TCP_SERVICE_HOST   value: broker-amq.nts-${ENV_CHOICE}-hz0v-amq.svc.cluster.local - name: ${APPLICATION_NAME_UC}_AMQ_TCP_SERVICE_PORT   value: '${PORT}' - name: KIE_SERVER_JMS_QUEUE_EXECUTOR   value: ${APPLICATION_NAME_C}_EXECUTOR - name: KIE_SERVER_JMS_QUEUE_RESPONSE   value: ${APPLICATION_NAME_C}_RESPONSE - name: KIE_SERVER_JMS_QUEUE_REQUEST   value: ${APPLICATION_NAME_C}_REQUEST - name: KIE_SERVER_JMS_QUEUE_SIGNAL   value: ${APPLICATION_NAME_C}_SIGNAL - name: KIE_SERVER_JMS_QUEUE_AUDIT   value: ${APPLICATION_NAME_C}_AUDIT - name: AMQ_QUEUES   value: ${APPLICATION_NAME_C}_EXECUTOR, ${APPLICATION_NAME_C}_RESPONSE, ${APPLICATION_NAME_C}_REQUEST, ${APPLICATION_NAME_C}_SIGNAL, ${APPLICATION_NAME_C}_AUDIT - name: EJB_RESOURCE_ADAPTER_NAME   value: activemq-ra-remote  It is worth highlight an example because the naming conventions are very particular underneath the hood. For example, if your application name is red-hat-pam then the variable ${APPLICATION_NAME_U} would be red_hat_pam and the variable ${APPLICATION_NAME_UC} would be RED_HAT_PAM. The last environment variable in the above list is necessary in order to append the standalone-openshift.xml file used by the RHPAM app. It adds the following code block, which allows the remote connection with AMQ.  <pooled-connection-factory name="activemq-ra-remote" entries="java:/JmsXA java:/RemoteJmsXA java:jboss/RemoteJmsXA java:/ewih_e2e_uber_amq7/ConnectionFactory" connectors="netty-remote-throughput" transaction="xa" user="admin" password="admin"/>  Lastly, the following two configs were appended to the list of JAVA_OPTS_APPEND. These relate to the deployment mounts regarding the AMQ brokers access covered in the following section.  -Dorg.apache.activemq.ssl.trustStore="/etc/broker-secret-volume/client.ts"  -Dorg.apache.activemq.ssl.trustStorePassword="mykeystorepass"   VOLUME MOUNTS  Two volumes mounts are required for each RHPAM deployment. First, a modification to the postconfigure.sh script that allows us to enable ssl for AMQ brokers. This is achieved with jboss-cli.yaml introducing the enablessl.cli script shown below:  apiVersion: v1 data:   enablessl.cli: >     embed-server --std-out=echo  --server-config=standalone-openshift.xml     batch     /subsystem=messaging-activemq/server=default/remote-connector=netty-remote-throughput:remove     /subsystem=messaging-activemq/server=default/remote-connector=netty-remote-throughput:add(params={ssl-enabled     => "true"}, socket-binding="messaging-remote-throughput")     run-batch     quit   postconfigure.sh: |     echo "******  RUNNING ADDITIONAL CONFIGURATIONS WITH JBOSS-CLI  **********"     echo "START - enable-ssl for AMQ brokers"     /opt/eap/bin/jboss-cli.sh --file=/opt/eap/extensions/enablessl.cli     echo "END - enable-ssl for AMQ brokers" kind: ConfigMap metadata:   name: jboss-cli  The second mount required is the client truststore, which allows access to the AMQ brokers.  apiVersion: v1 data:   client.ts: >-     ${SECRET} kind: Secret metadata:   labels:     app: broker-sec   name: client-truststore type: Opaque   PERFORMANCE IMPROVEMENTS  Our implementation required the ability to handle a lot of traffic. This meant that we needed to increase the and number of connections to selected queues. For our case the bottleneck was occurring on the Executor queue. To achieve this we appended the following code to the ejb-jar.xml file on the RHPAM deployment:  <activation-config-property>    <activation-config-property-name>maxSession</activation-config-property-name>    <activation-config-property-value>100</activation-config-property-value> </activation-config-property>   Please note that while the property name is maxSession this property will update the number of connections in that queue instead of sessions.   CONCLUSION  While this use case is narrow, connection to an external AMQ is an option to be considered while tackling similar challenges when using RHPAM. Some of the benefits from connecting to the external AMQ include lowering the memory footprint of RHPAM application pods, reliably resolved thread lock issues with certain volume sizes, and centralizing all AMQ processing to a dedicated broker deployment. Some of the drawbacks new failure points for RHPAM on the AMQ queues as they have to be created previous to deployment, heavier reliance on CPU cores, HPA configuration must be configured based on CPU utilization.  The post appeared first on .]]></content>
        <author>
            <name>Michael Perez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Change Logging Level for WildFly on the Cloud]]></title>
        <id>https://wildfly.org//news/2021/06/15/change-log-level-wildfly-cloud/</id>
        <link href="https://wildfly.org//news/2021/06/15/change-log-level-wildfly-cloud/"/>
        <updated>2021-06-15T00:00:00.000Z</updated>
        <content type="html"><![CDATA[When your WildFly application is running on the Cloud (on Kubernetes, OpenShift or any other container platform) and starts to behave unexpectedly, it is useful to be able to change the logging of the server to display debug logs to get a better insight.  In this article, I will walkthrough a very simple script that can be used to change the logging level of a WildFly server in an application image on the (wild) fly.   WILDFLY MANAGEMENT COMMANDS  By default, the WildFly server is configured to display INFO logs on the console. These logs are the output displayed by the command kubectl logs <pod>):  $ kubectl logs wildfly-s2i-app-8f8b49957-b7xbk ... 08:10:40,347 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Full 23.0.2.Final (WildFly Core 15.0.1.Final) started in 15658ms - Started 288 of 383 services (156 services are lazy, passive or on-demand) 08:10:40,348 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0060: Http management interface listening on http://0.0.0.0:9990/management 08:10:40,348 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0054: Admin console is not enabled  If we need to change the logging level to display debug logs, we can use the jboss-cli.sh script located in the WildFly server directory to execute two management commands:  $ kubectl exec -it  wildfly-s2i-app-8f8b49957-b7xbk -- sh sh-4.2$ $JBOSS_HOME/bin/jboss-cli.sh -c [standalone@localhost:9990 /] /subsystem=logging/console-handler=CONSOLE:write-attribute(name=level,value=DEBUG) {"outcome" => "success"} [standalone@localhost:9990 /] /subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=DEBUG) {"outcome" => "success"}  With that change, we can no see DEBUG logs in the console output:  $ kubectl logs wildfly-s2i-app-8f8b49957-b7xbk ... 08:26:35,002 DEBUG [io.undertow.request] (default I/O-2) Matched default handler path /config/value 08:26:35,004 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) RESTEASY002315: PathInfo: /config/value 08:26:35,005 DEBUG [org.jboss.resteasy.cdi.i18n] (default task-1) RESTEASY010520: Beans found for class org.wildfly.quickstarts.microprofile.config.ConfigResour ce : [Managed Bean [class org.wildfly.quickstarts.microprofile.config.ConfigResource] with qualifiers [@Any @Default]] 08:26:35,006 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) MessageBodyWriter: org.jboss.resteasy.spi.ResteasyProviderFactory$SortedKey 08:26:35,006 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) MessageBodyWriter: org.jboss.resteasy.plugins.providers.StringTextStar   JBOSS_HOME ENVIRONMENT VARIABLE  These commands work fine when the application image has been built with as the JBOSS_HOME environment variable is set and we can invoke $JBOSS_HOME/bin/jboss-cli.sh without any issue.  However if the application image has been built with , there is no JBOSS_HOME as the server will be unzipped when the container is started.  How can we then determine the actual location of the server?  When the container image is started, a special file is created at /opt/jboss/container/wildfly-bootable-jar/install-dir whose content is the actual location of the unzipped WildFly server for this specific pod:  $ kubectl exec -it wildfly-bootable-jar-app-7cf8bdc95c-j9mjk -- sh sh-4.4$ cat /opt/jboss/container/wildfly-bootable-jar/install-dir /tmp/wildfly-bootable-server15112249313411534387  With that knowledge, we can update our script to set the value of the JBOSS_HOME environment with the content of that file if it exists:  sh-4.4$ [ -e /opt/jboss/container/wildfly-bootable-jar/install-dir ] && JBOSS_HOME=$( cat /opt/jboss/container/wildfly-bootable-jar/install-dir ) sh-4.4$ echo $JBOSS_HOME /tmp/wildfly-bootable-server15112249313411534387   CHANGE-LOG-LEVEL SCRIPT  We can now write a very simple script that can be used to change the global logging level one any WildFly application image.  The script is available at  and is straigthforward to use:  $ wget https://gist.githubusercontent.com/jmesnil/78581f90c68f84ba9240ef48f627ff45/raw/062b3f1a8f7cf6e85b233e69348c97d006003a92/change-log-level $ chmod u+x change-log-level  $ ./change-log-level  change-log-level is a script to change the logging level of the WildFly server inside an application image running on any Kubernetes cluster. Usage:   change-log-level <pod> <logging-level> Where the parameters are:   * <pod> - Name of the pod running the application image   * <logging-level> - The logging level to set (can be one of ALL, FINEST, FINER, TRACE, DEBUG, FINE, CONFIG, INFO     WARN, WARNING, ERROR, SEVERE, FATAL, OFF)  $ ./change-log-level wildfly-bootable-jar-app-7cf8bdc95c-j9mjk DEBUG Change logging level to TRACE for WildFly server in wildfly-microprofile-config-app-7cf8bdc95c-j9mjk [standalone@localhost:9990 /] /subsystem=logging/console-handler=CONSOLE:write-attribute(name=level,value=DEBUG) {"outcome" => "success"} [standalone@localhost:9990 /] /subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=DEBUG) {"outcome" => "success"}  $ kubectl logs wildfly-bootable-jar-app-7cf8bdc95c-j9mjk 10:14:10,380 DEBUG [io.undertow.request] (default I/O-1) Matched default handler path / 10:14:10,381 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) RESTEASY002315: PathInfo: / 10:14:10,382 DEBUG [org.jboss.resteasy.cdi.i18n] (default task-1) RESTEASY010520: Beans found for class org.wildfly.quickstarts.microprofile.config.RootResource  : [Managed Bean [class org.wildfly.quickstarts.microprofile.config.RootResource] with qualifiers [@Any @Default]] 10:14:10,393 DEBUG [org.jboss.resteasy.plugins.validation.i18n] (default task-1) RESTEASY008510: ResteasyCdiExtension is on the classpath. 10:14:10,394 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) MessageBodyWriter: org.jboss.resteasy.spi.ResteasyProviderFactory$SortedKey 10:14:10,394 DEBUG [org.jboss.resteasy.resteasy_jaxrs.i18n] (default task-1) MessageBodyWriter: org.jboss.resteasy.plugins.providers.StringTextStar  Note  This script is doing a brute-force switch of the root logger and will change the log level of all loggers in the WildFly server.  In a more realistic case, you would have to adapt the management commands to change the log level on more specific loggers related to your application to reduce the noise from other loggers. This can easily be done by updating the script and changing the commands from the WILDFLY_COMMANDS property.   CONCLUSION  This simple script is useful to be able to change the logging of the server to display debug logs to get a better insight. It can be used as the basis to run any kind of management commands on WildFly in an application image.]]></content>
        <author>
            <name>Jeff Mesnil</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloud adoption - An architectural introduction]]></title>
        <id>http://feedproxy.google.com/~r/schabell/jboss/~3/1gl_J2OvzxA/cloud-adoption-an-architectural-introduction.html</id>
        <link href="http://feedproxy.google.com/~r/schabell/jboss/~3/1gl_J2OvzxA/cloud-adoption-an-architectural-introduction.html"/>
        <updated>2021-06-14T10:27:00.015Z</updated>
        <content type="html"><![CDATA[Part 1 - An architectural introduction  This article launches a new series exploring the cloud adoption architecture. It's focusing on presenting access to ways of mapping successful implementations for specific use cases.            It's an interesting challenge creating architectural content based on common customer adoption patterns. That's very different from most of the traditional marketing activities usually associated with generating content for the sole purpose of positioning products for solutions. When you're basing the content on actual execution in solution delivery, you're cutting out the chuff.   What's that mean?  It means that it's going to provide you with a way to implement a solution using open source technologies by focusing on the integrations, structures and interactions that actually have been proven to work. What's not included are any vendor promises that you'll find in normal marketing content. Those promised that when it gets down to implementation crunch time, might not fully deliver on their promises.  Enter the term Portfolio Architectural.   Let's look at these architectures, how they're created and what value they provide for your solution designs.     THE PROCESS  The first step is to decide the use case to start with and in this case the focus was on how customers and organisations are able to adopt cloud usage across their existing data centers, private clouds, and while making use of public clouds. The key here is to manage their workloads across all of their diverse hybrid cloud architecture.  The case we're tackling here is focusing on Cloud Adoption. This use case we've defined as the following:    Accelerating cloud adoption with effective automation for deploying and managing workloads across multiple cloud infrastructures according to performance, security, compliance, and cost requirements.   The approach taken is to research our existing customers that have implemented solutions in this space, collect their public facing content, research the internal implementation documentation collections from their successful engagements, and where necessary reach out to the field resources involved.     To get an idea of what these architectures look like, we refer you to the following published series:   *   *   *   *   *   *   *   *   *   *   *   Now on to the task at hand.     WHAT'S NEXT  The resulting content for this project targets the following three items.   * A slide deck of the architecture for use telling the portfolio solution    story.  * Generic architectural diagrams providing the general details for the    portfolio solution.  * A write-up of the portfolio solution in a series that can be used for a    customer solution brief.  An overview of this series on the cloud adoption portfolio architecture:   1.   2. Common architectural elements  3. Example adoption architecture  Catch up on any past articles you missed by following any published links above.  Next in this series, taking a look at the generic common architectural elements for the cloud adoption architecture.   (Article co-authored by , Chief Architect Retail, Red Hat) ]]></content>
        <author>
            <name>Eric D. Schabell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kogito 1.7.0 released!]]></title>
        <id>http://feeds.athico.com/~r/droolsatom/~3/2twMKzhHt9o/kogito-1-7-0-release.html</id>
        <link href="http://feeds.athico.com/~r/droolsatom/~3/2twMKzhHt9o/kogito-1-7-0-release.html"/>
        <updated>2021-06-11T10:27:07.000Z</updated>
        <content type="html"><![CDATA[We are glad to announce that the Kogito 1.7.0 release is now available! This goes hand in hand with and .  From a feature point of view, we included a series of new features and bug fixes, including:   * Process SVG addon now works directly with the process SVG exported by VSCode  * PostgreSQL persistence for Jobs Service  * Quarkus upgrade to version  For more details head to the complete .  All artifacts are available now:   * Kogito runtime artifacts are available on Maven Central.  * Kogito examples can be found .  * Kogito images are available on .  * Kogito operator is available in the in OpenShift and Kubernetes.  * Kogito tooling 0.10.0 artifacts are available at the .  A detailed changelog for 1.7.0 can be found in .  New to Kogito? Check out our website . Click the "Get Started" button.  Thank you to everyone who collaborate to make this release possible and stay tuned for more updates!  The post appeared first on .  ]]></content>
        <author>
            <name>Cristiano Nicolai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kogito 1.7.0 released!]]></title>
        <id>https://blog.kie.org/2021/06/kogito-1-7-0-release.html</id>
        <link href="https://blog.kie.org/2021/06/kogito-1-7-0-release.html"/>
        <updated>2021-06-11T10:27:07.000Z</updated>
        <content type="html"><![CDATA[We are glad to announce that the Kogito 1.7.0 release is now available! This goes hand in hand with and .  From a feature point of view, we included a series of new features and bug fixes, including:   * Process SVG addon now works directly with the process SVG exported by VSCode  * PostgreSQL persistence for Jobs Service  * Quarkus upgrade to version  For more details head to the complete .  All artifacts are available now:   * Kogito runtime artifacts are available on Maven Central.  * Kogito examples can be found .  * Kogito images are available on .  * Kogito operator is available in the in OpenShift and Kubernetes.  * Kogito tooling 0.10.0 artifacts are available at the .  A detailed changelog for 1.7.0 can be found in .  New to Kogito? Check out our website . Click the "Get Started" button.  Thank you to everyone who collaborate to make this release possible and stay tuned for more updates!  The post appeared first on .]]></content>
        <author>
            <name>Cristiano Nicolai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Profiling and optimizing executable model generation]]></title>
        <id>http://feeds.athico.com/~r/droolsatom/~3/tRkd6eZYwzo/profiling-and-optimizing-executable-model-generation.html</id>
        <link href="http://feeds.athico.com/~r/droolsatom/~3/tRkd6eZYwzo/profiling-and-optimizing-executable-model-generation.html"/>
        <updated>2021-06-10T07:40:41.000Z</updated>
        <content type="html"><![CDATA[INTRODUCING DROOLS EXECUTABLE MODEL  During the development of Drools 7.x we with the goal of providing a pure Java-based representation of a rule set. One of the main drives for its introduction was to speed up the creation of a KieContainer starting from a compiled kjar.  In fact what Drools 6.x did during the kjar compilation and packaging was simply to parse and verify the drl files and other Drools related assets. After this validation it put those files unchanged into the kjar. This implies that when the kjar was installed into a KieContainer, Drools had to reparse those files from scratch, resulting in quite a long time required to create a KieContainer, especially for large rule bases.  What the executable model does to solve this problem is replacing, at kjar creation time, the rules written in drl like for instance the following   rule "Sum ages of Persons starting with M" when   accumulate ( $p: Person ( name.startsWith(\"M\") );                             $sum : sum($p.getAge()) ) then   insert(new Result($sum)); end  with a purely Java-based representation of the same rule like  Variable var_$p = D.declarationOf(Person.class, "$p"); Variable var_age = D.declarationOf(Integer.class); Variable var_$sum = D.declarationOf(Integer.class, "$sum"); Rule rule = D.rule("Sum ages of Persons starting with M")        .build(             D.accumulate(D.pattern(var_$p)              .bind(var_age, (Person this) -> this.getAge())              .expr((Person _this) -> _this.getName().startsWith("M"),               D.reactOn("name")),               D.accFunction(IntegerSumAccumulateFunction::new, var_age).as(var$sum)),              D.on(var_$sum).execute((Drools drools, Integer $sum) -> {                    drools.insert(new Result($sum)); }));  This Java representation, invoking an ad-hoc created DSL, is (in its current state but we also planned to work on this) probably too complex and too low level. It would be very hard for a Drools user without a deep understanding of the engine internals to write it correctly. However it can be automatically generated like the kie-maven-plugin does. In this way in Drools 7.x, when the kjar is installed into a KieContainer, executing the DSL to interpret it is enough to instantiate the phreak network. That’s the meaning of the term "executable model".   EXTERNALIZING EXECUTABLE MODEL’S LAMBDA EXPRESSIONS  Using this executable model not only dramatically reduced (even more than 90%) the time required to create a KieContainer, but also allowed runtime improvements. In fact the predicates in the executable model are lambdas and are used to evaluate conditions inside the phreak network nodes in a much faster and cleaner way than interpreting those constraints via MVEL (and eventually transforming it into bytecode via ASM after a few iterations) as it did before.  Unfortunately we also found that this strategy had a major drawback for what regards memory occupation. In fact the lambdas are referred inside the phreak nodes but in turn they keep a reference to all the intermediate data structures used to interpret the model and to create the phreak network. In essence those data structures are no longer useful once the phreak network has been instantiated, but the lambda expressions keep them alive and then the garbage collector cannot reclaim the memory space that they occupy.  We addressed this issue adding a second stage in the executable model generation process that rewrites all those lambdas transforming them into external classes. After this rework the generated executable model for the former rules now looks like this  Rule rule = D.rule("Sum ages of Persons starting with M") .build(        D.accumulate(D.pattern(var_$p)         .bind(var_age, LambdaExtractor1.INSTANCE)         .expr(LambdaPredicate2.INSTANCE,       D.reactOn("name")),       D.accFunction(IntegerSumAccumulateFunction::new, var_age)        .as(var_$sum)),       D.on(var_$sum).execute(LambdaConsequence3.INSTANCE));   @MaterializedLambda public enum LambdaExtractor1 implements Function1 {     INSTANCE;     @Override     public Integer apply(Person _this) {         return _this.getAge();     } }  @MaterializedLambda public enum LambdaPredicate2 implements Predicate1 {     INSTANCE;     @Override     public boolean test(Person _this) {         return _this.getName().startsWith("M");     } }  @MaterializedLambda public enum LambdaConsequence3 implements Block2 {      INSTANCE;      @Override      public void execute(Drools drools, Integer $sum) {          drools.insert(new Result($sum));      } }  In this way the lambda expressions no longer hold a reference to the rest of the executable model that now can be successfully garbage collected once its duty is terminated.   IMPROVING COMPILE TIME PERFORMANCES  To recap, the introduction of the executable model allowed both a very fast KieContainer creation and some improvements and simplification of the runtime with the possibility of getting rid of mvel and ASM.   The last drawback of this is in the fact that we considerably increased the time required by the kie-maven-plugin to produce a kjar out of a rule base: translating each rule and generating the corresponding executable model Java source code is a time consuming task and the lambda externalization post-processing phase made this even longer.  In order to at least mitigate this problem and also speed up the generation of the executable model we decided to take two complementary approaches. First we figured out that the whole executable model generation process was unnecessarily sequential and that we could better leverage our shiny multicore CPUs parallelizing it in 2 different points. Since version 7.55 instead of translating each rule into the corresponding executable model one after the other we do this in parallel performing this translation inside the Fork/Join thread pool of a parallel Stream. In a very similar way we have been also able to parallelize the externalization of the lambda expressions with the only precaution of avoiding the concurrent modification of the AST generated by , the tool that we used to programmatically generate the source code of the executable model.  Second, we also tried to figure out if there was the possibility of improving the performances of our executable model generator regardless of its internal parallelization. Trying to guess where a Java program consumes the biggest part of time and resources is nearly impossible. The only way to do this correctly is measuring and using the right tools. First of all we created a that compiles a real-world project containing more than 2,000 rules provided by a customer, who has been also one of the early adopters of the executable model, and obfuscated accordingly. We used it both to profile the executable model generator and of course to check how effective our improvements are.  To profile our benchmark we used that has the advantages of being seamlessly integrated with JMH, having an extremely low overhead and producing effective and easy to read . To make async-profiler generating the flamegraphs profiling the benchmark under execution is sufficient to add to the command line used to launch JMH a -prof argument like the following:  -prof "async:output=flamegraph;event=cpu;simple=true;dir=/tmp/Profile;width=1920;libPath=/home/mario/software/async-profiler-1.8.1-linux-x64/build/libasyncProfiler.so"  where   * async is to use async-profiler as profiling tool. There are other profilers    available like .  * event is the feature under profiling: cpu (the default) is to find the most    time-consuming method. You can also use alloc to check the memory allocation,    cache-misses and others.  * output is indeed the format used to produce the profiling results. The    supported ones are text, collapsed, flamegraph, tree, jfr (default is text)    but in general I find flamegraphs very visual and then easy to read.  * simple=true is to print only the simple class names instead of the fully    qualified ones. Having the complete package names in the flamegraph make it    much harder to read  * dir is the directory where the output will be written  * width is the width in pixels of the flamegraph, the bigger the better 🙂  * libPath is the location where you have downloaded the async-profiler library   PROFILING THE EXECUTABLE MODEL GENERATION  With this setup, a first run to our benchmark revealed a quite unexpected but very evident issue  The colors in this flamegraph have this meaning:    * green are Java methods  * yellow are C++ methods  * red are user-mode native calls  * orange are kernel calls  In our case it was clear that we were consuming the biggest part of the time collecting garbage instead of doing any useful work.  In other words our main problem was that we were allocating far too many objects but still we had no clue of what was the root cause of this. To discover this it was necessary to rerun the benchmark, but this time profiling the memory allocation using the argument event=alloc. Note that to profile the memory allocation with async-profiler you need to run it on a JVM compiled with HotSpot debug symbols. By doing so we obtained the following flamegraph.  Reading and interpreting this graph is not trivial because the objects’ allocation is of course scattered on almost every method execution. For each profiling session however, asnyc-profiler also generates a second flamegraph showing the stack in reversed order, that in situations like this can be of more immediate readability.  Here the main culprit of the excessive memory allocation is much more visible: JavaParser is creating a lot of Streams to repeatedly parse very small portions of Java code.  It tuned out that we are misusing JavaParser forcing it to perform thousands of microparsing when adding an import or an annotation to an AST or simply to convert a String representing a Class name into the corresponding JavaParser Type in order to use it with the rest of JavaParser API. For instance to add an import to a JavaParser CompilationUnit we did something like:  cu.addImport(“java.util.List”);  This caused JavaParser, something that in all honesty isn’t immediately evident from its documentation, to trigger a parsing of the String “java.util.List” in order to internally create that portion of AST representing it. This can be easily avoided because we already know in advance how that AST should be made. Replacing the former statement with one that programmatically creates the AST portion for the import to be added like the following:  cu.addImport(new ImportDeclaration(new Name(“java.util.List”), false, false));  made it possible to avoid all those unnecessary and memory consuming parsing operations. The combination of the parallelization of the executable model generation, of the savvier usage of JavaParser API and other micro optimizations found during our profiling session allowed us to bring the time required to generate the executable model for the project under benchmarking from the original 133 seconds  Benchmark                             Mode  Cnt    Score    Error  Units KjarCompiler.buildKjarFromBigProject    ss    5  133.018 ± 15.665   s/op  to the current 32.  Benchmark                             Mode  Cnt    Score    Error  Units KjarCompiler.buildKjarFromBigProject    ss    5   32.823 ±  7.883   s/op  We are willing to continue this profiling effort and keep improving the performances of Drools in this and other areas in the near future.  The post appeared first on .  ]]></content>
        <author>
            <name>Mario Fusco</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Profiling and optimizing executable model generation]]></title>
        <id>https://blog.kie.org/2021/06/profiling-and-optimizing-executable-model-generation.html</id>
        <link href="https://blog.kie.org/2021/06/profiling-and-optimizing-executable-model-generation.html"/>
        <updated>2021-06-10T07:40:41.000Z</updated>
        <content type="html"><![CDATA[INTRODUCING DROOLS EXECUTABLE MODEL  During the development of Drools 7.x we with the goal of providing a pure Java-based representation of a rule set. One of the main drives for its introduction was to speed up the creation of a KieContainer starting from a compiled kjar.  In fact what Drools 6.x did during the kjar compilation and packaging was simply to parse and verify the drl files and other Drools related assets. After this validation it put those files unchanged into the kjar. This implies that when the kjar was installed into a KieContainer, Drools had to reparse those files from scratch, resulting in quite a long time required to create a KieContainer, especially for large rule bases.  What the executable model does to solve this problem is replacing, at kjar creation time, the rules written in drl like for instance the following   rule "Sum ages of Persons starting with M" when   accumulate ( $p: Person ( name.startsWith(\"M\") );                             $sum : sum($p.getAge()) ) then   insert(new Result($sum)); end  with a purely Java-based representation of the same rule like  Variable var_$p = D.declarationOf(Person.class, "$p"); Variable var_age = D.declarationOf(Integer.class); Variable var_$sum = D.declarationOf(Integer.class, "$sum"); Rule rule = D.rule("Sum ages of Persons starting with M")        .build(             D.accumulate(D.pattern(var_$p)              .bind(var_age, (Person this) -> this.getAge())              .expr((Person _this) -> _this.getName().startsWith("M"),               D.reactOn("name")),               D.accFunction(IntegerSumAccumulateFunction::new, var_age).as(var$sum)),              D.on(var_$sum).execute((Drools drools, Integer $sum) -> {                    drools.insert(new Result($sum)); }));  This Java representation, invoking an ad-hoc created DSL, is (in its current state but we also planned to work on this) probably too complex and too low level. It would be very hard for a Drools user without a deep understanding of the engine internals to write it correctly. However it can be automatically generated like the kie-maven-plugin does. In this way in Drools 7.x, when the kjar is installed into a KieContainer, executing the DSL to interpret it is enough to instantiate the phreak network. That’s the meaning of the term "executable model".   EXTERNALIZING EXECUTABLE MODEL’S LAMBDA EXPRESSIONS  Using this executable model not only dramatically reduced (even more than 90%) the time required to create a KieContainer, but also allowed runtime improvements. In fact the predicates in the executable model are lambdas and are used to evaluate conditions inside the phreak network nodes in a much faster and cleaner way than interpreting those constraints via MVEL (and eventually transforming it into bytecode via ASM after a few iterations) as it did before.  Unfortunately we also found that this strategy had a major drawback for what regards memory occupation. In fact the lambdas are referred inside the phreak nodes but in turn they keep a reference to all the intermediate data structures used to interpret the model and to create the phreak network. In essence those data structures are no longer useful once the phreak network has been instantiated, but the lambda expressions keep them alive and then the garbage collector cannot reclaim the memory space that they occupy.  We addressed this issue adding a second stage in the executable model generation process that rewrites all those lambdas transforming them into external classes. After this rework the generated executable model for the former rules now looks like this  Rule rule = D.rule("Sum ages of Persons starting with M") .build(        D.accumulate(D.pattern(var_$p)         .bind(var_age, LambdaExtractor1.INSTANCE)         .expr(LambdaPredicate2.INSTANCE,       D.reactOn("name")),       D.accFunction(IntegerSumAccumulateFunction::new, var_age)        .as(var_$sum)),       D.on(var_$sum).execute(LambdaConsequence3.INSTANCE));   @MaterializedLambda public enum LambdaExtractor1 implements Function1 {     INSTANCE;     @Override     public Integer apply(Person _this) {         return _this.getAge();     } }  @MaterializedLambda public enum LambdaPredicate2 implements Predicate1 {     INSTANCE;     @Override     public boolean test(Person _this) {         return _this.getName().startsWith("M");     } }  @MaterializedLambda public enum LambdaConsequence3 implements Block2 {      INSTANCE;      @Override      public void execute(Drools drools, Integer $sum) {          drools.insert(new Result($sum));      } }  In this way the lambda expressions no longer hold a reference to the rest of the executable model that now can be successfully garbage collected once its duty is terminated.   IMPROVING COMPILE TIME PERFORMANCES  To recap, the introduction of the executable model allowed both a very fast KieContainer creation and some improvements and simplification of the runtime with the possibility of getting rid of mvel and ASM.   The last drawback of this is in the fact that we considerably increased the time required by the kie-maven-plugin to produce a kjar out of a rule base: translating each rule and generating the corresponding executable model Java source code is a time consuming task and the lambda externalization post-processing phase made this even longer.  In order to at least mitigate this problem and also speed up the generation of the executable model we decided to take two complementary approaches. First we figured out that the whole executable model generation process was unnecessarily sequential and that we could better leverage our shiny multicore CPUs parallelizing it in 2 different points. Since version 7.55 instead of translating each rule into the corresponding executable model one after the other we do this in parallel performing this translation inside the Fork/Join thread pool of a parallel Stream. In a very similar way we have been also able to parallelize the externalization of the lambda expressions with the only precaution of avoiding the concurrent modification of the AST generated by , the tool that we used to programmatically generate the source code of the executable model.  Second, we also tried to figure out if there was the possibility of improving the performances of our executable model generator regardless of its internal parallelization. Trying to guess where a Java program consumes the biggest part of time and resources is nearly impossible. The only way to do this correctly is measuring and using the right tools. First of all we created a that compiles a real-world project containing more than 2,000 rules provided by a customer, who has been also one of the early adopters of the executable model, and obfuscated accordingly. We used it both to profile the executable model generator and of course to check how effective our improvements are.  To profile our benchmark we used that has the advantages of being seamlessly integrated with JMH, having an extremely low overhead and producing effective and easy to read . To make async-profiler generating the flamegraphs profiling the benchmark under execution is sufficient to add to the command line used to launch JMH a -prof argument like the following:  -prof "async:output=flamegraph;event=cpu;simple=true;dir=/tmp/Profile;width=1920;libPath=/home/mario/software/async-profiler-1.8.1-linux-x64/build/libasyncProfiler.so"  where   * async is to use async-profiler as profiling tool. There are other profilers    available like .  * event is the feature under profiling: cpu (the default) is to find the most    time-consuming method. You can also use alloc to check the memory allocation,    cache-misses and others.  * output is indeed the format used to produce the profiling results. The    supported ones are text, collapsed, flamegraph, tree, jfr (default is text)    but in general I find flamegraphs very visual and then easy to read.  * simple=true is to print only the simple class names instead of the fully    qualified ones. Having the complete package names in the flamegraph make it    much harder to read  * dir is the directory where the output will be written  * width is the width in pixels of the flamegraph, the bigger the better 🙂  * libPath is the location where you have downloaded the async-profiler library   PROFILING THE EXECUTABLE MODEL GENERATION  With this setup, a first run to our benchmark revealed a quite unexpected but very evident issue  The colors in this flamegraph have this meaning:    * green are Java methods  * yellow are C++ methods  * red are user-mode native calls  * orange are kernel calls  In our case it was clear that we were consuming the biggest part of the time collecting garbage instead of doing any useful work.  In other words our main problem was that we were allocating far too many objects but still we had no clue of what was the root cause of this. To discover this it was necessary to rerun the benchmark, but this time profiling the memory allocation using the argument event=alloc. Note that to profile the memory allocation with async-profiler you need to run it on a JVM compiled with HotSpot debug symbols. By doing so we obtained the following flamegraph.  Reading and interpreting this graph is not trivial because the objects’ allocation is of course scattered on almost every method execution. For each profiling session however, asnyc-profiler also generates a second flamegraph showing the stack in reversed order, that in situations like this can be of more immediate readability.  Here the main culprit of the excessive memory allocation is much more visible: JavaParser is creating a lot of Streams to repeatedly parse very small portions of Java code.  It tuned out that we are misusing JavaParser forcing it to perform thousands of microparsing when adding an import or an annotation to an AST or simply to convert a String representing a Class name into the corresponding JavaParser Type in order to use it with the rest of JavaParser API. For instance to add an import to a JavaParser CompilationUnit we did something like:  cu.addImport(“java.util.List”);  This caused JavaParser, something that in all honesty isn’t immediately evident from its documentation, to trigger a parsing of the String “java.util.List” in order to internally create that portion of AST representing it. This can be easily avoided because we already know in advance how that AST should be made. Replacing the former statement with one that programmatically creates the AST portion for the import to be added like the following:  cu.addImport(new ImportDeclaration(new Name(“java.util.List”), false, false));  made it possible to avoid all those unnecessary and memory consuming parsing operations. The combination of the parallelization of the executable model generation, of the savvier usage of JavaParser API and other micro optimizations found during our profiling session allowed us to bring the time required to generate the executable model for the project under benchmarking from the original 133 seconds  Benchmark                             Mode  Cnt    Score    Error  Units KjarCompiler.buildKjarFromBigProject    ss    5  133.018 ± 15.665   s/op  to the current 32.  Benchmark                             Mode  Cnt    Score    Error  Units KjarCompiler.buildKjarFromBigProject    ss    5   32.823 ±  7.883   s/op  We are willing to continue this profiling effort and keep improving the performances of Drools in this and other areas in the near future.  The post appeared first on .]]></content>
        <author>
            <name>Mario Fusco</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Red Hat Summit 2021 (Ask the Experts) - An open approach to solution architectures]]></title>
        <id>http://feedproxy.google.com/~r/schabell/jboss/~3/arMRglaChz8/red-hat-summit-2021-ask-the-experts-an-open-approach-to-solution-architectures.html</id>
        <link href="http://feedproxy.google.com/~r/schabell/jboss/~3/arMRglaChz8/red-hat-summit-2021-ask-the-experts-an-open-approach-to-solution-architectures.html"/>
        <updated>2021-06-10T05:00:00.019Z</updated>
        <content type="html"><![CDATA[ This year the event is a bit different as we bridge the gap from pandemic reality to hopefully a form of normalcy.   As the Red Hat Summit site explains to us, this "...event is expanding to become an all-new, flexible conference series, consisting of a 2‑part immersive virtual experience as well as a global tour of small-scale, in-person* events. This series will create collective opportunities to share experiences, innovations, and insights."  Part one was from April 27-28, where you started your Red Hat Summit journey by joining us for this no-cost event, where you got the latest news, asked the experts your technology questions, heard from customers around the globe, and explored how open source is innovating the future of the enterprise. All of the sessions are online and available throughout the year on-demand.  Part two is from June 15-16, and you can build on what you learned at April’s event with insights from breakout sessions and technical content geared toward the tracks and topics most relevant to your career. You can also interact live with Red Hat professionals at this no-cost event. More depth at this event with the breakout sessions, ask the experts sessions, and a virtual expo hall.  Finally, you noticed the star marking the part three event above? That's because this part of the event we hope allows us to meet in-person, but the ongoing situation means Red Hat will "...continue to monitor the ongoing global health crisis and make adjustments to the Red Hat Summit agenda to help ensure the health, safety, and well-being of everyone within the open source community."  If all goes well, then you can cap your Red Hat Summit experience somewhere from Oct - Nov "...by exploring hands-on activities at in-person events that will be held in several cities. The networking opportunities can help you find the inspiration to discover who you want to be and the tools to do what you want to do." There will be hands-on labs, 1-1 meetings, and training courses available during this final event series.  This year I'm involved with some friends and colleagues in a few Ask The Experts sessions where you get a live session on a topic with several experts available to ask anything you like about the topic.  I've done in April, and I'm going to be involved in the following session next week:     Solution architectures are the detailed and structured descriptions of the features, process, and behavior of a solution. It acts as the base of the solution to define, deliver, manage and operate the development process of the solution. It identifies the alternatives of the solutions and its components.   In this session, we'll highlight the process that Red Hat uses to compile and publish solution architectures for various business and technology scenarios that are based on actual use cases pertinent to our global customers and partners. It includes the key capabilities of continuous global collaboration with the engineering teams.   Date: Tuesday, Jun 15 Time: 16:30 - 17:00 CEST Speakers:   * Eric D. Schabell, Portfolio Architect Technical Director, Red Hat  * Will Nix, Senior Manager, Red Hat  * E.G Nadhan, Chief Architect and Strategist, Red Hat  Make sure you and plan out your agenda as it's free and full of great open source technologies, customer cases, labs, and more. I hope to see you there and if not, then feel free to drop in at a later date as they will be linking recordings of these sessions back into the agenda for your viewing pleasure.     ]]></content>
        <author>
            <name>Eric D. Schabell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 31 May 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-05-31.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-05-31.html"/>
        <updated>2021-05-31T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, keycloak, kogito, infinispan, camel, jgroups, vert.x">
      <h1>This Week in JBoss - 31 May 2021</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_hello_again">Hello again</h2>
<div class="sectionbody">
<p>To our community and all our readers,</p>
<p>I’d like to start this edition with a sincere and frank apology on behalf of the editorial team for the posts we missed in the last month.</p>
<p>There’s been a lot of awesome content that our community has shared and multiple project releases packed with useful new features and clever enhancements.
We’re long overdue in highlighting and celebrating all the great work that JBoss teams are doing, not to mention all the brilliant work of our evangelists and other contributors.</p>
<p>It’s been a busy past few weeks and we’ve got a lot of great articles and releases to catch up on, so let’s go.</p>
</div>
</div>
<div class="sect1">
<h2 id="_release_roundup">Release roundup</h2>
<div class="sectionbody">
<p>Let’s start things off with congrats to all the teams on their hard work!</p>
<div class="ulist square">
<ul class="square">
<li>
<p><a href="http://belaban.blogspot.com/2021/05/jgroups-517-released.html/">JGroups 5.1.7</a> is released. Congrats, Bela!</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-13-6-final-released/">Quarkus 1.13.6.Final</a> has shipped, which is the latest in a recent series of updates to version 1.13.</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-2-0-0-cr2-released/">Quarkus 2 CR2</a> is out!</p>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-4-1-CR2-released/">Vert.x 4.1.0.CR2</a> is here, right on the heels of the beta and CR1 releases.</p>
</li>
<li>
<p><a href="https://infinispan.org/blog/2021/05/07/infinispan-12-1-2-final">Infinispan 12.1.2 Final</a> is available for download so go grab it.</p>
</li>
<li>
<p><a href="https://www.keycloak.org/2021/05/keycloak-1301-released">Keycloak 13.0.1</a> is out!</p>
</li>
<li>
<p><a href="https://blog.kie.org/2021/05/kogito-tooling-0-10-0-released.html">Kogito Tooling 0.10.0</a> has launched!</p>
</li>
<li>
<p><a href="http://bytemanblog.blogspot.com/2021/05/byteman-4015-has-been-released.html]">Byteman 4.0.15</a> is now available!</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_quarkus_2_ama">Quarkus 2 AMA</h2>
<div class="sectionbody">
<p>With the recent release of Quarkus CR2, I’m sure we’re all anticipating Quarkus 2.0 GA.
As part of that release, Max and the rest of the Quarkus team are taking questions that they will answer on an episode of Quarkus Insights.
Use the <code>#quarkusinsights</code> tag to submit a question via social media and tune in to <a href="https://www.youtube.com/watch?v=ETTMBWEBfLY">Quarkus Insights #51: Q &amp; A - Part II</a> on June 2 to hear your questions answered.</p>
<p>Follow the social media links to post your question to the Quarkus team in their post, <a href="https://quarkus.io/blog/quarkus-insights-qanda2/">About to release Quarkus 2 - ask us anything!</a></p>
</div>
</div>
<div class="sect1">
<h2 id="_from_the_community">From the community</h2>
<div class="sectionbody">
<p>Jeff Mesnil has authored a very helpful and detailed look at building and deploying WildFly applications on OpenShift using Helm Charts in his post, <a href="https://www.wildfly.org/news/2021/05/05/helm-charts-for-wildfly/">Helm Chart for WildFly</a></p>
<p>Over on the Infinispan blog, Ryan Emerson has shared some details about the CLI compiled to a native image in <a href="https://infinispan.org/blog/2021/05/21/infinispan-cli-image">Infinispan Native CLI</a>, which is well worth a read.
You should also try downloading the latest Infinispan 12 server version and taking it for a spin with the native CLI!</p>
<p>Another recent one from the Infinispan team comes from Katia Aresti who, along with Ryan Emerson, explains how they <a href="https://developers.redhat.com/articles/2021/05/28/building-real-time-leaderboard-red-hat-data-grid-and-quarkus-hybrid-kubernetes">built a real-time leaderboard using Data Grid and several Quarkus extensions</a> to add some magic to this year’s Red Hat Summit Keynote.</p>
<p>Jacopo Rota on the Kogito blog explains how to <a href="https://blog.kie.org/2021/05/getting-started-with-trustyai-in-only-15-minutes.html">how to deploy a Kogito service together with the TrustyAI infrastructure on an OpenShift cluster in only 15 minutes</a>!</p>
<p>Have you been wanting to find out more about Shenandoah GC? Well, you should dive right in and check out Roman Kennke’s informative post, <a href="https://developers.redhat.com/articles/2021/05/20/shenandoah-garbage-collection-openjdk-16-concurrent-reference-processing">Shenandoah garbage collection in OpenJDK 16: Concurrent reference processing</a>.</p>
<p>Bilgin Ibryam has recently posted <a href="http://www.ofbizian.com/2021/05/data-gateways-of-future.html">Data Gateways in the Cloud Native Era</a> that examines how data gateway components support different use cases and offer a solution for hybrid workloads spread across multiple cloud providers.</p>
<p>Last but certainly not least is Claus Ibsen’s webinar, <a href="http://www.davsclaus.com/2021/05/webinar-integrate-systems-in-age-of.html">Integrate systems in the age of Quarkus and Camel</a>, that explores how the trio of Camel Quarkus, Camel K, and Kamelets simplify the work to manage and bind systems together.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s corner</h2>
<div class="sectionbody">
<p>Eric Schabell never disappoints and his previous series on architectural elements in a real-time stock control solution for retail was no exception.
Eric rounds that series off nicely with <a href="https://www.schabell.org/2021/05/real-time-stock-control-example-stock-control-architecture.html">Real-time stock control - Example stock control architecture</a>.</p>
<p>Not one to rest for long, Eric Schabell launches a new series that tackles how to create a framework for accessing retail data from customers, stock, stores, and staff across multiple internal teams.
I’m sure it’s going to be a brilliant series so go have a look for yourself and find out more in his post, <a href="https://www.schabell.org/2021/05/retail-data-framework-architectural-introduction.html">Retail data framework - An architectural introduction</a>.</p>
<p>I also really enjoyed reading through Christina and Eric’s <a href="http://wei-meilin.blogspot.com/2021/05/tooling-guide-for-getting-started-with.html">Tooling guide for Getting Started with Apache Camel in 2021</a>.
It’s a well put together beginner’s guide to tools that can help with Camel applications.</p>
</div>
</div>
<div class="sect1">
<h2 id="_developers_on_film">Developers on film</h2>
<div class="sectionbody">
<p>Get your popcorn ready and sit back to watch some videos from our community.
Here are my top picks for this week’s editorial:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://youtu.be/ILl85LLj93w">Quarkus Insights #49: Why I use Quarkus for Cloud Native Apps</a></p>
</li>
<li>
<p><a href="https://youtu.be/7JPm1BFcrrk">What is Serverless with Java?</a></p>
</li>
<li>
<p><a href="https://youtu.be/jBDmX85IjLM">No YAML! Kubernetes done the easy way</a></p>
</li>
<li>
<p><a href="https://youtu.be/szza3DZlKzA">Quarkus DevServices</a></p>
</li>
</ul>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
        <category label="kogito" term="kogito"/>
        <category label="infinispan" term="infinispan"/>
        <category label="camel" term="camel"/>
        <category label="jgroups" term="jgroups"/>
        <category label="vert.x" term="vert.x"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 26 April 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-04-26.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-04-26.html"/>
        <updated>2021-04-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, keycloak, kogito, vertx, openshift">
      <h1>This Week in JBoss - 26 April 2021</h1>
      
    <p class="preamble"></p><p>Welcome to another - slightly delayed, installment of our JBoss Editorial! If anything, the last two weeks in the Jboss community has been all about Quarkus and Kogito. Indeed, you’ll find in this post a trove of information and news on the two projects. But also, an exciting opportunity on Keycloak! Without any further ado, let’s jump right in.</p><p></p>
<div class="sect1">
<h2 id="_keycloak_wants_you">Keycloak wants you!</h2>
<div class="sectionbody">
<p>If you are developers who is passionate about Keycloak, there is an opportunity of a lifetime for you! The <a href="https://www.keycloak.org//2021/04/jobs.adoc.html">keycloak team is indeed recruiting!</a>.</p>
<p>Also on the SSO project front, there is a cool post on <a href="https://developers.redhat.com/blog/2021/04/23/integrate-red-hat-data-grid-and-red-hats-single-sign-on-technology-on-red-hat-openshift/">how to integrate Red Data Grid with RHSOO (Keycloak)</a>. Go check it out!</p>
</div>
</div>
<div class="sect1">
<h2 id="_kogito_your_way_out_of_dodge">Kogito your way out of Dodge!</h2>
<div class="sectionbody">
<p>First of all, a few days ago, yet another (see "Developers on film" below) <a href="https://blog.kie.org/2021/04/kogito-serverless-workflow-at-openshift-commons-briefing-2021.html">OpenShift commons briefing around Kogito</a> was delivered (19/04). If the video is (not yet) available, you can checkout the <a href="https://github.com/kiegroup/kogito-examples/">examples code from Github</a>.</p>
<p>Then, you may want to catchup on all <a href="https://blog.kie.org/2021/04/design-tools-highlights-on-kogito-and-business-central-april-2021.html">the cool features released</a> in the last weeks by the project.</p>
<p>If you are a user of VSCode, there are a few items for you. First, you can go and check out <a href="https://blog.kie.org/2021/04/the-score-card-editor-goes-online.html">the score card editors now online</a>. Second, there is a rather tutorial on <a href="https://blog.kie.org/2021/04/how-to-use-test-scenario-editor-to-test-your-dmn-asset-in-vscode.html">using the test scenario editor to validate your DMN assets in VSCode</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner_off_with_their_head">Evangelist’s Corner: Off with their head!!!</h2>
<div class="sectionbody">
<p>With the Red Hat Summit coming up tomorrow, you may want to check out this post of our very own Eric D. Schabell on the new format we are trying out this year: <a href="https://www.schabell.org/2021/04/red-hat-summit-2021-how-to-enjoy-this-three-part-event-series.html">Red Hat Summit: How to enjoy this three-part event series</a>.</p>
<p>On top of that, Eric has, as always, delivered a steady stream of content in the past weeks, with a focus on headless architecture. It started with a first post on <a href="https://www.schabell.org/2021/04/headless-ecommerce-an-architectural-introduction.html">Headless eCommerce - An architectural introduction</a>, to which he did a followup on: <a href="https://www.schabell.org/2021/04/headless-ecommerce-common-architectural-elements.html">Headless eCommerce - Common architectural elements</a>.</p>
<p>Headless architecture was also part of the <a href="https://www.schabell.org/2021/04/store-health-and-safety-architectural-introduction.html">Store health and safety architectural introduction</a>, which also was followed up by a post on <a href="https://www.schabell.org/2021/04/store-health-and-safety-common-architectural-elements.html">Store health and safety common architectural elements</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_quarkus_tips_and_tricks">Quarkus tips and tricks</h2>
<div class="sectionbody">
<p>As mentioned in our introduction, Quarkus has been the focused on many content released in the last weeks. On top of that, as you’ll see in the releases section of this editorial, the project has released not one, but two versions, including an alpha of the upcoming Quarkus 2.0.</p>
<p>Let’s first take a look at the content relating to Quarkus as a development platform. If you are still new to Quarkus, you may want to start then with this post about <a href="https://developers.redhat.com/blog/2021/04/07/deploy-quarkus-everywhere-with-red-hat-enterprise-linux-rhel/">deploying Quarkus everywhere with RHEL</a>. After that, still on the topic of packaging and deployment, you can learn how to <a href="https://developers.redhat.com/blog/2021/04/08/build-even-faster-quarkus-applications-with-fast-jar/">build even faster Quarkus applications with Fast jar</a>.</p>
<p>If you are already onboard Quarkus and his very neat development model, you’ll be quite happy to learn that <a href="https://developers.redhat.com/blog/2021/04/14/mandrel-a-specialized-distribution-of-graalvm-for-quarkus/">Mandrel, a specialized distribution of GraalVM for Quarkus</a> is coming up!</p>
<p>As you may be aware, Quarkus comes already with quite a few supported extensions, but you may still want to learn more about <a href="https://quarkus.io/blog/solving-problems-with-custom-extensions/">custom extensions and which problems they can help you solve</a>.</p>
<p>If you are already running or developing a few webapps on Quarkus, you’ll be interested in <a href="https://quarkus.io/blog/gui-react-patternfly/">learning how to add eye candy to it</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_developers_on_film">Developers on film</h2>
<div class="sectionbody">
<p>No time to read anything? What about relaxing and simply watching some nice technical videos instead?</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://youtu.be/zx0_DIG6698">a brief overview of the Kogito implementation of the CNCF Serverless Workflow, named Serverless Workflows, at OpenShift Commons Briefing</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_release_release_release">Release, release, release…​</h2>
<div class="sectionbody">
<p>As always, the JBoss community has been quite active and released a few major version in the last weeks:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.wildfly.org//news/2021/04/14/WildFly2301-Released/">WildFly 23.0.1 is released!</a></p>
</li>
<li>
<p>Quarkus releases two different versions:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-13-2-final-released">Quarkus 1.13.2.Final was released</a></p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-2-0-0-alpha1-released/">Quarkus 2.0.0.Alpha1 was also released</a>.</p>
</li>
</ul>
</div>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-3-9-7/">Eclipse Vert.x 3.9.7 released!</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_decaf">Decaf'</h2>
<div class="sectionbody">
<p>Enough Java? Too much jitters? Wants a palate cleanser? Here you with a cool two-part series on deploying the Mosquitto MQTT broker on OpenShift: <a href="https://developers.redhat.com/blog/2021/04/16/deploying-the-mosquitto-mqtt-message-broker-on-red-hat-openshift-part-1/">(part 1)</a> and <a href="https://developers.redhat.com/blog/2021/04/26/deploying-the-mosquitto-mqtt-message-broker-on-red-hat-openshift-part-2/">(part2)</a>.</p>
<p><em>That’s all for today! Please join us again in two weeks for another installment of our JBoss editorial! Stay safe and healthy in the meantime.</em></p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
        <category label="kogito" term="kogito"/>
        <category label="vertx" term="vertx"/>
        <category label="openshift" term="openshift"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 8 April 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-04-08.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-04-08.html"/>
        <updated>2021-04-08T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, keycloak, kogito, elytron, containers, javascript">
      <h1>This Week in JBoss - 8 April 2021</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_release_roundup">Release roundup</h2>
<div class="sectionbody">
<p>Let’s start things off with congrats to the teams on their hard work!</p>
<div class="ulist square">
<ul class="square">
<li>
<p><a href="https://infinispan.org/blog/2021/04/07/infinispan-12-1-0-final">Infinispan 12.1.0.Final</a> is released!<br>
This version of Infinispan, codenamed Taedonggang, includes a bunch of new features and fixes. Be sure to check out the announcement and start using it right away.</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-13-0-final-released/">Quarkus 1.13</a> and <a href="https://quarkus.io/blog/quarkus-1-13-1-final-released/">Quarkus 1.13.1.Final</a> are now available with loads of great new features and improvements.</p>
</li>
</ul>
</div>
<p>Our very own Bela Ban has also recently finished off the work on <a href="https://github.com/belaban/JGroups/tree/jgroups-4.2.12.Final">JGroups 4.2.12</a> and <a href="https://github.com/belaban/JGroups/tree/jgroups-5.1.6.Final">JGroups 5.1.6</a>.
While there might not be an "official" annoucement on his blog, you can check Bela’s commit history for details.</p>
</div>
</div>
<div class="sect1">
<h2 id="_from_the_community">From the community</h2>
<div class="sectionbody">
<p>Let’s take a look at what’s been happening in the community since our last editorial.</p>
<p>First up is a post by Hao Wu, <a href="https://blog.kie.org/2021/04/how-to-interact-with-business-processes-using-camel-routes.html">How to Interact with Business Processes Using Camel Routes</a>, that neatly explains using Apache Camel to interact with business processes deployed in a KIE server.</p>
<p>Rebecca Searls, over at the RESTEasy blog, recently added a post titled <a href="https://resteasy.github.io/2021/04/05/blog-ParamConverter-with-Quarkus/">JAX-RS ParamConverter with Quarkus</a> that shows how to write RESTful services with Quarkus using the JAX-RS ParamConverter.</p>
<p>Eric Schabell has, yet again, delivered some great posts recently that demonstrate how community technology can solve real world business problems.</p>
<p>Finishing off a series of articles on point of sale architectures, Eric delves in a specific example in his post, <a href="https://www.schabell.org/2021/03/point-of-sale-example-image-distribution-architecture.html">Point of sale - Example image distribution architecture</a>.
Be sure to check the links at the end of the post in case you missed any of the other articles in his architecture blueprint for point of sale imaging in retail.</p>
<p>Not one to rest, Eric kicks things off with another series to share an architectural blueprint for the use case of deploying a container-based eCommerce website while moving away from tightly coupled existing eCommerce platform.</p>
<p>This first article in this series is <a href="https://www.schabell.org/2021/04/headless-ecommerce-an-architectural-introduction.html">Headless eCommerce - An architectural introduction</a>, which gives you an outline for the use case.</p>
<p>Eric then continues the series with his post, <a href="https://www.schabell.org/2021/04/headless-ecommerce-common-architectural-elements.html">Headless eCommerce - Common architectural elements</a>.
In this article, Eric goes into detail on common generic elements that make up the architecture blueprint for the headless eCommerce use case.</p>
<p>Stay tuned for the rest of Eric’s series!
I’m sure there’s lots more great information on the way.</p>
</div>
</div>
<div class="sect1">
<h2 id="_red_hat_developer_network">Red Hat developer network</h2>
<div class="sectionbody">
<p>James Falkner talks us through what’s new with the beta release of JBoss EAP 7.4 beta, including an detailed look at security and management improvement.
What to find out what’s going on? Take a few minutes and read his post, <a href="https://developers.redhat.com/blog/2021/03/30/security-and-management-improvements-in-red-hat-jboss-enterprise-application-platform-7-4-beta/">Security and management improvements in Red Hat JBoss Enterprise Application Platform 7.4 Beta</a>.</p>
<p>Pasquale Congiusti also breaks down Camel K’s Kamelets and shows how they simplify complex system integration in his post, <a href="https://developers.redhat.com/blog/2021/04/02/design-event-driven-integrations-with-kamelets-and-camel-k/">Design event-driven integrations with Kamelets and Camel K</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_developers_on_film">Developers on film</h2>
<div class="sectionbody">
<p>Get your popcorn ready and sit back to watch some videos from our community.
Here are my top picks for this week’s editorial:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://youtu.be/eW_1rj2EKYM">3 new Java tools to try in 2021</a></p>
</li>
<li>
<p><a href="https://youtu.be/RZbLwBuKxuw">Quarkus Insights #43: Writing Quarkus Extensions</a></p>
</li>
<li>
<p><a href="https://youtu.be/U_SqX5uMbds">Improving security with Istio | DevNation Tech Talk</a></p>
</li>
</ul>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
        <category label="kogito" term="kogito"/>
        <category label="elytron" term="elytron"/>
        <category label="containers" term="containers"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 25 March 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-03-25.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-03-25.html"/>
        <updated>2021-03-25T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="news, weekly_update, weekly_editorial, wildfly, vertx, quarkus, kie, camel, kogito">
      <h1>This Week in JBoss - 25 March 2021</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we search through the JBoss Community for interesting articles and updates</p><p></p>
<div class="sect1">
<h2 id="_introducing_the_prolific_eric_schabell">Introducing the prolific Eric Schabell</h2>
<div class="sectionbody">
<p>If you are a regular reader of the JBoss Editorial  you will be very familiar with the work of Eric Schabell, arguably one of the most prolific writers within the JBoss Community.  This edition is no different and sees Eric product three more articles.</p>
<p>Eric’s first article is a continuation of his Supply Chain Integration Blueprint discussion.  In this article Eric <a href="https://www.schabell.org/2021/03/supply-chain-integration-example-store-integration-architecture.html">expands on the common architectural elements discussed previously and outlines an example Store integration architecture for Supply Chain integration</a>.</p>
<p>Eric’s second article walks us through <a href="https://www.schabell.org/2021/03/codeready-containers-howto-setup-openshift-47-on-local-machine.html">the necessary steps for installing and running the OpenShift Container Platform 4.7 on our local machines</a>.</p>
<p>Eric’s final article kicks off a new series of articles within which he will introduce a new architectural blueprint covering <a href="https://www.schabell.org/2021/03/point-of-sale-an-architectural-introduction.html">"Simplifying and modernizing central management of distributed point-of-sale devices with built in support for container based applications"</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_whats_new_in_kogito_land">What’s new in Kogito land?</h2>
<div class="sectionbody">
<p>The <a href="http://kie.org">Kogito team</a> have been busy over the last few weeks publishing a number of interesting blog posts covering different aspects of the Kogito ecosystem.</p>
<p>We begin our coverage with an article written by William <a href="https://blog.kie.org/2021/03/building-prometheus-dashboards-in-business-central.html">demonstrating how to integrate metrics from a Prometheus datasource into the Business Central</a>.  The article walks you through the process from the creation of the data set within Dashbuilder, building the dashboard, how to consider filtering requirements and how to test the dashboard.</p>
<p>The next article, written by Manaswini, follows on from William’s article and <a href="https://blog.kie.org/2021/03/time-series-component-for-dashbuilder.html">demonstrates how you can further extend your dashboard through the integration and visualisation of time series data</a>.</p>
<p>The final article, written by Ricardo, introduces us to Kogito’s support for the <a href="https://github.com/serverlessworkflow/specification/">CNCF Serverless Workflow</a> specification, <a href="https://blog.kie.org/2021/03/restful-services-orchestration-with-kogito-and-openapi.html">allowing Kogito to provide a serverless interface to a service which can also be used to orchestrate RESTful services described through the OpenAPI standard</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_clustering_wildfly_using_dns_ping">Clustering WildFly using DNS ping</h2>
<div class="sectionbody">
<p>When running within a kubernetes environment it is natural to consider the <a href="http://www.jgroups.org/manual5/index.html#_kube_ping">KUBE_PING protocol</a> for cluster discovery, a protocol relying on the ability to query the kubernetes API server.  If you want to remain agnostic of your environment, or if you do not have sufficient permissions to query the kubernetes API server, then an alternative approach to consider would be the <a href="https://www.wildfly.org//news/2021/03/12/Bootable-jar-jkube-clustering-dns-ping-openshift/">DNS_PING protocol</a> as <a href="https://www.wildfly.org//news/2021/03/12/Bootable-jar-jkube-clustering-dns-ping-openshift/">demonstrated by Yeray using a simple WildFly bootable JAR application</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_optimizing_camel_3_9_no_more_saw_tooth_jvm_garbage_collection">Optimizing Camel 3.9, no more saw tooth JVM garbage collection</h2>
<div class="sectionbody">
<p>The upcoming Camel 3.9 release will include some additional, significant improvements in the performance of the internal routing engine leading to a dramatic reduction in object allocation during continuous use.  The Camel team focussed on the five major areas of the codebase they had identified during performance testing with the intention of reducing the allocation count as much as possible, they managed to go one better and achieved a sustained object allocation count of zero!  For more information take a look at <a href="http://www.davsclaus.com/2021/03/apache-camel-39-no-more-saw-tooth-jvm.html">Claus' blog describing the effort</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_monitoring_quarkus_applications_on_openshift">Monitoring Quarkus applications on OpenShift</h2>
<div class="sectionbody">
<p>If you are running a Quarkus application on OpenShift you will most likely have a need for integrating with the centralised prometheus instance within the cluster.  This integration is fairly straight forward and can be achieved after following only a few simple steps <a href="https://quarkus.io/blog/micrometer-prometheus-openshift/">as ably demonstrated by Jose</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_new_releases">New Releases</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>The <a href="https://www.wildfly.org/">WildFly team</a> have announced</p>
<div class="ulist">
<ul>
<li>
<p>the <a href="https://www.wildfly.org/news/2021/03/11/WildFly-MicroProfile-Reactive-specifications-feature-pack-2.0/">2.0.0.Final release of the MicroProfile Reactive Specifications Feature Pack for WildFly</a></p>
</li>
<li>
<p>the <a href="https://www.wildfly.org/news/2021/03/19/bootable-jar-4.0.Final-Released/">4.0.0.Final release of the WildFly Bootable JAR Maven Plugin</a></p>
</li>
<li>
<p>the <a href="https://www.wildfly.org//news/2021/03/18/WildFly-s2i-23-Released/">23.0 release of the WildFly S2I images</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>The <a href="http://kie.org/">Kogito team</a> have announced</p>
<div class="ulist">
<ul>
<li>
<p>the release of <a href="https://blog.kie.org/2021/03/kogito-tooling-0-8-5-released.html">Kogito Tooling 0.8.5</a>.</p>
</li>
<li>
<p>the preliminary release of their <a href="https://blog.kie.org/2021/03/scorecard-editor.html">PMML (4.4) Scorecard Editor</a>.</p>
</li>
</ul>
</div>
</li>
<li>
<p>The <a href="https://vertx.io">Vert.x team</a> have announced the release of <a href="https://vertx.io/blog/eclipse-vert-x-4-0-3/">Eclipse Vert.x 4.0.3</a>.</p>
</li>
</ul>
</div>
<p>That’s all for this edition of the JBoss Editorial, please join us in a couple of weeks when we will bring you more news and articles from the JBoss Community Projects.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/kevin-conner.png"></pfe-avatar>
        <span>Kevin Conner</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Kevin Conner</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/kevin-conner</uri>
        </author>
        <category label="news" term="news"/>
        <category label="weekly_update" term="weekly_update"/>
        <category label="weekly_editorial" term="weekly_editorial"/>
        <category label="wildfly" term="wildfly"/>
        <category label="vertx" term="vertx"/>
        <category label="quarkus" term="quarkus"/>
        <category label="kie" term="kie"/>
        <category label="camel" term="camel"/>
        <category label="kogito" term="kogito"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 11 March 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-03-11.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-03-11.html"/>
        <updated>2021-03-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, keycloak, kogito, elytron, containers, javascript">
      <h1>This Week in JBoss - 11 March 2021</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_release_roundup">Release roundup</h2>
<div class="sectionbody">
<p>Let’s start things off with congrats to all the teams on their hard work!</p>
<div class="ulist square">
<ul class="square">
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-12-1-final-released/">Quarkus 1.12.1.Final</a> is out with bug fixes and documentation improvements.</p>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-3-9-6">Eclipse Vert.x 3.9.6</a> is now available and delivers several bug fixes.</p>
</li>
<li>
<p><a href="https://www.keycloak.org/2021/03/keycloak-1204-released">Keycloak 12.0.4</a> is also released. Go check out their blog for full details.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_from_the_community">From the community</h2>
<div class="sectionbody">
<p>There’s been a lot of activity since the last editorial so let’s take a look.</p>
<p>First up is Ramon Gordillo’s rather interesting take on moving legacy technology on Kubernetes.
Ramon starts by pointing out that even software that is considered "legacy" and traditionally on-prem is often packed with new and useful features.
Add to that the fact that many containerized applications still rely on legacy systems - "not all apps are greenfield" - and he builds a solid case for doing something that might otherwise induce a few gasps.
Go see how Ramon tackles running IBM DB2 in containers, <a href="https://blog.ramon-gordillo.dev/2021/03/trying-db2-in-kubernetes-for-developers/">Trying DB2 in Kubernetes for developers</a>.</p>
<p><a href="https://blog.kie.org/2021/02/migrating-jbpm-images-secured-by-ldap-to-elytron.html">Migrating jBPM images secured by LDAP to Elytron</a> by Gonzalo Muñoz Fernández is one that I thoroughly enjoyed.
If you’re not familiar with Elytron it is, as Gonzalo explains, Wildfly’s security framework that puts security management and application access into a single subsystem.
In his post, Gonzalo clearly describes and then steps through how to migrate jBPM images from PicketBox, which is a security subsystem based on JAAS login modules, over to Elytron.</p>
<p>Also on the Kogito blog, Paul Brown and Emily Murphy take on the challenge of <a href="https://blog.kie.org/2021/03/optimizing-covid-19-vaccination-appointment-scheduling.html">Optimizing COVID-19 vaccination appointment scheduling</a>.
Their post details the approach for using OptaPlanner to handle planning constraints and automatically assign vaccination appointments.
Getting vaccinations rolled out globally is a massive logistical and planning challenge so it’s comforting to know our community is providing tooling to get us all back to "normal".</p>
<p>The Red Hat Developer blog has a couple of recent entries focused on JavaScript that are both good reads.</p>
<p>Michael Dawson introduces us to the <a href="https://developers.redhat.com/blog/2021/03/08/introduction-to-the-node-js-reference-architecture-part-1-overview/">Node.js reference architecture from Red Hat and IBM</a> and explains their reasons for creating it.
The goal is to help developers make good choices when navigating the vibrant and extensive JavaScript ecosystem by recommending packages based on shared experience across teams and projects.</p>
<p>Joel Lord takes us through <a href="https://developers.redhat.com/blog/2021/03/04/building-rootless-containers-for-javascript-front-ends/">Building rootless containers for JavaScript front ends</a> to demonstrate how you can avoid security vulnerabilities and potential disaster.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s corner</h2>
<div class="sectionbody">
<p>Our ever productive Eric Schabell has brought us some fantastic content that should really get you thinking about community technology can apply to solve real world business problems.</p>
<p>Similarly to James and Emily’s post on the Kogito blog, Eric shows how <a href="https://www.schabell.org/2021/03/business-optimisation-architecture-example-vaccine-scheduling-.html">retail pharmacies can optimize scheduling to provide customer vaccinations</a>.</p>
<p>Eric also provides a <a href="https://www.schabell.org/2021/03/supply-chain-integration-an-architectural-introduction.html">architectural blueprint for supply-chain integration</a> that comes with a treasure trove of resources and is well worth delving into.</p>
</div>
</div>
<div class="sect1">
<h2 id="_developers_on_film">Developers on film</h2>
<div class="sectionbody">
<p>Get your popcorn ready and sit back to watch some videos from our community.
Here are my top picks for this week’s editorial:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://youtu.be/ogbMLeU1ogk">Make your Quarkus apps even faster with Fast Jar packaging</a></p>
</li>
<li>
<p><a href="https://youtu.be/BQMMd-RbXcE">Quarkus Insights #40: Behind the curtains with Quarkus tooling and workflows</a></p>
</li>
<li>
<p><a href="https://youtu.be/ALeGqUAJrUU">Data gateways: Legacy data for microservices</a></p>
</li>
</ul>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
        <category label="kogito" term="kogito"/>
        <category label="elytron" term="elytron"/>
        <category label="containers" term="containers"/>
        <category label="javascript" term="javascript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 25 February 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-02-25.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-02-25.html"/>
        <updated>2021-02-25T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, kogito, openshift, bpm, microprofile, resteasy, keycloak, infinispan">
      <h1>This Week in JBoss - 25 February 2021</h1>
      
    <p class="preamble"></p><p>Welcome to another installment of our JBoss Editorial! Today, we’ll focus on Kogito and the upcoming major release of Wildfly. Enjoy!</p><p></p>
<div class="sect1">
<h2 id="_wildfly_23_beta_microprofile">Wildfly 23 Beta: Microprofile</h2>
<div class="sectionbody">
<p>As the release of the next major version of Wildlfy is coming up soon, Brian Stanberry took the time to write up a brief article on the <a href="https://www.wildfly.org//news/2021/02/24/WildFly23-Beta-Released/">progress with MicroProfile</a>. If you have interested in playing with <a href="https://github.com/eclipse/microprofile/releases/tag/4.0">MicroProfile Platform 4.0</a> or see tech preview support for <a href="https://github.com/eclipse/microprofile-reactive-messaging/releases/tag/1.0">MicroProfile Reactive Messaging 1.0</a>, go check out <a href="https://download.jboss.org/wildfly/23.0.0.Beta1/wildfly-23.0.0.Beta1.zip">Wildfly 23 Beta1</a> and let us know what you think!</p>
</div>
</div>
<div class="sect1">
<h2 id="_kogito">Kogito</h2>
<div class="sectionbody">
<p>If you are already a Kogito user or if you are interested in exploring this software, there were a few articles released in the past two weeks that you might find interesting. The first one is on <a href="https://blog.kie.org/2021/02/kogito-notifications-api.html">Kogito Notification API</a> which is followed nicely by the second one on <a href="https://blog.kie.org/2021/02/event-driven-decisions-with-kogito.html">Event-driven decisions with Kogito</a></p>
<p>If you want something more practical, you’ll certainly enjoy the third article on <a href="https://blog.kie.org/2021/02/3-steps-to-author-bpmn-dmn-editors-on-github-codespaces.html">3 steps to author BPMN and DMN assets on GitHub Codespaces</a></p>
</div>
</div>
<div class="sect1">
<h2 id="_quarkus_fast_jar_as_default_multipart_support_for_resteasy_reactive">Quarkus: Fast jar as default, Multipart support for RESTEasy Reactive</h2>
<div class="sectionbody">
<p>Following up the recent release of <a href="https://quarkus.io/blog/quarkus-1-11-3-final-released/">Quarkus 1.11.3.Final</a>, <a href="https://quarkus.io/blog/quarkus-1-12-0-final-released/">Quarkus 1.12 was just released</a> and includes some exciting new features. First, fast jar is now by default and the framework added multipart support for RESTEasy Reactive. Go check it out!</p>
<p>And if you have not yet looked into Quarkus, a new tutorial has been released: <a href="https://developers.redhat.com/blog/2021/02/11/enhancing-the-development-loop-with-quarkus-remote-development/">Enhancing the development loop with Quarkus remote development</a>, so it’s the perfect opportunity to explore the framework potential and test it over OpenShift.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s Corner</h2>
<div class="sectionbody">
<p>As always, our very own Eric Schabell has provided the community with quite a lot of content in the last two weeks. First, you have a nice <a href="https://www.schabell.org/2021/02/business-optimisation-an-introduction.html">introduction to Business optimization architecture</a>, which can be followed by this other piece on <a href="https://www.schabell.org/2021/02/business-optimisation-common-architectural-elements.html">Business optimization architecture - Common architectural elements</a>.</p>
<p>Of course, Eric has not forgotten the famous OpenShift and delivered a pretty nifty <a href="https://www.schabell.org/2021/03/refcard-getting-started-with-openshift.html">RefCard - Getting started with OpenShift</a> published for DZone. Go grab it!</p>
</div>
</div>
<div class="sect1">
<h2 id="_releases">Releases!</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-12-0-final-released/">Quarkus 1.12 released</a></p>
</li>
<li>
<p><a href="https://download.jboss.org/wildfly/23.0.0.Beta1/wildfly-23.0.0.Beta1.zip">Wildfly 23 Beta1 is now available</a></p>
</li>
<li>
<p><a href="https://resteasy.github.io/2021/02/18/resteasy-3.15.0.Final/">RESTEasy 3.15.0.Final is now available</a></p>
</li>
<li>
<p><a href="http://bytemanblog.blogspot.com/2021/02/byteman-4014-has-been-released.html">Byteman 4.0.14 has been released </a></p>
</li>
<li>
<p><a href="https://www.keycloak.org//2021/02/keycloak-1203-released.html">Keycloak 12.0.3 released</a></p>
</li>
<li>
<p><a href="https://infinispan.org/blog/2021/02/12/infinispan-12-0-1">Infinispan 12.0.1.Final "Lockdown"</a></p>
</li>
</ul>
</div>
<p><em>That’s all for today! Please join us again in two weeks for another installment of our JBoss editorial! Stay safe and healthy in the meantime.</em></p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="kogito" term="kogito"/>
        <category label="openshift" term="openshift"/>
        <category label="bpm" term="bpm"/>
        <category label="microprofile" term="microprofile"/>
        <category label="resteasy" term="resteasy"/>
        <category label="keycloak" term="keycloak"/>
        <category label="infinispan" term="infinispan"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 11 February 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-02-11.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-02-11.html"/>
        <updated>2021-02-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, wildfly, kogito, openshift, vertx">
      <h1>This Week in JBoss - 11 February 2021</h1>
      
    <p class="preamble"></p><p>Here we are again, it’s been two weeks and we’re into the second month of 2021!
How quickly times flies!
In this edition, expect to find release information, blog posts, and general updates from around the JBoss Community.</p><p></p>
<div class="sect1">
<h2 id="_releases">Releases!</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-11-2-final-released/">Quarkus 1.11.2.Final</a> is the second maintenance release for the Quarkus 1.11 branch. The notable bug fix with this version is updating to Hibernate ORM 5.4.27.SP1 which fixes a potential data loss issue. Please see the <a href="https://github.com/quarkusio/quarkus/releases/tag/1.11.2.Final">full changelog for more info</a>.</p>
</li>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-11-3-final-released/">Quarkus 1.11.3.Final</a> is a quick bug fix release that focused on a regression making it impossible to build native executables if your project was using both RESTEasy and OpenTracing. <a href="https://github.com/quarkusio/quarkus/releases/tag/1.11.3.Final">Please see the full changelog</a> for more information.</p>
</li>
<li>
<p><a href="https://www.wildfly.org//news/2021/02/11/WildFly2201-Released/">Wildfly 22.0.1</a> has been released, about a month after 22.0.</p>
</li>
<li>
<p><a href="https://vertx.io/blog/eclipse-vert-x-4-0-2/">Vert.x 4.0.2 released</a> recently. The 4.0.1 release also happened, but contained potential memory leaks and the team decided not to announce it and proceed with another quick release to fix the issues. <a href="https://github.com/vert-x3/wiki/wiki/4.0.2-Release-Notes">Please view the release notes for more details</a>.</p>
</li>
<li>
<p><a href="https://blog.kie.org/2021/02/kogito-tooling-0-8-3-released.html">Kogito Tooling 0.8.3 released</a> a few days ago. With the release of 0.8.1, the Kogito team released their official version of the BPMN and DMN standalone editors. This release builds on that and continues to allow you to embed the editor within your application. It also allows you to open DMN 1.1 and 1.3 assets. The post also contains a list of bugs squashed</p>
</li>
</ul>
</div>
<p>We would certainly like to thank all those who helped complete these releases!
Each team is grateful for the help from the community.</p>
</div>
</div>
<div class="sect1">
<h2 id="_highlights_from_the_blogosphere">Highlights from the blogosphere</h2>
<div class="sectionbody">
<p>Eric Schabell published a migration guide for a traditional JBoss BPM application running either within a VM or on bare-metal to running inside containers using OpenShift Container Platform.
In <a href="https://www.schabell.org/2021/03/4-easy-steps-for-migrating-projects-to-openshift-container-platform.html">his post he breaks the migration down into four steps</a>.
I won’t detail them all here, but the steps are very easy and you should be able to get up and running quickly on your own laptop, even without having some of the tech installed previously!</p>
<p><a href="https://blog.kie.org/2021/02/improvements-of-project-authoring-in-business-central.html">Abhishek Kumar discussed project authoring improvements within Business Central recently on the KIE Blog</a>.
The features he discusses are:
. Opening projects directly with a URL
. Changing the default asset page size
. Security permissions for project screen tools and tabs</p>
<p>Each of these help users in the authoring process within Business Central through either ease of use or security!</p>
<p>Still on the KIE Blog, <a href="https://blog.kie.org/2021/01/how-to-use-a-pmml-file-in-dmn-editor-vscode.html">Yeser Amer demonstrates how to use PMML models in the DMN Editor</a>.
PMML support was released with version 0.7.0.
PMML is an XML file describing a predictive model often generated by data mining or AI algorithms.
The support for this format within the VSCode plugin was recently released and follows the same usage patterns as those found within Business Central, so it may very well be familiar to some.</p>
<p>A number of blogs about Quarkus sprang up over the past couple of weeks!</p>
<p>Firstly, Georgios Andrianakis discusses <a href="https://quarkus.io/blog/resteasy-reactive-faq/">achieving massive performance without headaches</a> in a RESTEasy application on Quarkus using RESTEasy Reactive.
He talks about the different models, how to use them, the best way to get performance out of each model, and why this will likely becoming the default model within RESTEasy on Quarkus in the near future.</p>
<p>Clement Escoffier <a href="https://quarkus.io/blog/getting-started-amqp/">helps us get started with AMQP in Quarkus</a> with an in-depth demo similar to using Kafka.
He walks you through the basics and gives you a running project which he steps through to show you all the basics.</p>
<p>Over on the Red Hat Developers Blog, Eric Deandrea shows us a very cool trick, or maybe the power of Quarkus’s Spring compatibility, about running a Spring Boot application on Quarkus without changing a single line of Java code!
It is definitely worth the read, <a href="https://developers.redhat.com/blog/2021/02/09/spring-boot-on-quarkus-magic-or-madness/">head on over to check it out</a>!</p>
<p>If you missed the announcement about Quarkus remote development, be sure to read up about it by Daniel Oh <a href="https://developers.redhat.com/blog/2021/02/11/enhancing-the-development-loop-with-quarkus-remote-development/">on the Red Hat Developer Blog</a>.
Using a mutable-jar package, you can deploy onto OpenShift and continue to develop remotely without having to build a new container and push every time you want to see a change!
What an amazing way to build on the cloud and make sure everything works correctly without having slow downs!</p>
<p>Yeray Borges of the Wildfly team <a href="https://www.wildfly.org/news/2021/02/01/Bootable-jar-jkube-clustering-openshift/">demonstrates how to deploy a bootable Wildfly application jar which caches the HTTP session state</a>.
It’s a useful option allowing you to build and test locally and then push to OpenShift with minimal changes ensuring your application still works in the cloud.</p>
<p>Lastly, Mario Fusco and Edson Yanaga have a presentation from a recent DevNation Live about designing a Java API.
Check it out over on <a href="https://developers.redhat.com/devnation/tech-talks/design-java-apis">the Red Hat Developer blog</a>.
Certainly worth the watch if you develop APIs in Java (which should be most of you).</p>
<p>Thanks for being with us for another edition of the JBoss Weekly Editorial.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/jason-porter.png"></pfe-avatar>
        <span>Jason Porter</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Jason Porter</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/jason-porter</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="wildfly" term="wildfly"/>
        <category label="kogito" term="kogito"/>
        <category label="openshift" term="openshift"/>
        <category label="vertx" term="vertx"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 28 January 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-01-28.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-01-28.html"/>
        <updated>2021-01-28T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, infinispan, openshift, camel, kafka, wildfly, keycloak">
      <h1>This Week in JBoss - 28 January 2021</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_releases">Releases!!</h2>
<div class="sectionbody">
<p>Infinispan 12 release, codenamed <code>Lockdown</code>, brings a ton of new features and improvements.
Indexing and querying capabilities have seen a number of improvements with the help of Hibernate Search integration.
ProtoStream marshalling is upgraded with a new <code>@ProtoAdapter</code> annotation that lets you easily integrate third-party classes.
It’s a pretty elegant solution to what could present itself as a real headache for developers.
Speaking of marshalling improvements, Infinispan 12 also makes your life easier by automatically generating and registering <code>SerializationContextInitializer</code> implementations to marshall user types.
Also notable is the SPI for cross-site replication merge conflicts, which continues on the brilliant work that team has done to provide a solution for ensuring data integrity.
There’s a lot going on in Infinispan 12 and probably too much to try and sum up here so why not head over and read all the details in the <a href="https://infinispan.org/blog/2021/01/25/infinispan-12-final">Infinispan 12.0.0.Final Announcement</a>.</p>
<p>Congratulations to the entire Infinispan team on all the hard work.</p>
<p><a href="https://quarkus.io/blog/quarkus-1-11-0-final-released/">Quarkus 1.11</a> is here!
This release brings you RESTEasy Reactive, which is a new JAX-RS implementation for writing RESTful services.
Quarkus 1.11 also introduces the Dev UI so you can quickly visualize all your loaded extensions, access docs, and more.
Of course there are other things in Quarkus 1.11 but RESTEasy Reactive and the Dev UI look to be quite promising indeed.</p>
<p>The Quarkus team keep things rolling with the release of <a href="https://quarkus.io/blog/intellij-quarkus-tools-1.3.0/">Quarkus Tools for IntelliJ 1.3.0</a> that adds codestarts to the Quarkus project wizard.</p>
<p><a href="https://www.keycloak.org//2021/01/keycloak-1202-released.html">Keycloak 12.0.2</a> is now available too!
Head on over to their site and check it out.</p>
</div>
</div>
<div class="sect1">
<h2 id="_wildfly_bootable_jars_on_openshift">WildFly Bootable JARs on OpenShift</h2>
<div class="sectionbody">
<p>Emmanuel Hugonnet <a href="https://www.wildfly.org//news/2021/01/24/odo-bootable-jar/">shows you how to use WildFly’s bootable JAR feature</a> and the <code>odo</code> CLI tool to easily build and deploy applications on OpenShift.</p>
</div>
</div>
<div class="sect1">
<h2 id="_getting_started_with_apache_kafka_in_quarkus">Getting Started with Apache Kafka in Quarkus</h2>
<div class="sectionbody">
<p>Clement Escoffier details how to get you started with Apache Kafka in Quarkus applications in less than 10 steps using Reactive Messaging.
Clement provides a GitHub repository with the code too so take a look at his <a href="https://quarkus.io/blog/getting-started-kafka/">Getting Started with Apache Kafka</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_easing_the_keycloak_integration_tests_in_kie_server_with_testcontainers">Easing the Keycloak integration tests in Kie Server with Testcontainers</h2>
<div class="sectionbody">
<p>Over at the Kie blog, Gonzalo Muñoz Fernández demonstrates <a href="https://blog.kie.org/2021/01/keycloak-integration-tests-in-kie-server-with-testcontainers.html">using Testcontainers to quickly and easily create integration tests with Kie Server and Keycloak</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_resteasy_wadl_module_in_wildfly">RESTEasy WADL Module in WildFly</h2>
<div class="sectionbody">
<p>Wei Nan gives a straightforward example of <a href="https://resteasy.github.io/2021/01/18/deploy-resteasy-wadl-to-wildfly/">deploying the RESTEasy WADL module</a> into WildFly.</p>
</div>
</div>
<div class="sect1">
<h2 id="_quarkus_insights_hibernate_search_6">Quarkus Insights: Hibernate Search 6</h2>
<div class="sectionbody">
<p>Have you subscribed to the <a href="https://www.youtube.com/c/Quarkusio/videos">Quarkusio YouTube</a> channel yet?</p>
<p>If not, head over and take a look.
There are always interesting discussions and cool speakers.</p>
<p>One recent video that I really enjoyed, and is timed well with the release of Infinispan 12, is <a href="https://www.youtube.com/watch?v=hwxWx-ORVwM">Episode #32</a> where Yoann Rodière joins the lads and introduces us to <a href="https://hibernate.org/search/releases/6.0/#whats-new">Hibernate Search 6</a>.
Yoann goes through all the exciting new stuff in Hibernate Search and explains how the search API gives you accurate and flexible full-text search for applications to overcome the limitations that come from SQL queries.</p>
</div>
</div>
<div class="sect1">
<h2 id="_apache_camel_and_java_flight_recorder">Apache Camel and Java Flight Recorder</h2>
<div class="sectionbody">
<p>Claus Ibsen’s recent <a href="http://www.davsclaus.com/2021/01/apache-camel-38-and-java-flight-recorder.html">Apache Camel 3.8 and Java Flight Recorder</a> post breaks down how you can capture work steps with Flight Recorder to diagnose Apache Camel and improve performance.</p>
</div>
</div>
<div class="sect1">
<h2 id="_red_hat_developer_highlights">Red Hat Developer Highlights</h2>
<div class="sectionbody">
<p>In another Flight Recorder post, Andrew Azores gives us a great tutorial on using <a href="https://developers.redhat.com/blog/2021/01/25/introduction-to-containerjfr-jdk-flight-recorder-for-containers/">JDK Flight Recorder for containers</a> running on OpenShift.</p>
<p>Finally, there is a great DevNation Tech Talk by Sebastien Blanc and Edson Yanaga on <a href="https://developers.redhat.com/devnation/tech-talks/kubectl-quarkus">Building kubectl plugins with Quarkus</a>.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="infinispan" term="infinispan"/>
        <category label="openshift" term="openshift"/>
        <category label="camel" term="camel"/>
        <category label="kafka" term="kafka"/>
        <category label="wildfly" term="wildfly"/>
        <category label="keycloak" term="keycloak"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss: 14 January 2021]]></title>
        <id>https://www.jboss.org/posts/weekly-2021-01-14.html</id>
        <link href="https://www.jboss.org/posts/weekly-2021-01-14.html"/>
        <updated>2021-01-14T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="wildfly, camel, keycloak, teiid, springboot, tekton, kubernetes, codeready, quarkus, jgroups">
      <h1>This Week in JBoss: 14 January 2021</h1>
      
    <p class="preamble"></p><p>Welcome to the first installment of our JBoss Editorial for 2021! And to start the year, we have a brand new major release of the core product of the JBoss community! Yes, Wildfly 22 is out!</p><p></p>
<div class="sect1">
<h2 id="_wildfly_22_and_camel_3_7">Wildfly 22 and Camel 3.7</h2>
<div class="sectionbody">
<p>Yes! We have a brand new major version of Wildfly! <a href="https://www.wildfly.org/news/2021/01/13/WildFly22-Final-Released/">Wildfly 22 is out!</a>.</p>
<p>This release includes support for use of log4j2 in applications, new base health and metrics subsystems to provide server observability for users who don’t need the application instrumentation that comes with MicroProfile Health and Metrics, and a number of other features related to management, provisioning, messaging and security. Plus numerous bug fixes, enhancements and component upgrades.</p>
<p>On top of that, there is also an updated version of the new tech-preview WildFly Preview distribution. This will allow the community have a look at what Wildfly developers are doing for Jakarta EE 9 support, along with other changes in the server architecture that are expected to appear later in 2021.</p>
<p>Wildfly 22 is already a nice treat, but we also have <a href="https://camel.apache.org/blog/2020/12/Camel37-Whatsnew/">Camel 3.7</a>, which also quite exciting, and fortunately for all of us, Claus Ibsen has published a review of what he called <a href="http://www.davsclaus.com/2020/12/apache-camel-37-lts-released-fastest.html">the fastest Camel ever!</a> So, go check it out if you want to know more about this camel release.</p>
</div>
</div>
<div class="sect1">
<h2 id="_tech_bytes">Tech bytes</h2>
<div class="sectionbody">
<p>A few interesting technical articles came out in the last weeks, so we’ll try to catch you up with three of them here. First, we have an excellent one from Bela Ban on <a href="http://belaban.blogspot.com/2020/12/running-jgroups-raft-as-service.html">running JGroups raft as a service</a>. It’s very hands on post, focusing on getting everything running. Then we have a longer walkthrough to let you experiment on <a href="https://blog.ramon-gordillo.dev/2020/12/spring-boot-embedded-cache-with-infinispan-in-kubernetes/">using Spring boot embedded cache with Infinispan on Kubernetes</a>. Certainly, worth a look, isn’t it? The last one is, of course, on Quarkus, because Quarkus is, as it should, all the rage lately. In this article, Clément Escoffier took the time to explain some of the <a href="https://quarkus.io/blog/magic-control">magic beneath Quarkus and Vert.x</a> and why this is the kind magic you to have as a developer.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s Corner</h2>
<div class="sectionbody">
<p>As always, our very own Eric Schabell has been busy in the few last weeks and released a steady stream of new content. First, he published <a href="https://www.schabell.org/2021/01/codeready-containers-installing.html">part4 - Installing business automation operator</a> of his series on CodeReady containers. He then revisited the <a href="https://www.schabell.org/2020/12/codeready-containers-exploring-home-loan-mortgage-process.html">Home loan mortgage process using CodeReady Containers</a>. Still on the topic of CodeReady Containers, he provided a <a href="https://www.schabell.org/2021/01/codeready-containers-howto-setup-openshift-46-on-local-machine.html">How to setup the OpenShift Container Platform 4.6 on your local machine</a> follow by a tutorial on <a href="https://www.schabell.org/2020/12/codeready-containers-building-hr-process-with-openshift-operator.html">Building a Human Resources Process with an OpenShift Operator</a></p>
</div>
</div>
<div class="sect1">
<h2 id="_releases_releases_releases">Releases, releases, releases…​</h2>
<div class="sectionbody">
<p>As always, the JBoss community has been quite active in the last weeks, and more than a few project releases new version (including the forementionned Wildfly 22 and Apache Camel 3.7):</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.wildfly.org/news/2021/01/13/WildFly22-Final-Released/">Wildfly 22 Final released!</a></p>
</li>
<li>
<p><a href="https://www.keycloak.org//2020/12/keycloak-1201-released.html">Keycloak 12.0.1 released</a></p>
</li>
<li>
<p><a href="https://camel.apache.org/blog/2020/12/Camel37-Whatsnew/">Apache Camel 3.7</a></p>
</li>
<li>
<p><a href="http://teiid.blogspot.com/2021/01/teiid-spring-boot-170-released.html">Teiid Spring Boot 1.7.0 Released</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_decaf">Decaf</h2>
<div class="sectionbody">
<p>You want to break from Java programming, but still learn something relevant to it? Well, take a look at this article on <a href="https://developers.redhat.com/blog/2021/01/13/getting-started-with-tekton-and-pipelines/">Getting started with Tekton and Pipelines</a>. It’s more than likely to pique your interest.</p>
<p><em>That’s all for today! Please join us again in two weeks for another installment of our JBoss editorial! Stay safe and healthy in the meantime.</em></p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="wildfly" term="wildfly"/>
        <category label="camel" term="camel"/>
        <category label="keycloak" term="keycloak"/>
        <category label="teiid" term="teiid"/>
        <category label="springboot" term="springboot"/>
        <category label="tekton" term="tekton"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="codeready" term="codeready"/>
        <category label="quarkus" term="quarkus"/>
        <category label="jgroups" term="jgroups"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss: 25 December 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-12-25.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-12-25.html"/>
        <updated>2020-12-25T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="Christmas, 2020">
      <h1>This Week in JBoss: 25 December 2020</h1>
      <p>I’m writing this on Christmas Day and have spent the last week or so thinking about what I should put
into my traditional 25th of December entry. Then it came to me in that "lightbulb moment": I’d replicate,
more or less, what I said to my entire team/org before I went on vacation a few days earlier. It’s a summary
of the year and I think it’s relevant for our wider community too. So here it is in a slightly modified form …​</p>
<p>I wanted to spend a few minutes thanking you all for the work and interactions you’ve done over this testing year!
I don’t think anyone could have predicted 2020 at the start of the year and I think it’s fair to say that every one of us
has been affected in one way or another. Yet if you look back on the year and the accomplishments we’ve achieved
as a community, you could be forgiven for thinking this was a normal year!</p>
<div class="ulist">
<ul>
<li>
<p>Making Quarkus available to all OpenShift customers, which we announced at KubeCon, as well as continuing the innovation within
(e.g., Hibernate Reactive, RESTeasy Reactive);</p>
</li>
<li>
<p>Knative/Serverless, where we now have 7 Working Group leads out of 15 in the Knative community, we also added Functions to OpenShift Serverless;</p>
</li>
<li>
<p>More and more of our technologies become available to Kube developers;</p>
</li>
<li>
<p>We continued our close involvement with AdoptOpenJDK (aka Eclipse Adoptium), helping to push it to even greater heights;</p>
</li>
<li>
<p>So many great innovations continued around efforts such as Kogito, Strimzi, Camel-K, Eclipse Vert.x, Infinispan, …​</p>
</li>
<li>
<p>We all managed to host, attend, present at countless virtual conferences, workshops and Red Hat Summit; probably enough to realise what
we’re all missing from the real things!</p>
</li>
<li>
<p>Eclipse MicroProfile 4.0 and Eclipse Jakarta EE 9.0 both come to life;</p>
</li>
</ul>
</div>
<p>The list could go on and on (e.g., EAP XD, OptaPlanner, …) but my point isn’t so much to call out the successes that this
community have helped to drive but rather to illustrate that we were able to do these and more at all! In the
climate of 2020, retaining the kind of focus we have and continuing to go above and beyond, as many of you and the teams
have, is a testament to Red Hat and our communities, our culture and the supporting bonds you’ve all built up and nurtured. For that
alone I thank you and you should all be incredibly proud!</p>
<p>With that in mind, whether or not you celebrate Christmas or intend to take extended time away, make sure you do take time
to rest and recharge. Be with your friends and family as much as you can given the continuing Covid situation. Find time to unwind
but also congratulate yourself on coming together in 2020 and delivering so much to our communities, partners and customers. I’m not
even going to try to predict what 2021 will be like but if we can replicate what we’ve been able to do in 2020, I’m sure
we’ll all come through it stronger and together!</p>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/mark-little.png"></pfe-avatar>
        <span>Mark Little</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Mark Little</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/mark-little</uri>
        </author>
        <category label="Christmas" term="Christmas"/>
        <category label="2020" term="2020"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 17 December 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-12-17.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-12-17.html"/>
        <updated>2020-12-17T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, resteasy, springboot, avro, apicurio">
      <h1>This Week in JBoss - 17 December 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another installment of our JBoss Editorial and last before the holidays! As always during this period of the year, we all rush to finish our ongoing tasks so that we can enjoy a bit of rest. And the projects of the JBoss community do the same, which means we have quite of lot to discuss today! So, without any further ado…​</p><p></p>
<div class="sect1">
<h2 id="_quarkus_and_resteasy_reactive">Quarkus and RestEasy Reactive</h2>
<div class="sectionbody">
<p>The last months have certainly been quite active for Quarkus. Now part of the portfolio of <a href="https://www.redhat.com/en/topics/cloud-native-apps/what-is-quarkus">Red Hat products</a>, the project has everything but slow down. Just last week a new release, <a href="https://quarkus.io/blog/quarkus-1-10-3-final-released/">Quarkus 1.10.3</a> was published, but also RestEasy announced a large refactoring of its project <a href="https://quarkus.io/blog/resteasy-reactive/">RestEasy Reactive</a> in order to integrate and support Quarkus even more. Alessio Soldano, one of the main developers of RestEasy, also shares his thoughts behind this project <a href="https://resteasy.github.io/2020/12/07/resteasy-reactive/">here</a>.</p>
<p>But that’s not all in the Quarkiverse! Andy Damevin released an interesting article on link:But that’s not all in the Quarkus-verse! Andy Damevin released an interesting article on new ways to discover Quarkus <a href="https://quarkus.io/blog/extension-codestarts-a-new-way-to-learn-and-discover-quarkus/"> new ways to discover Quarkus using Extension codestarts</a>. Whether that you already know Quarkus or want to explore it for the first time, this one will be in any case quite interesting to you! Oh, and by the way Quarkiverse is by no means a "bon mot,” it’s the real thing: <a href="https://quarkus.io/blog/quarkiverse/">Quarkiverse Hub - Home of Community Extensions</a>, so go check out this article from George Gastaldi to know more about it!</p>
<p>Last, but certainly not the least, another article will help you <a href="https://developers.redhat.com/blog/2020/12/08/spring-boot-to-quarkus-migrations-and-more-in-red-hats-migration-toolkit-for-applications-5-1-0/">migrating your Spring Boot app to Quarkus using the Red Hat migration toolkit</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_apache_avro_and_apicurio_registry">Apache Avro and Apicurio Registry</h2>
<div class="sectionbody">
<p>Avro and Apicurio got a lot of attention in the last weeks. First, Clément Escoffier, who already took the time to blog about <a href="">How to Use Kafka, Schema Registry and Avro with Quarkus</a> a few months ago, just released a new article on <a href="https://quarkus.io/blog/avro-native/">Using Avro in a native executable</a>. Hugo Guerrero also took a stab at the topic in his blog entry on <a href="https://developers.redhat.com/blog/2020/12/11/debezium-serialization-with-apache-avro-and-apicurio-registry/">Debezium serialization with Apache Avro and Apicurio Registry</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_decaf">Decaf'</h2>
<div class="sectionbody">
<p>With the end of 2020 coming up soon, it’s time to clean up our desk and prepare a clean slate for next year. So let’s do the same with our computer and follow <a href="https://developers.redhat.com/blog/2020/12/10/how-to-clean-up-the-fedora-root-folder/">this how-to to clean up your Fedora</a>!</p>
<p><em>That’s all for today! Please join us again in two weeks for another installment of our JBoss editorial! Stay safe and healthy in the meantime.</em></p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="resteasy" term="resteasy"/>
        <category label="springboot" term="springboot"/>
        <category label="avro" term="avro"/>
        <category label="apicurio" term="apicurio"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 16 September 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-12-03.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-12-03.html"/>
        <updated>2020-12-03T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="jgroups, quarkus, infinispan, openshift, business automation">
      <h1>This Week in JBoss - 16 September 2020</h1>
      
    <p class="preamble"></p><p>Hello! Welcome to another edition of the JBoss Editorial that brings you news and updates from our community.</p><p></p>
<div class="sect1">
<h2 id="_releases">Releases!</h2>
<div class="sectionbody">
<p><a href="https://quarkus.io/blog/quarkus-1-10-2-final-released/">Quarkus 1.10</a> is out!
This release brings several updates, notably JSON as the default media type for REST resources in your Quarkus applications.
Now you no longer need all those <code>`@Produces</code> and <code>@Consumes</code> annotations!</p>
<p>Quarkus 1.10 also brings you two new Micrometer registries, additional metrics, and lots of consistency and configuration improvements to all things Swagger UI, which is detailed in the <a href="https://quarkus.io/blog/stylish-api/">Stylish API</a> blog post.</p>
<p>WildFly have released <a href="https://www.wildfly.org/news/2020/11/27/WildFly-GraphQL-feature-pack-1.0/">GraphQL Feature Pack 1.0.0.Final</a> to give WildFly 20 and 21 the latest MicroProfile GraphQL and SmallRye GraphQL capabilities.
Congrats to the WildFly team!</p>
</div>
</div>
<div class="sect1">
<h2 id="_distributed_locks_they_dont_work">Distributed Locks? They Don’t Work!</h2>
<div class="sectionbody">
<p>Bela Ban’s recent post, <a href="http://belaban.blogspot.com/2020/11/i-hate-distributed-locks.html">I hate distributed locks!</a>, is an insightful and emotionally charged look at the pain and the agony of distributed locks.
He dissects different scenarios in which locks are distributed and the pitfalls for each.
Bela does give hints to other alternatives, but I’d suggest you go read them over on his blog.</p>
</div>
</div>
<div class="sect1">
<h2 id="_cloud_events_with_quarkus">Cloud Events with Quarkus</h2>
<div class="sectionbody">
<p>Given that event-drive architectures are becoming ever more popular, Clement Escoffier introduces Cloud Events with the Kafka Connector in Quarkus and shows you <a href="https://quarkus.io/blog/kafka-cloud-events/">how to write and read Cloud Events easily</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_vert_x_mutiny_api">Vert.x Mutiny API</h2>
<div class="sectionbody">
<p>In another recent post on the Quarkus blog, <a href="https://quarkus.io/blog/mutiny-vertx/">Mutiny and the Reactiverse</a>, Clement Escoffier explains using Mutiny variants of Vert.x APIs to get a seamless experience with reactive APIs in Quarkus while taking advantage of the Vert.x ecosystem.</p>
</div>
</div>
<div class="sect1">
<h2 id="_untangling_reactive_streams">Untangling Reactive Streams</h2>
<div class="sectionbody">
<p>Continuing the discussion on the reactive paradigm, Rebecca Searls strips back complexities of Reactive Streams in her <a href="https://resteasy.github.io/2020/11/23/blog-Untangling-Reactive-Streams/">detailed blog post</a> and brings some clarity for wiring a Subscriber, Publisher, and Subscription.
Be sure to check out the demo code in <a href="https://github.com/rsearls/blog-posts">Rebecca’s github</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_business_automation_and_codeready_containers">Business Automation and CodeReady Containers</h2>
<div class="sectionbody">
<p>In this first in his series of articles, Eric D. Schabell begins his journey that will guide you through using the latest Business Automation Operator on the OpenShift Container Platform.</p>
<p>Take a look at <a href="https://www.schabell.org/2020/12/codeready-containers-installing-business-automation-operator-part1.html?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed:+schabell/jboss+(Eric+D.Schabell-+JBoss)">CodeReady Containers - Installing business automation operator (Part 1)</a> to install the operator manually and then starting using decision management and process automation tooling on OpenShift.
Eric’s post is complete with an example project.</p>
</div>
</div>
<div class="sect1">
<h2 id="_infinispan_website">Infinispan Website</h2>
<div class="sectionbody">
<p>The Infinispan community have launched a revamped site at <a href="https://infinispan.org">infinispan.org</a>.
The new layout has a great look and feel! Congrats to the team.</p>
</div>
</div>
<div class="sect1">
<h2 id="_red_hat_developer_highlights">Red Hat Developer Highlights</h2>
<div class="sectionbody">
<p>Alex Krikos and Donna Smalls announce Red Hat Software Collections that offer use case-specific tools along with the most current, stable version of dynamic languages, open source databases, web servers, and other critical development components.
Visit the <a href="https://developers.redhat.com/blog/2020/12/01/red-hat-software-collections-3-6-now-generally-available/">Red Hat Software Collections 3.6 Now Generally Available</a> announcement.</p>
<p>David Harris and Nick Boldt’s <a href="https://developers.redhat.com/blog/2020/12/01/using-intellij-community-edition-in-red-hat-codeready-workspaces-2-5/">Using IntelliJ Community Edition in Red Hat CodeReady Workspaces 2.5</a> post explains how to create a custom workspace with IntelliJ IDEA in CodeReady Workspaces 2.5.</p>
<p>Karina Varela introduces us to the out-of-the-box integration with Apache Kafka in Process Automation Manager 7.9 in her artcile, <a href="https://developers.redhat.com/blog/2020/11/27/red-hat-process-automation-manager-7-9-brings-apache-kafka-integration-and-more/">Red Hat Process Automation Manager 7.9 brings Apache Kafka integration and more</a>.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="jgroups" term="jgroups"/>
        <category label="quarkus" term="quarkus"/>
        <category label="infinispan" term="infinispan"/>
        <category label="openshift" term="openshift"/>
        <category label="business automation" term="business automation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This week in JBoss - 20th November 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-11-20.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-11-20.html"/>
        <updated>2020-11-20T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="news, weekly_update, weekly_editorial, wildfly, quarkus, jcliff, ansible, jca, jpa, jakarta-ee, openid, 3scale, event-driven, Camel-K, aws, kafka, camel, apicurio">
      <h1>This week in JBoss - 20th November 2020</h1>
      
    <p class="preamble"></p><p><em>Welcome to another installment of our JBoss Editorial! Today, we’ll focus on some core project of our community. The first one is obviously Wildfly, our Jakarta EE application server whom predecessor (JBoss AS) was the beginning of everything. The second one is our more recent and shiny project, Quarkus. Without any further ado, let’s begin!</em></p><p></p>
<div class="sect1">
<h2 id="_wildfly_a_first_taste_of_jakarta_9">Wildfly, a first Taste of Jakarta 9</h2>
<div class="sectionbody">
<p>With the release of the <a href="https://wildfly.org//news/2020/11/19/WildFly2101-Released/">Wildfly 21.01</a>, it’s time to put the Jakarta EE server back in the spotlight. Especially as this release gives a <a href="https://www.wildfly.org//news/2020/11/12/Jakarta-EE-9-with-WildFly-Preview/">a preview of Jakarta EE 9</a>! And if your knowledge of the EE standards needs a refresher to fully enjoy this preview, we got you covered with this in depth two-part series on <a href="https://developers.redhat.com/blog/2020/06/15/jakarta-ee-multitenancy-with-jpa-on-wildfly-part-1/">Jakarta EE multitenancy (part1)</a> and <a href="https://developers.redhat.com/blog/2020/11/12/jakarta-ee-multitenancy-with-jpa-on-wildfly-part-2/">(part 2)</a>.</p>
<p>But Jakarta EE 9 is not the only newsworthy item around Wildfly. The first part of my own series on <a href="https://developers.redhat.com/blog/2020/11/06/wildfly-server-configuration-with-ansible-collection-for-jcliff-part-1/">automation of Wildfly using Ansible and JCliff</a> is out! It’s hand on a tutorial on how to set up Ansible and its decided collection for Wildfly (<a href="https://github.com/wildfly-extras/ansible_collections_jcliff">JCliff</a>) in order to fully automate the app server set up and configuration.</p>
</div>
</div>
<div class="sect1">
<h2 id="_quarkus_leading_the_future_of_java">Quarkus, Leading the Future of Java</h2>
<div class="sectionbody">
<p>It might a bold statement, but we’ve made it! Or rather Red Hat made it as Quarkus 1.7 is available as a product for a little while now. Maybe it’s time to finally take a look at it by following this <a href="https://developers.redhat.com/blog/2020/11/10/leading-the-future-of-java-with-the-red-hat-build-of-quarkus-1-7/">Red Hat Quarkus tutorial</a>?</p>
<p>This is also a perfect opportunity to explore Quarkus functionality and ecosystems. For instance, take a look at this interesting post on <a href="https://quarkus.io/blog/mutiny-invoke-and-call/">mutiny invoke and call</a>. Or simply explore the cloud readiness of the framework with this article on <a href="https://developers.redhat.com/blog/2020/11/13/how-i-built-a-serverless-blog-search-with-java-quarkus-and-aws-lambda/">building a serverless blog search with Quarkus and AWS lambda</a> and this <a href="https://www.redhat.com/en/blog/introducing-quarkus-red-hat-openshift?sc_cid=701f2000000tyBjAAI">introduction to Quarkus on Red Hat Openshift</a>?</p>
</div>
</div>
<div class="sect1">
<h2 id="_techbytes">Techbytes</h2>
<div class="sectionbody">
<p>If Quarkus and Wildfly did not quench your thirst for knowledge, let us give you a bit more nuggets. First, why not explore the topic of <a href="https://developers.redhat.com/blog/2020/11/09/openid-connect-integration-with-red-hat-3scale-api-management-and-okta/">using OpenID connect integration with 3scale</a>? Or maybe <a href="http://wei-meilin.blogspot.com/2020/11/contract-first-development-event-driven.html?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+blogspot%2FhFXzh+%28Christina+%E7%9A%84+J%E8%80%81%E9%97%86%29">contract first development using an event-driven approach with Kafka, AMQ Streams, APIcurio</a>? And to make it extra spicy, Christina has even a added a touch of Google protobuf! By the way, if "event driven" is your thing, you can then move this other article on <a href="https://developers.redhat.com/blog/2020/11/17/event-driven-serverless-applications-with-camel-k/">event driven serverless with Camel K</a>.</p>
<p>Still hungry for more? Well, maybe it’s time for less crunchy and technical details? What about stepping back and invite some reflection on <a href="http://www.ofbizian.com/2020/11/open-source-monetization-ecosystem.html">Open Source monetization ecosystem</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_releases_releases_releases">Releases, releases, releases…​</h2>
<div class="sectionbody">
<p>In case you somehow missed above (most likely by jumping directly to this section) …​ <a href="https://wildfly.org//news/2020/11/19/WildFly2101-Released/">Wildlfy 21 Alpha 1 has been released</a>!</p>
</div>
</div>
<div class="sect1">
<h2 id="_decaf">Decaf</h2>
<div class="sectionbody">
<p>All this Java made you too jittery? Time for a Java break? Here are a few dry cookies to go along your cup of joe. As mentioned above, the first part of my series on using [Ansible to automate Wildfly setup] might a nice palate cleanser. Also, if you are using Docker you might be interested in this article describing how to <a href="https://developers.redhat.com/blog/2020/11/19/transitioning-from-docker-to-podman/">transitioning from Docker to Podman</a>.</p>
<p><em>That’s all for today! Please join us again in two weeks for another installment of our JBoss editorial! Stay safe and healthy in the meantime.</em></p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="news" term="news"/>
        <category label="weekly_update" term="weekly_update"/>
        <category label="weekly_editorial" term="weekly_editorial"/>
        <category label="wildfly" term="wildfly"/>
        <category label="quarkus" term="quarkus"/>
        <category label="jcliff" term="jcliff"/>
        <category label="ansible" term="ansible"/>
        <category label="jca" term="jca"/>
        <category label="jpa" term="jpa"/>
        <category label="jakarta-ee" term="jakarta-ee"/>
        <category label="openid" term="openid"/>
        <category label="3scale" term="3scale"/>
        <category label="event-driven" term="event-driven"/>
        <category label="Camel-K" term="Camel-K"/>
        <category label="aws" term="aws"/>
        <category label="kafka" term="kafka"/>
        <category label="camel" term="camel"/>
        <category label="apicurio" term="apicurio"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This week in JBoss - 6th November 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-11-06.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-11-06.html"/>
        <updated>2020-11-06T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="news, weekly_update, weekly_editorial, keycloak, camel, decision_manager, process_automation, wildfly, open_liberty, fabric8">
      <h1>This week in JBoss - 6th November 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we search through the JBoss Community for interesting articles and updates</p><p></p>
<div class="sect1">
<h2 id="_optimizing_camel_3_7">Optimizing Camel 3.7</h2>
<div class="sectionbody">
<p>Camel 3.7 continues the push to optimize camel core by introducing some more improvements including further modularisation to help reduce the size of the runtime, a lightweight mode and more.  For further details <a href="http://www.davsclaus.com/2020/11/apache-camel-37-more-camel-core.html">check out Claus' blog where he covers these improvements in more detail</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_keycloak_authentication_using_a_mobile_phone_number">Keycloak Authentication Using a Mobile Phone Number</h2>
<div class="sectionbody">
<p>The Keycloak Identity and Access Management project provides an extension mechanism through which a developer can provide additional, custom authentication service providers to expand its capabilities.  <a href="https://developers.redhat.com/blog/2020/10/23/use-mobile-numbers-for-user-authentication-in-keycloak/">Siddhartha and his team recently took advantage of this capability to develop a custom authenticator class which could be used to authenticate a user via their mobile phone number</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_fronting_decision_management_with_a_node_js_front_end">Fronting Decision Management with a Node.js Front End</h2>
<div class="sectionbody">
<p>If you are interested in exploring how to expose the Decision Management server through a Node.js front end then Eric has a great demo for you.  The <a href="https://www.schabell.org/2020/10/codeready-containers-exploring-nodejs-with-decision-manager.html">demo is based on a bank loan scenario and uses numerous technologies within the Decision Management server as well as introducing a client application written in AngularJS and PatternFly</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_wildfly_server_configuration_with_ansible_collection_for_jcliff">WildFly server configuration with Ansible collection for JCliff</h2>
<div class="sectionbody">
<p>In the first part of a three part series covering how to take advantage of Ansible capabilities to fine tune a WildFly server, <a href="https://developers.redhat.com/blog/2020/11/06/wildfly-server-configuration-with-ansible-collection-for-jcliff-part-1/">Romain walks us through the necessary steps for installing JCliff and ensuring it can be used within ansible playbooks</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_open_liberty_and_kerberosthanos_support">Open Liberty and Kerberos/Thanos support</h2>
<div class="sectionbody">
<p>The Open Liberty 20.0.0.11 release introduced two very interesting capabilities, the addition of kerberos authentication for securing Java Database Connectivity data sources and the ability to visualise MicroProfile Metrics data from Thanos sources.  For more information on these capabilities <a href="https://developers.redhat.com/blog/2020/10/30/open-liberty-20-0-0-11-brings-kerberos-authentication-and-thanos-support-in-grafana-dashboards/">check out Austin’s blog on the topic</a></p>
</div>
</div>
<div class="sect1">
<h2 id="_whats_new_in_fabric8_kubernetes_java_client">What’s new in Fabric8 Kubernetes Java Client</h2>
<div class="sectionbody">
<p>The recent Fabric8 Kubernetes Java client 4.12.0 release included a number of bug fixes and new features.  For more information on these updates, including details on some breaking changes, <a href="https://developers.redhat.com/blog/2020/10/30/whats-new-in-fabric8-kubernetes-java-client-4-12-0/">head over to Rohan’s post where he covers these in more detail</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_jboss_online">JBoss Online</h2>
<div class="sectionbody">
<p>Eric Schabell will be giving a presentation as part of the KieLives series on all technologies living under the KIE umbrella.  Eric’s talk is titled <a href="https://www.schabell.org/2020/11/kielive-ultimate-beginners-guide-to-rules-processes-episode14.html">"The ultimate beginers guide to rules and processes"</a> and will be taking place on November 10th.</p>
</div>
</div>
<div class="sect1">
<h2 id="_new_releases">New Releases</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>The <a href="https://www.keycloak.org/">Keycloak team</a> have announced the release of <a href="https://www.keycloak.org//2020/11/keycloak-1103-released.html">Keycloak 11.0.3</a></p>
</li>
</ul>
</div>
<p>That’s all for this edition of the JBoss Editorial, please join us in a couple of weeks when we will bring you more news and articles from the JBoss Community Projects.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/kevin-conner.png"></pfe-avatar>
        <span>Kevin Conner</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Kevin Conner</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/kevin-conner</uri>
        </author>
        <category label="news" term="news"/>
        <category label="weekly_update" term="weekly_update"/>
        <category label="weekly_editorial" term="weekly_editorial"/>
        <category label="keycloak" term="keycloak"/>
        <category label="camel" term="camel"/>
        <category label="decision_manager" term="decision_manager"/>
        <category label="process_automation" term="process_automation"/>
        <category label="wildfly" term="wildfly"/>
        <category label="open_liberty" term="open_liberty"/>
        <category label="fabric8" term="fabric8"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This week in JBoss - 23rd October 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-10-23.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-10-23.html"/>
        <updated>2020-10-23T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="news, weekly_update, weekly_editorial, kafka, quarkus, infinispan, keycloak, openshift, micrometer, microprofile, mutiny, codeready">
      <h1>This week in JBoss - 23rd October 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we bring you articles and news from across the JBoss Community of projects.</p><p></p>
<div class="sect1">
<h2 id="_micrometer_is_recommended_for_metrics_with_quarkus_1_9">Micrometer is recommended for metrics with Quarkus 1.9</h2>
<div class="sectionbody">
<p>In <a href="https://quarkus.io/blog/micrometer-metrics/">this post</a>, Ken explains why the Quarkus team are now reccomending the use of the Micrometer Quarkus extension over the previous Eclipse MicroProfile Metrics extension.</p>
</div>
</div>
<div class="sect1">
<h2 id="_kafka_how_to_fail_gracefully">Kafka - How to fail gracefully</h2>
<div class="sectionbody">
<p>Failures are inevitable.
There is nothing we can do about that, and that also applies to Kafka applications.
Your application may contain a faulty component misbehaving once in a while, or unable to process a specific Kafka record.
In <a href="https://quarkus.io/blog/kafka-failure-strategy/">this post</a>, Clement explains how to manage these failures.</p>
</div>
</div>
<div class="sect1">
<h2 id="_use_mobile_numbers_for_user_authentication_in_keycloak">Use mobile numbers for user authentication in Keycloak</h2>
<div class="sectionbody">
<p>In <a href="https://developers.redhat.com/blog/2020/10/23/use-mobile-numbers-for-user-authentication-in-keycloak/">this post</a> Siddhartha De explains how to extend Keycloak to use mobile-based authentication.
The post explains the need for mobile-authentication and shows, hands on, how to use the Keycloak service provider interface to create this extension.</p>
</div>
</div>
<div class="sect1">
<h2 id="_securely_connect_quarkus_and_red_hat_data_grid_on_red_hat_openshift">Securely connect Quarkus and Red Hat Data Grid on Red Hat OpenShift</h2>
<div class="sectionbody">
<p>Continuing on the theme of security, James Falkner explains (<a href="https://developers.redhat.com/blog/2020/10/15/securely-connect-quarkus-and-red-hat-data-grid-on-red-hat-openshift/">here</a>) how to secure applications deployed on Red Hat OpenShift that use the <a href="https://quarkus.io/guides/infinispan-client">Quarkus Data Grid Extension</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_creating_a_payments_architecture">Creating a Payments Architecture</h2>
<div class="sectionbody">
<p>Eric continues his blog series looking at how Cloud technologies are changing the way we architect and deliver software, in particular how these technologies will apply to the Payment Services industry.
This week Eric describes a <a href="https://www.schabell.org/2020/10/payments-architecture-financial-calculations-example.html">Financial Calculations Example</a></p>
</div>
</div>
<div class="sect1">
<h2 id="_mutiny_how_does_retry_retries">Mutiny - How does retry…​ retries?</h2>
<div class="sectionbody">
<p>Clement was recently helping a community Quarkus user understand how to retry asynchronous operations with Mutiny.
In doing so, he realised it was not all that simple to understand, and so he created <a href="https://quarkus.io/blog/uni-retry/">this blog post</a> so that the whole community could benefit from his explanation.</p>
</div>
</div>
<div class="sect1">
<h2 id="_codeready_containers_building_a_cloud_native_human_resources_process">CodeReady Containers - Building a Cloud-Native Human Resources Process</h2>
<div class="sectionbody">
<p>In <a href="https://www.schabell.org/2020/10/codeready-containers-building-cloud-native-hr-process.html">this blog post</a> Eric talks you through how to install process automation developer tooling into a running Openshift Container platform.
You can also refer to one of <a href="https://gitlab.com/redhatdemocentral/ocp-install-demo">Eric’s previous posts</a> for details on how to easily get Openshift Container Platform running on your local machine.</p>
</div>
</div>
<div class="sect1">
<h2 id="_new_releases">New Releases</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>The <a href="https://quarkus.io/">Quarkus team</a> have announced the release of <a href="https://quarkus.io/blog/quarkus-1-9-0-final-released/">Quarkus 1.9</a> and <a href="https://quarkus.io/blog/intellij-quarkus-tools-1.2.0/">Quarkus Tools for IntelliJ 1.2.0</a></p>
</li>
</ul>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/paul-robinson.png"></pfe-avatar>
        <span>Paul Robinson</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Paul Robinson</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/paul-robinson</uri>
        </author>
        <category label="news" term="news"/>
        <category label="weekly_update" term="weekly_update"/>
        <category label="weekly_editorial" term="weekly_editorial"/>
        <category label="kafka" term="kafka"/>
        <category label="quarkus" term="quarkus"/>
        <category label="infinispan" term="infinispan"/>
        <category label="keycloak" term="keycloak"/>
        <category label="openshift" term="openshift"/>
        <category label="micrometer" term="micrometer"/>
        <category label="microprofile" term="microprofile"/>
        <category label="mutiny" term="mutiny"/>
        <category label="codeready" term="codeready"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This week in JBoss - 12th October 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-10-12.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-10-12.html"/>
        <updated>2020-10-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="news, weekly_update, weekly_editorial, decision_manager, process_automation, kafka, camel, kamlets, quarkus, hacktoberfest, infinispan">
      <h1>This week in JBoss - 12th October 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we bring you articles and news from across the JBoss Community of projects</p><p></p>
<div class="sect1">
<h2 id="_creating_a_payments_architecture">Creating a Payments Architecture</h2>
<div class="sectionbody">
<p>With Cloud technologies changing the way we architect and deliver software Eric has been taking a look at how these technologies will apply to the Payment Services industry.</p>
<p>In the next two posts from his Payment Architecture series Eric introduces us to <a href="https://www.schabell.org/2020/10/payments-architecture-anti-money-laundering-example.html">the design of an Anti-Money Laundering solution</a> and follows that with <a href="https://www.schabell.org/2020/10/payments-architecture-fraud-detection-example.html">the design of a Fraud Detection solution</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_codeready_containers_decision_manager_and_process_automation">CodeReady Containers, Decision Manager and Process Automation</h2>
<div class="sectionbody">
<p>If you have ever wanted to explore Decision Manager or Process Automation running within the cloud then it has never been easier to get started.  Eric has developed two simple setups, both leveraging CodeReady containers and OpenShift Container Platform 4.5, which allow you to quickly set up <a href="https://www.schabell.org/2020/10/codeready-containers-getting-started-with-ocp-45-and-decision-manager-tooling.html">Decision Manager</a> and <a href="https://www.schabell.org/2020/10/codeready-containers-ocp-45-with-process-automation-tooling.html">Process Automation</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_kafka_and_emitters_a_deeper_dive">Kafka and Emitters, a deeper dive</h2>
<div class="sectionbody">
<p>Following on from an earlier blog post introducing us to emitters and how they can be used to send messages, Clement has taken a <a href="https://quarkus.io/blog/reactive-messaging-emitter/">deeper look into the Emitter construct and explains how this can be used to bridge between the imperative and reactive worlds</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_optimizing_camel_3_6">Optimizing Camel 3.6</h2>
<div class="sectionbody">
<p>Camel 3.6 will bring with it a number of optimizations to the camel core which will improve not only the performance of the core but also reduce the resources required to run camel routes.  For more information <a href="http://www.davsclaus.com/2020/10/apache-camel-36-more-camel-core.html">check out Claus' blog where he describes the changes in more detail</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_kamlets_camel_in_the_cloud">Kamlets, Camel in the cloud</h2>
<div class="sectionbody">
<p>Apache Camel K 1.2.0 introduced a number of features, the most important of which is the Kamelet.  The Kamelet represents a camel route snippet and encapsulates the logic for connecting to a specific system.  For more information check out <a href="https://www.nicolaferraro.me/2020/10/12/kamelets/">Nicola’s blog where he introduces you to Kamelets and how they relate to Knative Eventing</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_testing_quarkus">Testing Quarkus</h2>
<div class="sectionbody">
<p>Alex Soto and Burr Sutter recently gave a talk about testing Quarkus applications as part of the DevNation Tech Talk series.  The talk covers <a href="https://developers.redhat.com/blog/2020/10/12/quarked-testing-writing-tests-for-quarkus/">how to test basic components as well as more advanced topics such as persistence, service virtualization and using containers for testing</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_contributing_to_opensource_communities">Contributing to OpenSource Communities</h2>
<div class="sectionbody">
<p>With <a href="https://hacktoberfest.digitalocean.com/">Hacktoberfest</a> already under way there are a number of opportunities for contributing to OpenSource, including a number of projects within the JBoss Community with two of those being <a href="https://strimzi.io">Strimzi</a> and <a href="https://quarkus.io/">Quarkus</a>.   If you are interested in <a href="https://strimzi.io/blog/2020/10/01/hacktoberfest/">contributing to Strimzi</a> then check out Paolo’s post, if interested in <a href="https://quarkus.io/blog/contributing-for-the-first-time/">contributing to Quarkus</a> then check out Loïc’s post.</p>
</div>
</div>
<div class="sect1">
<h2 id="_new_releases">New Releases</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>The <a href="https://quarkus.io/">Quarkus team</a> have announced the release of <a href="https://quarkus.io/blog/quarkus-1-8-2-final-released/">Quarkus 1.8.2.Final</a> and <a href="https://quarkus.io/blog/quarkus-1-8-3-final-released/">Quarkus 1.8.3.Final</a></p>
</li>
<li>
<p>The <a href="https://infinispan.org/">Infinispan</a> team have announced the release of <a href="https://infinispan.org/blog/2020/09/08/infinispan-12/">Infinispan 12.0.0.Dev03</a></p>
</li>
</ul>
</div>
<p>That’s all for this episode of the JBoss Editorial, please join us for our next edition when we will take another spin through the JBoss Community Projects in search of more interesting news and articles.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/kevin-conner.png"></pfe-avatar>
        <span>Kevin Conner</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Kevin Conner</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/kevin-conner</uri>
        </author>
        <category label="news" term="news"/>
        <category label="weekly_update" term="weekly_update"/>
        <category label="weekly_editorial" term="weekly_editorial"/>
        <category label="decision_manager" term="decision_manager"/>
        <category label="process_automation" term="process_automation"/>
        <category label="kafka" term="kafka"/>
        <category label="camel" term="camel"/>
        <category label="kamlets" term="kamlets"/>
        <category label="quarkus" term="quarkus"/>
        <category label="hacktoberfest" term="hacktoberfest"/>
        <category label="infinispan" term="infinispan"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 30 September 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-09-30.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-09-30.html"/>
        <updated>2020-09-30T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="jBPM, OCP, OpenShift, Camel, CamelK, DevConf, Kafka">
      <h1>This Week in JBoss - 30 September 2020</h1>
      <p>It’s that time again where we round up the latest news from the community…</p>
<p>Are you looking to develop projects on your local machine, and push them on to a real OpenShift Container Platform, without having to worry about cloud hosting of your container platform?
In this <a href="https://www.schabell.org/2020/09/how-to-setup-openshift-container-platform-45.html">post</a> Eric Schabell provides an easy way to get up and running with CodeReady containers on your own development machine.
He’s automated most of the process through scripts, and guides you through the rest of the process.
Eric also shows you how to drop into the Developer console in OCP providing a developer focused view that hides much of the plumbing that is not needed during development.</p>
<p>In this <a href="https://developers.redhat.com/blog/2020/09/28/call-an-existing-rest-service-with-apache-camel-k/">post</a> Mary Cochran shows us a simple way to connect existing services together using CamelK via each service’s REST APIs.
Mary gets deep into the details providing code examples and commands to get you up and running.</p>
<p>Eric Schabell continues his <a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html">blog series</a>, bringing you architectural blueprints for&nbsp;cloud-native financial payment services.
The blueprints are focused on proven interactions, messaging, processing, and integration patterns that you can put to use when building a cloud-native payment architecture.
This week he covers the <a href="https://www.schabell.org/2020/09/payments-architecture-common-elements.html">Common Architecture Elements</a> that make up the architecture, and gets into some details with the <a href="https://www.schabell.org/2020/09/payments-architecture-immediate-payments-example.html">Immediate Payments Example</a>.</p>
<p>As is normal for this time of year, the conference season is beginning to kick off.
Albeit this year in a virtual arena.
Undoubtedly this is an unfortunate situation for those that enjoy the in-person events.
However, it’s great for accessibility and reach allowing many more people across to globe to attend.
DevConf.US 2020 is one such event.
It’s a free, Red Hat sponsored technology conference for community project and professional contributors to Free and Open Source technologies.
Read more <a href="https://www.schabell.org/2020/09/devconfus-2020-appdev-containerization-ask-the-experts.html">here</a> where Eric describes the “AppDev &amp; Containerization Ask the Experts” Panels that he and Kurt Stam  will be moderating.</p>
<p>This week Kapil Shukla explains how to <a href="https://developers.redhat.com/blog/2020/09/28/build-a-data-streaming-pipeline-using-kafka-streams-and-quarkus/">build a data streaming pipeline using Kafka Streams and Quarkus</a>.
In this post Kapil shows how data can be processed in real-time as and when it arrives, instead of being batch processed as was needed in the past.</p>
<p>In this <a href="https://developers.redhat.com/blog/2020/09/22/troubleshooting-user-task-errors-in-red-hat-process-automation-manager-and-red-hat-jboss-bpm-suite/">Post</a> Anton Giertli provides help with troubleshooting user task errors in Red Hat Process Automation Manager and Red Hat JBoss BPM Suite.
If you are a developer working with user tasks and having trouble debugging them, this post might well help you out.</p>
<p>With the recent release of Apache Camel VS Code extension (0.0.27) comes several new language support features for Apache Camel.
Read this <a href="https://developers.redhat.com/blog/2020/09/18/new-language-support-features-in-apache-camel-vs-code-extension-0-0-27/">post</a> to learn more.</p>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/paul-robinson.png"></pfe-avatar>
        <span>Paul Robinson</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Paul Robinson</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/paul-robinson</uri>
        </author>
        <category label="jBPM" term="jBPM"/>
        <category label="OCP" term="OCP"/>
        <category label="OpenShift" term="OpenShift"/>
        <category label="Camel" term="Camel"/>
        <category label="CamelK" term="CamelK"/>
        <category label="DevConf" term="DevConf"/>
        <category label="Kafka" term="Kafka"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 16 September 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-09-16.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-09-16.html"/>
        <updated>2020-09-16T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="jgroups, quarkus, infinispan">
      <h1>This Week in JBoss - 16 September 2020</h1>
      <p>Welcome to another edition of the JBoss Editorial where we gather news from our communities and explore developments from our projects.</p>
<p>Our very own Mark Little goes into detail to explain Quarkus and Jakarta EE compatibility. Mark gives an insightful breakdown of the history for both projects and answers a much asked question, will Quarkus and Jarkata EE come together? No spoilers here, though. Go read Mark’s <a href="https://developers.redhat.com/blog/2020/09/11/quarkus-and-jakarta-ee-together-or-not/">Quarkus and Jakarta EE: Together, or not?</a> if you already haven’t.</p>
<p>In the evangelist’s corner, Eric Schabell has brought out an excellent <a href="https://www.schabell.org/2020/09/beginners-guide-to-decision-management-retail-web-shop.html">hands-on workshop with labs</a> for Red Hat Decision Manager that show you how to design and build a retail web shop from scratch.</p>
<p>Eric also teams up with Ramon Villarreal to bring you architectural blueprints for <a href="https://www.schabell.org/2020/09/financial-payments-architecture-an-introduction.html">cloud-native financial payment services</a>. The blueprints are focused on proven interactions, messaging, processing, and integration patterns that you can put to use when building a cloud-native payment architecture.</p>
<p>Leon Matthews continues the topic of all things financial with his analysis of the history of Java in the banking sector and the role Quarkus is playing in allowing banks and financial institutions to embrace change, innovate to remain competitive, and become more efficient. Read Leon’s post: <a href="https://www.redhat.com/en/blog/25-years-and-going-strong-why-java-matters-future-banks?source=bloglisting">25 years and going strong: Why Java matters to the future of banks</a>.</p>
<p>Speaking of Quarkus, Clement Escoffier shows you how to build a stream of beer and then retrieve beers in a reactive way. After walking you through how you can do that with Mutiny, Clement provides a gist with all the code that you can compile and execute with jbang and a single command. You can find everything in his <a href="https://quarkus.io/blog/mutiny-pagination/">Handling paginated APIs with Mutiny</a> post.</p>
<p>Another post from the Quarkus team that is worth reading is Jeff Beck’s <a href="https://quarkus.io/blog/wipro-customer-story/">Wipro Addresses Seismic Shift in Retail with Quarkus</a>. Jeff shares the Wipro story by describing their needs and challenges and how they adopted Quarkus to modernize their applications and address customer use cases.</p>
<p>If it hasn’t crossed your radar, Bela Ban shows us his plans for a <a href="http://belaban.blogspot.com/2020/09/one-size-fits-all-jgroups.html">One Size Fits All JGroups</a> program and explains what is needed to get there.</p>
<p>Jakub Scholz on the Strimzi team shares a post that looks at using the <a href="https://strimzi.io/blog/2020/09/01/enforce-custom-resource-policies-with-opa-gatekeeper/">Open Policy Agent Gatekeeper project to enforce policies when creating custom resources</a> and demonstrates how this is useful. While the post focuses on Strimzi, Jakub points out how Gatekeeper can be used with other projects so go take a look.</p>
<p>Releases!!</p>
<p>Congratulations to the Infinispan team for releasing the Dev03 cut of Infinispan 12. Cross-site replication capabilities continue to advance with an SPI that includes configurable policies for merging conflicting values from asynchronous backups, a feature which guarantees data consistency between global Infinispan clusters. That’s no small feat of engineering! Find out about that and more over on the <a href="https://infinispan.org/blog/2020/09/08/infinispan-12/">Infinispan blog</a>.</p>
<p>Quarkus 1.8 is out with some shiny new features, including jbang integration for easy Quarkus-based scripting, support for multiple persistence units for the Hibernate ORM extension, a new Micrometer extension, and update to GraalVM 20.2 for building native apps from Quarkus projects. Here is the <a href="https://quarkus.io/blog/quarkus-1-8-0-final-released/">announcement with all the info</a>.</p>
<p>Keycloak have announced their new Account Console, built on React and PatternFly 4. The latest version offers a fresher look and feel with custom themes and extensions. Go <a href="https://www.keycloak.org/2020/09/new-account-console.adoc">check it out</a>.</p>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="jgroups" term="jgroups"/>
        <category label="quarkus" term="quarkus"/>
        <category label="infinispan" term="infinispan"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JBoss Weekly Editorial 27 August 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-08-27.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-08-27.html"/>
        <updated>2020-08-27T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="openshift, openjdk, amq, strimzi, automation, kubernetes, keycloak">
      <h1>JBoss Weekly Editorial 27 August 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Weekly Editorial!
Summer is drawing to a close, but that doesn’t mean Red Hat has been resting, or that nothing has been happening over the past two weeks.
There’s been some great movement and progress made, which we’ll cover.
In this edition we’re going to focus on OpenShift, the blogosphere, and finally, other project news.</p><p></p>
<div class="sect1">
<h2 id="_openshift">OpenShift</h2>
<div class="sectionbody">
<p>Last week was KubeCon Europe 2020, which as you can guess, was a big event for OpenShift!
We had 15 speakers from Red Hat speaking over the three days, giving 17 talks.
A number of new announcements, blog posts, and articles came out during KubeCon Europe 2020, They’re all liked at <a href="https://www.openshift.com/kubecon">the OpenShift event page</a>.
There’s simply too many to link here.
The above event page has videos, press release links, links to other announcements and blogs.</p>
</div>
</div>
<div class="sect1">
<h2 id="_blogs">Blogs</h2>
<div class="sectionbody">
<p>Continuing the trend about OpenShift, Paul Vergilis wrote about external clients and Red Hat AMQ over at the <a href="https://developers.redhat.com/blog/2020/08/26/connecting-external-clients-to-red-hat-amq-broker-on-red-hat-openshift/">Red Hat Developer blog</a>.
If you’re interested in getting started with Strimzi, Apache Kafka on Kubernetes, you’ll want to catch up on the blog post Paolo Patierno and Jakub Scholz wrote: <a href="https://developers.redhat.com/blog/2020/08/14/introduction-to-strimzi-apache-kafka-on-kubernetes-kubecon-europe-2020/">Introduction to Strimzi: Apache Kafka on Kubernetes (KubeCon Europe 2020)</a>.
For those of you running OpenJDK 8, you’ll want to know more about JDK Flight Recorder available in OpenJDK 8u262. An indepth intro is available at the <a href="https://developers.redhat.com/blog/2020/08/25/get-started-with-jdk-flight-recorder-in-openjdk-8u/">Red Hat Developer Blog</a> written by Mario Torre.</p>
</div>
</div>
<div class="sect1">
<h2 id="_projects">Projects</h2>
<div class="sectionbody">
<p>To wrap up this edition, we will be looking at two announcements from Keycloak:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.keycloak.org//2020/08/keycloak-1101-released.html">Keycloak 11.0.1 released</a> - fixing seven bugs</p>
</li>
<li>
<p><a href="https://www.keycloak.org//2020/08/sunsetting-louketo-project.adoc.html">Sunsetting Louketo Project</a> - Bruno Oliveira discusses the reasons in this blog post.</p>
</li>
</ul>
</div>
<p>We’re natuarally happy for a new release and sad for Louketo.</p>
<p>Thanks for being here with us in this edition!
We look forward to seeing you again in two weeks.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/jason-porter.png"></pfe-avatar>
        <span>Jason Porter</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Jason Porter</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/jason-porter</uri>
        </author>
        <category label="openshift" term="openshift"/>
        <category label="openjdk" term="openjdk"/>
        <category label="amq" term="amq"/>
        <category label="strimzi" term="strimzi"/>
        <category label="automation" term="automation"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="keycloak" term="keycloak"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 13 August 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-08-13.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-08-13.html"/>
        <updated>2020-08-13T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="jgroups, quarkus, keycloak, skupper, tech talk, infinispan, strimzi">
      <h1>This Week in JBoss - 13 August 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we gather news from our communities and explore developments from our projects.</p><p></p>
<div class="sect1">
<h2 id="_jgroups_5">JGroups 5!</h2>
<div class="sectionbody">
<p>Exciting news from Bela Ban as <a href="http://belaban.blogspot.com/2020/08/jgroups-500final-released.html">JGroups 5.0.0.Final</a> is released. JGroups 5 brings lots of improvements and some major API changes.</p>
<p>Perhaps the biggest change is that <a href="http://www.jgroups.org/manual5/index.html#Message"><code>Message</code></a> is now an interface with a number of subclasses that perform late marshalling so object payload is serialized at the point when messages are sent, which eliminates a memory allocation and makes JGroups performance even better.</p>
<p>Other cool features in JGroups 5 are <a href="http://belaban.blogspot.com/2020/07/double-your-performance-virtual-threads.html">virtual thread support</a>, an implementation of the Random Early Drop (RED) protocol, more efficient FD_ALL3 failure detection, a new protocol to dump stats, and lots more.</p>
<p>Hearty congratulations to Bela and all the contributors and folks who made it happen!!</p>
<p>Head over to the <a href="http://www.jgroups.org/manual5/index.html">JGroups 5 documentation</a> and find out more.</p>
</div>
</div>
<div class="sect1">
<h2 id="_keycloak_tech_talk">Keycloak Tech Talk</h2>
<div class="sectionbody">
<p>Stian Thorgersen of the Keycloak team presents a DevNation Tech Talk that provides an in-depth look at the best open-source identity and management solution around. Stian gives a great demo of Keycloak that not only highlights features but showcases just how easy it is to integrate and use Keycloak capabilities to secure your applications.</p>
<p>Spend half an hour and let Stian dazzle you with <a href="https://developers.redhat.com/blog/2020/08/07/a-deep-dive-into-keycloak/">A deep dive into Keycloak</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_reactive_quarkus_a_java_mutiny">Reactive Quarkus: A Java Mutiny</h2>
<div class="sectionbody">
<p>Another Tech Talk that you should definitely check out comes from Clement Escoffier and Edson Yanaga, who go into detail about Mutiny, a new reactive programming library. Clement and Edson explain why reactive matters, how Mutiny is makes it easier to develop reactive applications, and how the library is integrated with Quarkus.</p>
<p>Listen to Clement and Edson deliver their excellent talk, <a href="https://developers.redhat.com/blog/2020/08/07/reactive-quarkus-a-java-mutiny/">Reactive Quarkus: A Java Mutiny</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_skupper_and_the_hybrid_cloud">Skupper and the Hybrid Cloud</h2>
<div class="sectionbody">
<p>By now I’m sure you’ve heard of <a href="https://skupper.io/">Skupper</a> but maybe have yet to see it in action. Ted Ross gives a great introduction and live demonstration of Skupper across AWS, GCP, and Azure that shows real-time load balancing and fail-over.</p>
<p>Watch Ted’s <a href="https://developers.redhat.com/blog/2020/08/10/kubernetes-and-the-hybrid-cloud-with-skupper/">Kubernetes and the hybrid cloud with Skupper</a> Tech Talk today. You won’t regret it.</p>
</div>
</div>
<div class="sect1">
<h2 id="_in_the_community">In the Community</h2>
<div class="sectionbody">
<p>Katia Aresti has created a pretty awesome Infinispan Server tutorial that demonstrates a full set of capabilities with a weather application. Visit the <a href="https://infinispan.org/infinispan-server-tutorial/">Infinispan Remote Weather App Tutorial</a> and try it for yourself.</p>
<p>Jakub Scholz on the Strimzi team has written a comprehensive blog post, <a href="https://strimzi.io/blog/2020/08/05/using-open-policy-agent-with-strimzi-and-apache-kafka/">Using Open Policy Agent with Strimzi and Apache Kafka</a>, that explores support for Kafka authorization using Open Policy Agent.</p>
<p>That’s it for this week’s editorial. Thanks for reading and see you next time.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="jgroups" term="jgroups"/>
        <category label="quarkus" term="quarkus"/>
        <category label="keycloak" term="keycloak"/>
        <category label="skupper" term="skupper"/>
        <category label="tech talk" term="tech talk"/>
        <category label="infinispan" term="infinispan"/>
        <category label="strimzi" term="strimzi"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 30th July 2020: No rest for the JBoss community!]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-07-30.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-07-30.html"/>
        <updated>2020-07-30T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="eap, editorial, infinispan, quarkus, jgroups, java, wildfly, clustering, mod_cluster, eclipse, jkube, kubernetes,">
      <h1>This Week in JBoss - 30th July 2020: No rest for the JBoss community!</h1>
      
    <p class="preamble"></p><p>Welcome to another installment of our JBoss Editorial! The last two weeks have been pretty rich on published content and releases, so let’s dive right in!</p><p></p>
<div class="sect1">
<h2 id="_from_spring_boot_to_quarkus">From Spring Boot to Quarkus</h2>
<div class="sectionbody">
<p>As Quarkus community is increasing the question of how to migrate to this new framework (or rather runtime) often arises. If you happen to have such predicament with Spring Boot, I’m sure you’ll be quite interested to read this article on <a href="https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/">migrating Spring Boot tests to Quarkus</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_secure_vue_js_with_keycloak">Secure vue.js with Keycloak</h2>
<div class="sectionbody">
<p>If most of the content we mentioned today is made of articles, we have one, quite cool video content to share. It’s coming straight from one of the tech-talks of the DevNation and we hope you’ll like it :  <a href="https://developers.redhat.com/devnation/tech-talks/secure-vuejs-keycloak">Secure vue.js using Keycloak</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_jgroups_double_your_performance_with_virtual_threads">JGroups: Double your performance with virtual threads!</h2>
<div class="sectionbody">
<p>Quite a lot of exciting things are happening in the realm of JGroups lately! Last time, we already mentioned the <a href="http://belaban.blogspot.com/2020/06/new-netty-transport.html">new netty transport</a>, but Bela Ban, the creator of project, got us even more excited with this news about <a href="http://belaban.blogspot.com/2020/07/double-your-performance-virtual-threads.html">how one can double its performance using virtual threads (fibers) on JDK15/16</a>!!! This JDK is still a bit down the road, but its certainly a nice glimpse into tomorrow.</p>
</div>
</div>
<div class="sect1">
<h2 id="_back_to_the_basics">Back to the Basics</h2>
<div class="sectionbody">
<p>As said above, the last two weeks have been particularly rich in interesting content around the JBoss community and the Java ecosystem at large. Some of those articles took the time to go back and rethink some aspects of our work that we take for granted. Let’s first mention this original take on java programming that focuses on <a href="https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/">taming inconsistent state in a Java code</a>.</p>
<p>This first article is already pretty centered around coding, but this next one goes into the very guts of Infinispan! If you know the project, I’m sure you’ll find this entry on <a href="https://infinispan.org/blog/2020/07/22/anchored-keys/">anchored keys</a> as fascinating as I did!</p>
<p>Let’s also revisit a classic: load balancing a JEE app server (such as Wildfly or its product counterpart JBoss EAP), but with a twist: <a href="https://developers.redhat.com/blog/2020/07/15/load-balancing-red-hat-jboss-enterprise-application-platform-subclusters-with-mod_cluster/">Load balancing Red Hat JBoss EAP with subclusters</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_evangelists_corner">Evangelist’s Corner</h2>
<div class="sectionbody">
<p>No rest for the wicked! And no, no rest for our very own Eric D. Schabell! In the last two weeks, he has been quite busy again. First of all, he got his very <a href="https://www.schabell.org/2020/07/what-the-dev-podcast-episode-44-agile-integration.html">first interview on a podcast</a> (yep, that’s right, he was never on a podcast before!). With the host, he discussed the best practices for Agile integration. If you are interested in this topic, fetch the episode, you won’t regret it!</p>
<p>That’s not all. Eric also took the time to update and release his "fully updated to the latest release" version of his <a href="https://www.schabell.org/2020/07/beginners-guide-building-a-retail-web-shop-workshop-update.html">Beginners guide - Building a retail web shop workshop update</a>.</p>
<p>On top of that, he took the time to describe <a href="https://www.schabell.org/2020/07/how-to-install-rhpam-77.html">how to How to Install Red Hat Process Automation Manager 7.7</a> and share his experience with the <a href="https://www.schabell.org/2020/07/shift-remote-2020-devops-heroes.html">Shift Remote 2020 online conference</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_releases_releases_releases">Releases, releases, releases,…​</h2>
<div class="sectionbody">
<p>As always, the JBoss community has been pretty busy in the last weeks and a few projects have seized the relative quietness of Summer to release new version of their product:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.keycloak.org//2020/07/keycloak-1100-released.html">Keycloak 11.0.0</a></p>
</li>
<li>
<p><a href="http://bytemanblog.blogspot.com/2020/07/byteman-4012-has-been-released.html">Byteman 4.0.12</a></p>
</li>
<li>
<p><a href="https://infinispan.org/blog/2020/07/27/infinispan-12/">Infinispan 12.0.0.Dev01</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_decaf">Decaf</h2>
<div class="sectionbody">
<p>For once, this section stays rather close to Java, covering how to <a href="https://developers.redhat.com/blog/2020/07/27/deploy-your-java-web-application-into-the-cloud-using-eclipse-jkube/">deploy your Java Webapp into the cloud using Eclipse JKube</a>. So, yes, we’ll talk Kubernetes, but in a context quite close to home :) .</p>
<p>That’s all for another edition of the JBoss Editorial, please join us again for more exciting development from the JBoss Communities.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="eap" term="eap"/>
        <category label="editorial" term="editorial"/>
        <category label="infinispan" term="infinispan"/>
        <category label="quarkus" term="quarkus"/>
        <category label="jgroups" term="jgroups"/>
        <category label="java" term="java"/>
        <category label="wildfly" term="wildfly"/>
        <category label="clustering" term="clustering"/>
        <category label="mod_cluster" term="mod_cluster"/>
        <category label="eclipse" term="eclipse"/>
        <category label="jkube" term="jkube"/>
        <category label="kubernetes" term="kubernetes"/>
        <category label="" term=""/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 9 July 2020: Over the (j)cliff!]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-07-09.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-07-09.html"/>
        <updated>2020-07-09T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, editorial, infinispan, jgroups, netty, codeready, serverless, microservice, ansible, jcliff, widlfy, eap, eap-xp, microprofile">
      <h1>This Week in JBoss - 9 July 2020: Over the (j)cliff!</h1>
      
    <p class="preamble"></p><p>Welcome to another installment of our JBoss Editorial! Summer has begun, well, at least for those of you readers living in the northern hemisphere :)! So let’s enjoy it by giving some nice, interesting and exciting reading material to enjoy while resting in the sun (with your mask, #staysafe!).</p><p></p>
<div class="sect1">
<h2 id="_infinispan_11">Infinispan 11!</h2>
<div class="sectionbody">
<p>It’s out! The new major version of Infinispan is here! Please go and check out <a href="https://infinispan.org/blog/2020/07/03/infinispan-11/">Infinispan 11</a>!</p>
</div>
</div>
<div class="sect1">
<h2 id="_jgroups_new_netty_transport">JGroups: new Netty transport!</h2>
<div class="sectionbody">
<p>I’ve said it many times, JGroups is an incredible piece of software. The power and the flexibility of the frameworks always dazzle me, so I’m very excited about this <a href="http://belaban.blogspot.com/2020/06/new-netty-transport.html">new netty transport</a> getting into it!</p>
</div>
</div>
<div class="sect1">
<h2 id="_ansible_collection_for_jcliff">Ansible Collection for JCliff</h2>
<div class="sectionbody">
<p>It’s a pet project of mine that I have already mentioned a few months ago: Andrew Block, Roel Holzmans and I have been working on integrating further Widlfy (and EAP) into Ansible, in order to ensure that one can use the tool to fine-tune as much as possible the JEE server’s configuration. We leverage an existing Open Source Java tool called <a href="https://github.com/bserdar/jcliff">JCliff</a> to just that.</p>
<p>Last year, we released a role, already available in <a href="https://galaxy.ansible.com/redhat-cop/jcliff">Ansible Galaxy</a>, to integrate JCliff into Ansible. However, since then, the Ansible community released a new format to distribute extension, called Ansible Collection. We therefore decide to migrate our content there and we finally released, just this week, a very first version: <a href="https://galaxy.ansible.com/redhat/jcliff">Ansible Collection for JCliff 0.0.1</a>.</p>
<p>So, please check it out! All you need to do is $ ansible-galaxy collection install redhat.jcliff:0.0.1 and, voilà, the collection is installed and you can start to <a href="https://github.com/ansible-middleware/ansible_collections_jcliff_demo">play with it</a>.</p>
<p>Oh, almost forgot! This release also supports, on tops of Linux, MacOSX with homebrew! (Windows using Chocolatey is coming next).</p>
</div>
</div>
<div class="sect1">
<h2 id="_serverless_and_microservice">Serverless and Microservice</h2>
<div class="sectionbody">
<p>As alluring as “serverless” is, it does, like any other technology, come with its own challenges. Follow Christina as she goes through the importance of having the proper infrastructure to support your “serverless” apps in this well thought out blog entry: <a href="http://wei-meilin.blogspot.com/2020/07/serverless-integration-components.html">Serverless Integration Components</a></p>
<p>Follow this first read, you may want to take a look at this other article on <a href="http://www.ofbizian.com/2020/07/operators-and-sidecars-are-new-model.html">operators and sidecars are the new model</a>, which also discuss similar concerns.</p>
</div>
</div>
<div class="sect1">
<h2 id="_microprofile">Microprofile</h2>
<div class="sectionbody">
<p>With the release JBoss EAP XP, there are a lot of opportunities to develop supported microprofile application. So if you want to explore how to develop such an application, please follow <a href="https://developers.redhat.com/blog/author/ehugonne/">Emmanuel Hugonnet</a>’s tutorial on <a href="https://developers.redhat.com/blog/2020/07/01/develop-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-with-red-hat-codeready-workspaces/">Develop Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform Expansion Pack 1.0 with Red Hat CodeReady Workspaces</a>.</p>
</div>
</div>
<div class="sect1">
<h2 id="_decafquarkus_workshops_automated_with_ansible">Decaf—Quarkus Workshops automated with Ansible</h2>
<div class="sectionbody">
<p>Yeah, I know, we just talked about Ansible! Where is my Java stuff you are rightly asking. Well, as you’ll see Ansible, while being Python, plays well with Java software, as demonstrated by this article on <a href="https://developers.redhat.com/blog/2020/07/03/automate-workshop-setup-with-ansible-playbooks-and-codeready-workspaces/">automate workshop setup with Ansible playbooks and CodeReady workspaces</a>.</p>
<p>That’s all for another edition of the JBoss Editorial, please join us again for more exciting development from the JBoss Communities.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse.png"></pfe-avatar>
        <span>Romain Pelisse</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Romain Pelisse</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/romain-pelisse</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="editorial" term="editorial"/>
        <category label="infinispan" term="infinispan"/>
        <category label="jgroups" term="jgroups"/>
        <category label="netty" term="netty"/>
        <category label="codeready" term="codeready"/>
        <category label="serverless" term="serverless"/>
        <category label="microservice" term="microservice"/>
        <category label="ansible" term="ansible"/>
        <category label="jcliff" term="jcliff"/>
        <category label="widlfy" term="widlfy"/>
        <category label="eap" term="eap"/>
        <category label="eap-xp" term="eap-xp"/>
        <category label="microprofile" term="microprofile"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss: 26 June 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-06-26.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-06-26.html"/>
        <updated>2020-06-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, data grid, camel, editorial,">
      <h1>This Week in JBoss: 26 June 2020</h1>
      <p>Here we are, once again at the close of June.
Another summer has begun, albeit a little different than most.
I hope everyone is safe, healthy, and doing well.
There have been some very interesting blogs posted in the past couple of weeks that we’ll discuss in this edition, as well as a few releases.</p>
<p>Operators in Kubernetes provide an extension point for the platform.
They follow a pattern allowing you to manage resources and applications within the cluster.
An operator can be either namespace-scoped or cluster-scoped.
Did you know, however, that you can convert between the two?
That is exactly what Abhishek Koserwal details in six steps over on the <a href="https://developers.redhat.com/blog/2020/06/26/migrating-a-namespace-scoped-operator-to-a-cluster-scoped-operator/">Red Hat Developer blog</a>.
Abhishek walks you through a basic example and provides the full example as a GitHub repo.
Read the article for more information, and reasons why you may want or need to switch between the different scopes.</p>
<p>Multitenancy may be something you deal with everyday, or it may be something you’re looking at adding to your current application base.
Either way, dealing with persistence can be tricky.
Tenants must not see each other’s data, but be allowed to operate simultaneously.
Your application must also perform well while still being easy to maintain.
Rhuan Rocha has started a two part series on how to use JPA with Multitenancy over on the Red Hat Developer blog.
<a href="https://developers.redhat.com/blog/2020/06/15/jakarta-ee-multitenancy-with-jpa-on-wildfly-part-1/">The first entry</a> details the problem and presents a possible solution using WildFly and EJBs.
Expect the next installment to look more at Hibernate and JPA solutions.</p>
<p>Effortlessly building a native application is of course, one of the amazing capabilities of Quarkus.
However, when it comes to debugging, a native Quarkus application makes debugging <strong>very</strong> difficult.
A large part of this is the optimizations that happen to create that quick, small, native binary.
This debugging complication hasn’t gone unnoticed.
Andrew Dinn has been working on this problem.
He contributed a solution where the debug information is embedded with in the native image and can be access with <code>gdb</code>.
If you’d like to learn more about the solution, <a href="https://developers.redhat.com/blog/2020/06/25/debugging-graalvm-native-images-using-gdb/">read Andrew’s blog entry</a>.</p>
<p>Continuing with the Quarkus theme, Durgesh Anaokar wrote about <a href="https://developers.redhat.com/blog/2020/06/19/develop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0/">developing and testing a Quarkus Red Hat Data Grid client using Red Hat CodeReady Containers</a>.
Durgesh details installing CRC (Red Hat Code Ready Containers) and Data Grid on OpenShift 4 as well as running the client.
Naturally, his project code is hosted in GitHub, you’ll find that link in his blog entry.</p>
<p>Red Hat now has images, Universal Base Images to be exact, of OpenJDK (8 and 11) in Red Hat Enterprise Linux 8.2.
A Universal Base Image (UBI) is an OCI-compliant container base OS image with runtime and language support that can be used as the base for Docker images and Podman/Buildah images.
These will allow you to deploy and build supportable applications on Red Hat OpenShift and RHEL.
It also includes a number of additional user-space packages over a base UBI.
Read more about this <a href="https://developers.redhat.com/blog/2020/06/25/introducing-the-red-hat-build-of-the-openjdk-universal-base-images-now-in-red-hat-enterprise-linux-8-2/">over at Red Hat Developers</a>.</p>
<p>If you have been following, you’ll know the Infinispan team has been hard at work on Infinispan 11.
They are proud to announce that <a href="https://infinispan.org/blog/2020/06/15/infinispan-11/">Inifinspan 11.0.0. Final has been released</a>!
A number of improvements and features have been added to this release including clustering, CLI, Hot Rod Client improvements, non-blocking internals, and others.</p>
<p>Along with that new Infinispan release, you can now deploy a <a href="https://infinispan.org/blog/2020/06/16/native-server-announce/">natively compiled version of the Infinispan server</a>!
The memory footprint is only 286MB.
There are also native Quarkus extensions for your Quarkus based applications.</p>
<p>Not to be left out of the cloud native party, Apache Camel is <a href="https://developers.redhat.com/blog/2020/06/18/camel-k-1-0-the-serverless-integration-platform-goes-ga/">announcing the GA release of Apache Camel K 1.0</a>.
This release includes tooling, connectors, and integrations with Knative.
This is a great step forward for doing integrations with a small footprint.</p>
<p>Lastly, <a href="https://developers.redhat.com/blog/2020/06/17/red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released/">Red Hat JBoss Enterprise Application Platform Expansion Pack 1.0</a> was recently released.
This is a patch that adds MicroProfile capabilities to JBoss EAP.
There are some policy changes you will need to be aware of, but you find links to all of thosewithin the announcement.</p>
<p>Thanks again for being with us on another JBoss Editorial!</p>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/jason-porter.png"></pfe-avatar>
        <span>Jason Porter</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Jason Porter</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/jason-porter</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="data grid" term="data grid"/>
        <category label="camel" term="camel"/>
        <category label="editorial" term="editorial"/>
        <category label="" term=""/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss - 11 June 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-06-11.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-06-11.html"/>
        <updated>2020-06-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="quarkus, kogito, sso, infinispan">
      <h1>This Week in JBoss - 11 June 2020</h1>
      
    <p class="preamble"></p><p>Welcome to another edition of the JBoss Editorial where we gather news from our communities and explore developments from our projects.</p><p></p>
<div class="sect1">
<h2 id="_mandrel">Mandrel</h2>
<div class="sectionbody">
<p>There has been some exciting
<a href="https://developers.redhat.com/blog/2020/06/05/mandrel-a-community-distribution-of-graalvm-for-the-red-hat-build-of-quarkus/">news about Mandrel</a>.
You’ve likely heard of this by now but, in his announcement post, Mark explains how Red Hat has worked
with the GraalVM community to create a distribution of OpenJDK with GraalVM’s native-image
capabilities for producing native executables.</p>
</div>
</div>
<div class="sect1">
<h2 id="_ai_vs_covid_19">AI vs COVID-19</h2>
<div class="sectionbody">
<p><a href="https://developers.redhat.com/blog/2020/06/09/ai-vs-covid-19-how-java-helps-nurses-and-doctors-in-this-fight/">A recent DevNation Tech Talk</a> with
a very topical subject looks at how OptaPlanner has helped keep medical staff and patients safer with advanced planning algorithms.
It’s nice to see Java play a role in improving things for those who are at the front lines of the pandemic.</p>
</div>
</div>
<div class="sect1">
<h2 id="_in_the_community">In the Community</h2>
<div class="sectionbody">
<p>Eric Schnabell keeps his Cloud-native development series going with a look at
<a href="https://www.schabell.org/2020/06/cloud-native-development-on-remote-containers.html">example use cases for using remote container platforms as development environments</a>.</p>
<p>The Infinispan blog has seen a flurry of activity in the run up to the 11.0.0.Final release, which
should be available real soon now. In the meantime, you can read about some of the things that will be
available in Infinispan 11 here:</p>
<div class="ulist">
<ul>
<li>
<p>William Burns <a href="https://infinispan.org/blog/2020/06/09/offheap-resize/">shares some enhancements to Infinispan’s Off Heap implementation</a>
that simplify configuration and improve performance.</p>
</li>
<li>
<p>Pedro Ruivo <a href="https://infinispan.org/blog/2020/06/05/xsite-improvements/">explains how Infinispan uses vector clocks</a>
to detect conflicts with asynchronous cross-site replication as well as the strategy for resolving conflicts.</p>
</li>
</ul>
</div>
<p>Over at the Strimzi blog, there is <a href="https://strimzi.io/blog/2020/06/09/mirror-maker-2-eventhub/">another installment of the series around Mirror Maker</a>.
Check out the post for mirroring to Azure Event Hub using Mirror Maker 2.</p>
</div>
</div>
<div class="sect1">
<h2 id="_release_roundup">Release Roundup</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-5-final-released/">Quarkus 1.5.0.Final has arrived</a>, which brings a fast-jar packaging format along with several new extensions.</p>
</li>
<li>
<p><a href="https://wildfly.org/news/2020/06/08/WildFly20-Final-Released/">WildFly 20 has been released</a> with numerous bug fixes and updates.</p>
</li>
<li>
<p><a href="https://www.keycloak.org//2020/06/keycloak-1002-released.html">Keycloak 10.0.2 is here</a>. Read all about it.</p>
</li>
</ul>
</div>
<p>That’s it for this week’s editorial. Thanks for reading and see you next time.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/don-naro.png"></pfe-avatar>
        <span>Don Naro</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Don Naro</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/don-naro</uri>
        </author>
        <category label="quarkus" term="quarkus"/>
        <category label="kogito" term="kogito"/>
        <category label="sso" term="sso"/>
        <category label="infinispan" term="infinispan"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JBoss Weekly Editorial 29 May 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-05-29.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-05-29.html"/>
        <updated>2020-05-29T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="infinispan, teiid, quarkus">
      <h1>JBoss Weekly Editorial 29 May 2020</h1>
      
    <p class="preamble"></p><p>Welcome back!
Things keep rolling along for us within Middleware at Red Hat.
We have a couple of new releases and some blogs to talk about this week, so let’s dig in.</p><p></p>
<div class="sect1">
<h2 id="_releases">Releases</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p><a href="https://infinispan.org/blog/2020/05/25/infinispan-11/">Infinispan 11.0.0.0.CR1</a> - This CR release sees non-blocking internal changes, a non-blocking Store SPI, slight modifications to clustering scaling, better/more server security, CLI, kubernetes/OpenShift operator, and an update to documentation!</p>
</li>
<li>
<p><a href="https://github.com/quarkusio/quarkus/milestone/68?closed=1">Quarkus 1.5.0.Final</a> - The milestoe is done and the artifacts are in Maven Central. There are a few things left to do to offically announce the release, but all the coding is done. The link here is to the GitHub milestone for a list of issues completed.</p>
</li>
<li>
<p><a href="https://teiid.blogspot.com/2020/05/teiid-spring-boot-150-released.html">Teiid Spring Boot 1.5.0</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_blogs">Blogs</h2>
<div class="sectionbody">
<p>To go along with the Infinispan release, a couple of new blog posts have come out:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://infinispan.org/blog/2020/05/28/cli/">CLI enhancements</a></p>
</li>
<li>
<p><a href="https://infinispan.org/blog/2020/05/26/hotrod-uri/">Hot Rod URI</a>, so you can connect via Hot Rod the same way you would a JDBC datastore.</p>
</li>
</ul>
</div>
<p>Eric Schabell has a couple of entries into his Cloud-native development series:</p>
<div class="ulist">
<ul>
<li>
<p><a href="https://www.schabell.org/2020/05/cloud-native-development-a-blueprint.html">A Blueprint</a></p>
</li>
<li>
<p><a href="https://www.schabell.org/2020/05/cloud-native-development-common-architectural-elements.html">Common Architectural Elements</a></p>
</li>
</ul>
</div>
<p>There is also an entry called <a href="https://www.schabell.org/2020/05/reality-bites-3-misconceptions-can-lead-to-micorservice-mayhem-slides.html">Reality Bites: 3 misconceptions that can lead to microservice mayhem</a> discussing pitfalls to avoid while working with Microservices</p>
<p>Lastly, we want to cover episodes 2, 3, and 4 of the Quarkus Insights video podcast.
Episode 2 covers <code>quarkus:dev</code> and Command mode.
Episode 3 discusses Hibernate and Panache.
The most recent one, episode 4, talks about JHipster for Quarkus.
You can find these video pod casts at <a href="https://www.youtube.com/playlist?list=PLsM3ZE5tGAVZ5p_CTx5YPLdMbyjlzfj8y">YouTube</a> or the audio on Apple Podcasts and Spotify.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/jason-porter.png"></pfe-avatar>
        <span>Jason Porter</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Jason Porter</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/jason-porter</uri>
        </author>
        <category label="infinispan" term="infinispan"/>
        <category label="teiid" term="teiid"/>
        <category label="quarkus" term="quarkus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JBoss Weekly Editorial 14 May 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-05-14.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-05-14.html"/>
        <updated>2020-05-14T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="event-driven, codeready-containers, keycloak, devnation">
      <h1>JBoss Weekly Editorial 14 May 2020</h1>
      
    <p class="preamble"></p><p>We’re a little light on the news this time, but those of us who have been reading the editorial for a few years will be familiar with the "after Summit slump."
With Red Hat Summit behind us (and what a great Summit, check out the sessions on demand if you missed them), many people have taken PTO.
Expect all the news, blogs, releases, etc. to pick back up in the coming weeks.</p>
<p>All that being said, we do have some blogs to go over and one release.</p><p></p>
<div class="sect1">
<h2 id="_blogs">Blogs</h2>
<div class="sectionbody">
<p>First up is Eric Schabell’s second entry in his "Demystifying the Event Driven Architecture - Making the case" series.
You can read more about it <a href="https://www.schabell.org/2020/05/demystifying-event-driven-architecture-making-the-case.html">at his blog</a>.</p>
<p>We have another post by Eric: <a href="https://www.schabell.org/2020/05/code-ready-containers-installing-hr-employee-rewards-project.html">Code Ready Containers - Installing an HR employee rewards project using developer container catalog</a>.
For more information about CodeReady Containers, please visit the <a href="https://developers.redhat.com/products/codeready-containers/overview">Red Hat Developer page</a>.</p>
<p>There are a number of DevNation Tech Talks and master courses dropping within the next week, please visit the <a href="https://developers.redhat.com/devnation/">DevNation page</a> for more information.</p>
</div>
</div>
<div class="sect1">
<h2 id="_releases">Releases</h2>
<div class="sectionbody">
<p>Keycloak released a new version: <a href="https://www.keycloak.org//2020/05/keycloak-1001-released.html">Keycloak 10.0.1</a>.</p>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/jason-porter.png"></pfe-avatar>
        <span>Jason Porter</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Jason Porter</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/jason-porter</uri>
        </author>
        <category label="event-driven" term="event-driven"/>
        <category label="codeready-containers" term="codeready-containers"/>
        <category label="keycloak" term="keycloak"/>
        <category label="devnation" term="devnation"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Week in JBoss: 1 May 2020]]></title>
        <id>https://www.jboss.org/posts/weekly-2020-05-01.html</id>
        <link href="https://www.jboss.org/posts/weekly-2020-05-01.html"/>
        <updated>2020-05-01T00:00:00.000Z</updated>
        <content type="html"><![CDATA[
      <article class="" data-tags="summit, virtual, quarkus, kogito">
      <h1>This Week in JBoss: 1 May 2020</h1>
      
    <p class="preamble"></p><div class="imageblock">
<div class="content">
<a class="image" href="https://www.redhat.com/en/summit"><img src="/img/posts/rh-summit-banner.png" alt="rh summit banner"></a>
</div>
</div><p></p>
<div class="sect1">
<h2 id="_2020_04_30_the_virtual_red_hat_summit_week">[2020-04-30] - The Virtual Red Hat Summit week</h2>
<div class="sectionbody">
<p>I’m writing this as we wrap up another successful Red Hat Summit.
But this year, with a significant distinction: the event was 100%
virtual. Despite the involuntary move to virtual, there were many
benefits that came about from the change in format. The event was
completely free, and of course required no travel, allowing a much
broader and more diverse set of attendees to benefit from the
content and experience. It was also ran in three regions to
accommodate many more timezones.</p>
<p>Being Red Hat we were keen to experiment with the format and find
new ways to engage with the community. It was important for us to
carry over as much of the personality and intimacy of the physical
event as possible. So, this needed to be more than just a bunch of
streamed talks. The talks were pre-recorded which allowed the
presenter(s) to participate directly in the Q&amp;A in real-time
as the talk proceeded. There was also a variety of sessions that
went beyond the talk format. For examples see
<em>Ask the experts</em>, <em>Networking social hour</em>, and
the <em>Virtual Open Neighborhood</em> on the
<a href="https://www.redhat.com/en/summit/agenda/agenda-at-a-glance">agenda</a>.</p>
<p>If you weren’t able to attend, or want to catch some of the
talks you missed, you can <a href="https://onlinexperiences.com/Launch/QReg.htm?ShowUUID=4245E6E3-7D25-496D-9B08-4CBDC87CCE74">re-live the virtual event here</a>.</p>
<p><strong>In other news…​</strong></p>
<div class="sect2">
<h3 id="_quarkus_insights_on_youtube_live">Quarkus Insights on Youtube live</h3>
<p>This week Max Andersen and Emmanuel Bernard <a href="https://quarkus.io/blog/insights/">kicked off a new video/podcast series</a>
bringing insights into Quarkus. Each episode will focus on a
guest speaker discussing the development or usage of Quarkus.
There are also some dedicated Q&amp;A sessions planned. Be sure
to subscribe to the <a href="https://www.youtube.com/c/quarkusio">Quarkus YouTube channel</a>
to catch these sessions and other exciting Quarkus content.
In particular <a href="https://www.youtube.com/watch?v=OCPFdpvL1Q0&amp;feature=youtu.be">join them on the 4th of May</a>
where Georgios Andrianakis will talk about Quarkus testing
and specifically the new mocking improvements in the recently
released Quarkus 1.4.</p>
</div>
<div class="sect2">
<h3 id="_kogito_a_modular_codegen_design_proposal">Kogito: A Modular Codegen Design Proposal</h3>
<p>In <a href="https://planet.jboss.org/post/kogito_a_modular_codegen_design_proposal">this post</a>
Edoardo Vacchi explains how Kogito is improving performance
by moving processing out of the run-time and into build-time.</p>
</div>
<div class="sect2">
<h3 id="_red_hat_summit_2020_ask_the_experts_hybrid_multicloud_pitfalls">Red Hat Summit 2020 - Ask the Experts: Hybrid Multicloud Pitfalls</h3>
<p>In one of the many <em>Ask the Experts</em> sessions,
Eric Schabell &amp; Roel Hodzelmans focused on their hybrid
multi-cloud pitfall theories. You can
<a href="https://planet.jboss.org/post/red_hat_summit_2020_ask_the_experts_hybrid_multicloud_pitfalls_slides">view the slides here</a>,
or <a href="https://onlinexperiences.com/Launch/QReg.htm?ShowUUID=4245E6E3-7D25-496D-9B08-4CBDC87CCE74">register for the Red Hat Summit Virtual event</a>
to re-watch the content on demand.</p>
</div>
<div class="sect2">
<h3 id="_free_book_on_knative_covering_camel_k_and_kafka_and_upcoming_webinar_with_live_demos">Free book on Knative covering Camel K and Kafka and upcoming webinar with live demos</h3>
<p>In this post Claus Ibsen <a href="https://planet.jboss.org/post/free_book_on_knative_covering_camel_k_and_kafka_and_upcoming_webinar_with_live_demos">alerts us to the free eBook</a>
written by Burr Sutter &amp; Kamesh Sampath on the subject of Knative. Go get your
free copy <a href="https://developers.redhat.com/books/knative-cookbook/">here</a>!</p>
</div>
<div class="sect2">
<h3 id="_red_hat_summit_2020_business_automation_sessions">Red Hat Summit 2020 - Business Automation Sessions</h3>
<p>If you are interested in the area of <em>Business Automation</em>, be sure to view Kris
Verlaenen’s <a href="https://planet.jboss.org/post/virtual_red_hat_summit_2020_april_28_29">helpful summary</a>
of all the BI related talks held at Red Hat Summit.</p>
</div>
<div class="sect2">
<h3 id="_demystifying_the_event_driven_architecture_an_introduction_part_1">Demystifying the Event Driven Architecture - An introduction (part 1)</h3>
<p>Eric Schabell has <a href="https://planet.jboss.org/post/demystifying_the_event_driven_architecture_an_introduction_part_1">started a new blog series</a>
that explores the world of Event Driven Architectures (EDA).</p>
</div>
<div class="sect2">
<h3 id="_six_reasons_why_you_will_love_camel_k">Six reasons why you will love Camel K</h3>
<p>Interested in Camel K, or want to find out what all the fuss is about?
<a href="https://planet.jboss.org/post/six_reasons_why_you_will_love_camel_k">Read on</a>,
and Christina will give you six reasons to love Camel K.</p>
</div>
<div class="sect2">
<h3 id="_hybrid_clouds_with_jgroups_and_skupper">Hybrid clouds with JGroups and Skupper</h3>
<p>Bela Ban follows up on his post explaining how to
<a href="http://belaban.blogspot.com/2019/12/spanning-jgroups-kubernetes-based.html">span JGroups Kubernetes-based clusters across Google and Amazon clouds</a>.
In <a href="https://planet.jboss.org/post/hybrid_clouds_with_jgroups_and_skupper">this new post</a>
Bela improves on the process by using <a href="https://skupper.io/">Skupper</a> to simplify this
task and encrypt the data exchanged between different clouds.</p>
</div>
<div class="sect2">
<h3 id="_this_weeks_releases">This Week’s Releases</h3>
<div class="ulist">
<ul>
<li>
<p><a href="https://quarkus.io/blog/quarkus-1-4-final-released/">Quarkus 1.4</a>. Command mode, HTTP 2, New FaaS framework, Mocking, and more.</p>
</li>
<li>
<p><a href="https://www.keycloak.org//2020/04/keycloak-1000-released.html">Keycloak 10.0.0</a>.
With <em>Identity Brokering Sync Mode</em>, <em>Client Session Timeout for OpenID Connect / OAuth 2.0</em>
and much more.</p>
</li>
<li>
<p><a href="https://planet.jboss.org/post/kogito_0_9_1_released">Kogito 0.9.1</a>. This release
is a bug fix release, but there has also been considerable work spent on
documentation and code examples. See the link for detais.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
      
      <div class="author">
        <pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/paul-robinson.png"></pfe-avatar>
        <span>Paul Robinson</span>
    
      </div></article>
  ]]></content>
        <author>
            <name>Paul Robinson</name>
            <email>do-not-reply@jboss.com</email>
            <uri>https://www.jboss.org/people/paul-robinson</uri>
        </author>
        <category label="summit" term="summit"/>
        <category label="virtual" term="virtual"/>
        <category label="quarkus" term="quarkus"/>
        <category label="kogito" term="kogito"/>
    </entry>
</feed>